{
  "schemaVersion": "3.0.0",
  "ModuleTypes": {
    "aws-cdk-lib.aws_lambda": {
      "ResourceTypes": {
        "Alias": {
          "Properties": {
            "maxEventAge": {
              "Remarks": "Minimum: 60 seconds\nMaximum: 6 hours",
              "Summary": "The maximum age of a request that Lambda sends to a function for processing.",
              "Required": false,
              "Type": "aws-cdk-lib.Duration"
            },
            "onFailure": {
              "Remarks": "",
              "Summary": "The destination for failed invocations.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.IDestination"
            },
            "onSuccess": {
              "Remarks": "",
              "Summary": "The destination for successful invocations.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.IDestination"
            },
            "retryAttempts": {
              "Remarks": "Minimum: 0\nMaximum: 2",
              "Summary": "The maximum number of times to retry when the function returns an error.",
              "Required": false,
              "Type": "Number"
            },
            "additionalVersions": {
              "Remarks": "Individual additional version weights specified here should add up to\n(less than) one. All remaining weight is routed to the default\nversion.\n\nFor example, the config is\n\n   version: \"1\"\n   additionalVersions: [{ version: \"2\", weight: 0.05 }]\n\nThen 5% of traffic will be routed to function version 2, while\nthe remaining 95% of traffic will be routed to function version 1.",
              "Summary": "Additional versions with individual weights this alias points to.",
              "Required": false,
              "Type": "List",
              "ItemType": "aws-cdk-lib.aws_lambda.VersionWeight"
            },
            "description": {
              "Remarks": "",
              "Summary": "Description for the alias.",
              "Required": false,
              "Type": "String"
            },
            "provisionedConcurrentExecutions": {
              "Remarks": "",
              "Summary": "Specifies a provisioned concurrency configuration for a function's alias.",
              "Required": false,
              "Type": "Number"
            },
            "aliasName": {
              "Remarks": "",
              "Summary": "Name of this alias.",
              "Required": true,
              "Type": "String"
            },
            "version": {
              "Remarks": "Use lambda.currentVersion to reference a version with your latest changes.",
              "Summary": "Function version this alias refers to.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IVersion"
            }
          },
          "Methods": {
            "aws-cdk-lib.aws_lambda.Alias.isConstruct": {
              "Parameters": {
                "x": {
                  "Summary": "Any object.",
                  "Type": "Any"
                }
              },
              "Summary": "Checks if `x` is a construct.",
              "Remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead.",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "toString": {
              "Parameters": {},
              "Summary": "Returns a string representation of this construct.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "aws-cdk-lib.aws_lambda.Alias.isOwnedResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Returns true if the construct was created by CDK, and false otherwise.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "aws-cdk-lib.aws_lambda.Alias.isResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Check whether the given construct is a Resource.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "applyRemovalPolicy": {
              "Parameters": {
                "policy": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.RemovalPolicy"
                }
              },
              "Summary": "Apply the given removal policy to this resource.",
              "Remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
              "Static": false
            },
            "generatePhysicalName": {
              "Parameters": {},
              "Summary": "",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceArnAttribute": {
              "Parameters": {
                "arnAttr": {
                  "Summary": "The CFN attribute which resolves to the ARN of the resource.",
                  "Type": "String"
                },
                "arnComponents": {
                  "Summary": "The format of the ARN of this resource.",
                  "Type": "aws-cdk-lib.ArnComponents"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"ARN\" attribute (e.g. `bucket.bucketArn`).",
              "Remarks": "Normally, this token will resolve to `arnAttr`, but if the resource is\nreferenced across environments, `arnComponents` will be used to synthesize\na concrete ARN with the resource's physical name. Make sure to reference\n`this.physicalName` in `arnComponents`.",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceNameAttribute": {
              "Parameters": {
                "nameAttr": {
                  "Summary": "The CFN attribute which resolves to the resource's name.",
                  "Type": "String"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"name\" attribute (e.g. `bucket.bucketName`).",
              "Remarks": "Normally, this token will resolve to `nameAttr`, but if the resource is\nreferenced across environments, it will be resolved to `this.physicalName`,\nwhich will be a concrete name.",
              "Static": false,
              "ReturnType": "String"
            },
            "addEventSource": {
              "Parameters": {
                "source": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IEventSource"
                }
              },
              "Summary": "Adds an event source to this function.",
              "Remarks": "Event sources are implemented in the aws-cdk-lib/aws-lambda-event-sources module.\n\nThe following example adds an SQS Queue as an event source:\n```\nimport { SqsEventSource } from 'aws-cdk-lib/aws-lambda-event-sources';\nmyFunction.addEventSource(new SqsEventSource(myQueue));\n```",
              "Static": false
            },
            "addEventSourceMapping": {
              "Parameters": {
                "id": {
                  "Summary": "",
                  "Type": "String"
                },
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.EventSourceMappingOptions"
                }
              },
              "Summary": "Adds an event source that maps to this AWS Lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.EventSourceMapping"
            },
            "addFunctionUrl": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.FunctionUrlOptions"
                }
              },
              "Summary": "Adds a url to this lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.FunctionUrl"
            },
            "addPermission": {
              "Parameters": {
                "id": {
                  "Summary": "The id for the permission construct.",
                  "Type": "String"
                },
                "permission": {
                  "Summary": "The permission to grant to this Lambda function.",
                  "Type": "aws-cdk-lib.aws_lambda.Permission"
                }
              },
              "Summary": "Adds a permission to the Lambda resource policy.",
              "Remarks": "",
              "Static": false
            },
            "addToRolePolicy": {
              "Parameters": {
                "statement": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.PolicyStatement"
                }
              },
              "Summary": "Adds a statement to the IAM role assumed by the instance.",
              "Remarks": "",
              "Static": false
            },
            "configureAsyncInvoke": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.EventInvokeConfigOptions"
                }
              },
              "Summary": "Configures options for asynchronous invocation.",
              "Remarks": "",
              "Static": false
            },
            "considerWarningOnInvokeFunctionPermissions": {
              "Parameters": {
                "_scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                },
                "_action": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "A warning will be added to functions under the following conditions: - permissions that include `lambda:InvokeFunction` are added to the unqualified function.",
              "Remarks": "- function.currentVersion is invoked before or after the permission is created.\n\nThis applies only to permissions on Lambda functions, not versions or aliases.\nThis function is overridden as a noOp for QualifiedFunctionBase.",
              "Static": false
            },
            "grantInvoke": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeCompositePrincipal": {
              "Parameters": {
                "compositePrincipal": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.CompositePrincipal"
                }
              },
              "Summary": "Grant multiple principals the ability to invoke this Lambda via CompositePrincipal.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "List"
            },
            "grantInvokeLatestVersion": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke the $LATEST version or unqualified version of this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeUrl": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda Function URL.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeVersion": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                },
                "version": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IVersion"
                }
              },
              "Summary": "Grant the given identity permissions to invoke the given version of this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "metric": {
              "Parameters": {
                "metricName": {
                  "Summary": "",
                  "Type": "String"
                },
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Return the given named metric for this Function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricDuration": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How long execution of this Lambda takes.",
              "Remarks": "Average over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricErrors": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How many invocations of this Lambda fail.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricInvocations": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How often this Lambda is invoked.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricThrottles": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How often this Lambda is throttled.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "warnInvokeFunctionPermissions": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                }
              },
              "Summary": "",
              "Remarks": "",
              "Static": false
            },
            "aws-cdk-lib.aws_lambda.Alias.fromAliasAttributes": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                },
                "id": {
                  "Summary": "",
                  "Type": "String"
                },
                "attrs": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.AliasAttributes"
                }
              },
              "Summary": "",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.IAlias"
            },
            "addAutoScaling": {
              "Parameters": {
                "options": {
                  "Summary": "Autoscaling options.",
                  "Type": "aws-cdk-lib.aws_lambda.AutoScalingOptions"
                }
              },
              "Summary": "Configure provisioned concurrency autoscaling on a function alias.",
              "Remarks": "Returns a scalable attribute that can call\n`scaleOnUtilization()` and `scaleOnSchedule()`.",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.IScalableFunctionAttribute"
            }
          },
          "PublicProperties": {
            "node": {
              "Remarks": "",
              "Summary": "The tree node.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "env": {
              "Remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
              "Summary": "The environment this resource belongs to.",
              "Required": true,
              "Type": "aws-cdk-lib.ResourceEnvironment"
            },
            "stack": {
              "Remarks": "",
              "Summary": "The stack in which this resource is defined.",
              "Required": true,
              "Type": "aws-cdk-lib.Stack"
            },
            "architecture": {
              "Remarks": "",
              "Summary": "The architecture of this Lambda Function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Architecture"
            },
            "connections": {
              "Remarks": "Will fail if not a VPC-enabled Lambda Function",
              "Summary": "Access the Connections object.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_ec2.Connections"
            },
            "functionArn": {
              "Remarks": "Used to be able to use Alias in place of a regular Lambda. Lambda accepts\nARNs everywhere it accepts function names.",
              "Summary": "ARN of this alias.",
              "Required": true,
              "Type": "String"
            },
            "functionName": {
              "Remarks": "Used to be able to use Alias in place of a regular Lambda. Lambda accepts\nARNs everywhere it accepts function names.",
              "Summary": "ARN of this alias.",
              "Required": true,
              "Type": "String"
            },
            "grantPrincipal": {
              "Remarks": "",
              "Summary": "The principal this Lambda Function is running as.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_iam.IPrincipal"
            },
            "isBoundToVpc": {
              "Remarks": "If this is is `false`, trying to access the `connections` object will fail.",
              "Summary": "Whether or not this Lambda function was bound to a VPC.",
              "Required": true,
              "Type": "Boolean"
            },
            "latestVersion": {
              "Remarks": "Note that this is reference to a non-specific AWS Lambda version, which\nmeans the function this version refers to can return different results in\ndifferent invocations.\n\nTo obtain a reference to an explicit version which references the current\nfunction configuration, use `lambdaFunction.currentVersion` instead.",
              "Summary": "The `$LATEST` version of this function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IVersion"
            },
            "permissionsNode": {
              "Remarks": "",
              "Summary": "The construct node where permissions are attached.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "resourceArnsForGrantInvoke": {
              "Remarks": "",
              "Summary": "The ARN(s) to put into the resource field of the generated IAM policy for grantInvoke().",
              "Required": true,
              "Type": "List",
              "ItemType": "String"
            },
            "role": {
              "Remarks": "Undefined if the function was imported without a role.",
              "Summary": "The IAM role associated with this function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_iam.IRole"
            },
            "lambda": {
              "Remarks": "",
              "Summary": "The underlying `IFunction`.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IFunction"
            },
            "aliasName": {
              "Remarks": "",
              "Summary": "Name of this alias.",
              "Required": true,
              "Type": "String"
            },
            "version": {
              "Remarks": "",
              "Summary": "The underlying Lambda function version.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IVersion"
            }
          }
        },
        "CodeSigningConfig": {
          "Properties": {
            "signingProfiles": {
              "Remarks": "",
              "Summary": "List of signing profiles that defines a trusted user who can sign a code package.",
              "Required": true,
              "Type": "List",
              "ItemType": "aws-cdk-lib.aws_signer.ISigningProfile"
            },
            "description": {
              "Remarks": "",
              "Summary": "Code signing configuration description.",
              "Required": false,
              "Type": "String"
            },
            "untrustedArtifactOnDeployment": {
              "Remarks": "If you set the policy to Enforce, Lambda blocks the deployment request\nif signature validation checks fail.\nIf you set the policy to Warn, Lambda allows the deployment and\ncreates a CloudWatch log.",
              "Summary": "Code signing configuration policy for deployment validation failure.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.UntrustedArtifactOnDeployment"
            }
          },
          "Methods": {
            "aws-cdk-lib.aws_lambda.CodeSigningConfig.isConstruct": {
              "Parameters": {
                "x": {
                  "Summary": "Any object.",
                  "Type": "Any"
                }
              },
              "Summary": "Checks if `x` is a construct.",
              "Remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead.",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "toString": {
              "Parameters": {},
              "Summary": "Returns a string representation of this construct.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "aws-cdk-lib.aws_lambda.CodeSigningConfig.isOwnedResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Returns true if the construct was created by CDK, and false otherwise.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "aws-cdk-lib.aws_lambda.CodeSigningConfig.isResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Check whether the given construct is a Resource.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "applyRemovalPolicy": {
              "Parameters": {
                "policy": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.RemovalPolicy"
                }
              },
              "Summary": "Apply the given removal policy to this resource.",
              "Remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
              "Static": false
            },
            "generatePhysicalName": {
              "Parameters": {},
              "Summary": "",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceArnAttribute": {
              "Parameters": {
                "arnAttr": {
                  "Summary": "The CFN attribute which resolves to the ARN of the resource.",
                  "Type": "String"
                },
                "arnComponents": {
                  "Summary": "The format of the ARN of this resource.",
                  "Type": "aws-cdk-lib.ArnComponents"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"ARN\" attribute (e.g. `bucket.bucketArn`).",
              "Remarks": "Normally, this token will resolve to `arnAttr`, but if the resource is\nreferenced across environments, `arnComponents` will be used to synthesize\na concrete ARN with the resource's physical name. Make sure to reference\n`this.physicalName` in `arnComponents`.",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceNameAttribute": {
              "Parameters": {
                "nameAttr": {
                  "Summary": "The CFN attribute which resolves to the resource's name.",
                  "Type": "String"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"name\" attribute (e.g. `bucket.bucketName`).",
              "Remarks": "Normally, this token will resolve to `nameAttr`, but if the resource is\nreferenced across environments, it will be resolved to `this.physicalName`,\nwhich will be a concrete name.",
              "Static": false,
              "ReturnType": "String"
            },
            "aws-cdk-lib.aws_lambda.CodeSigningConfig.fromCodeSigningConfigArn": {
              "Parameters": {
                "scope": {
                  "Summary": "The parent creating construct (usually `this`).",
                  "Type": "constructs.Construct"
                },
                "id": {
                  "Summary": "The construct's name.",
                  "Type": "String"
                },
                "codeSigningConfigArn": {
                  "Summary": "The ARN of code signing config.",
                  "Type": "String"
                }
              },
              "Summary": "Creates a Signing Profile construct that represents an external Signing Profile.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.ICodeSigningConfig"
            }
          },
          "PublicProperties": {
            "node": {
              "Remarks": "",
              "Summary": "The tree node.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "env": {
              "Remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
              "Summary": "The environment this resource belongs to.",
              "Required": true,
              "Type": "aws-cdk-lib.ResourceEnvironment"
            },
            "stack": {
              "Remarks": "",
              "Summary": "The stack in which this resource is defined.",
              "Required": true,
              "Type": "aws-cdk-lib.Stack"
            },
            "codeSigningConfigArn": {
              "Remarks": "",
              "Summary": "The ARN of Code Signing Config.",
              "Required": true,
              "Type": "String"
            },
            "codeSigningConfigId": {
              "Remarks": "",
              "Summary": "The id of Code Signing Config.",
              "Required": true,
              "Type": "String"
            }
          }
        },
        "DockerImageFunction": {
          "Properties": {
            "maxEventAge": {
              "Remarks": "Minimum: 60 seconds\nMaximum: 6 hours",
              "Summary": "The maximum age of a request that Lambda sends to a function for processing.",
              "Required": false,
              "Type": "aws-cdk-lib.Duration"
            },
            "onFailure": {
              "Remarks": "",
              "Summary": "The destination for failed invocations.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.IDestination"
            },
            "onSuccess": {
              "Remarks": "",
              "Summary": "The destination for successful invocations.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.IDestination"
            },
            "retryAttempts": {
              "Remarks": "Minimum: 0\nMaximum: 2",
              "Summary": "The maximum number of times to retry when the function returns an error.",
              "Required": false,
              "Type": "Number"
            },
            "adotInstrumentation": {
              "Remarks": "",
              "Summary": "Specify the configuration of AWS Distro for OpenTelemetry (ADOT) instrumentation.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.AdotInstrumentationConfig"
            },
            "allowAllIpv6Outbound": {
              "Remarks": "If set to true, there will only be a single egress rule which allows all\noutbound ipv6 traffic. If set to false, you must individually add traffic rules to allow the\nLambda to connect to network targets using ipv6.\n\nDo not specify this property if the `securityGroups` or `securityGroup` property is set.\nInstead, configure `allowAllIpv6Outbound` directly on the security group.",
              "Summary": "Whether to allow the Lambda to send all ipv6 network traffic.",
              "Required": false,
              "Type": "Boolean"
            },
            "allowAllOutbound": {
              "Remarks": "If set to false, you must individually add traffic rules to allow the\nLambda to connect to network targets.\n\nDo not specify this property if the `securityGroups` or `securityGroup` property is set.\nInstead, configure `allowAllOutbound` directly on the security group.",
              "Summary": "Whether to allow the Lambda to send all network traffic (except ipv6).",
              "Required": false,
              "Type": "Boolean"
            },
            "allowPublicSubnet": {
              "Remarks": "Use this property to acknowledge this limitation and still place the function in a public subnet.",
              "Summary": "Lambda Functions in a public subnet can NOT access the internet.",
              "Required": false,
              "Type": "Boolean"
            },
            "applicationLogLevel": {
              "Remarks": "",
              "Summary": "Sets the application log level for the function.",
              "Required": false,
              "Type": "String"
            },
            "applicationLogLevelV2": {
              "Remarks": "",
              "Summary": "Sets the application log level for the function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.ApplicationLogLevel"
            },
            "architecture": {
              "Remarks": "",
              "Summary": "The system architectures compatible with this lambda function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.Architecture"
            },
            "codeSigningConfig": {
              "Remarks": "",
              "Summary": "Code signing config associated with this function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.ICodeSigningConfig"
            },
            "currentVersionOptions": {
              "Remarks": "",
              "Summary": "Options for the `lambda.Version` resource automatically created by the `fn.currentVersion` method.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.VersionOptions"
            },
            "deadLetterQueue": {
              "Remarks": "If SNS topic is desired, specify `deadLetterTopic` property instead.",
              "Summary": "The SQS queue to use if DLQ is enabled.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_sqs.IQueue"
            },
            "deadLetterQueueEnabled": {
              "Remarks": "If `deadLetterQueue` is undefined,\nan SQS queue with default options will be defined for your Function.",
              "Summary": "Enabled DLQ.",
              "Required": false,
              "Type": "Boolean"
            },
            "deadLetterTopic": {
              "Remarks": "Note that if `deadLetterQueueEnabled` is set to `true`, an SQS queue will be created\nrather than an SNS topic. Using an SNS topic as a DLQ requires this property to be set explicitly.",
              "Summary": "The SNS topic to use as a DLQ.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_sns.ITopic"
            },
            "description": {
              "Remarks": "",
              "Summary": "A description of the function.",
              "Required": false,
              "Type": "String"
            },
            "environment": {
              "Remarks": "Use environment variables to apply configuration changes, such\nas test and production environment configurations, without changing your\nLambda function source code.",
              "Summary": "Key-value pairs that Lambda caches and makes available for your Lambda functions.",
              "Required": false,
              "Type": "Map",
              "ItemType": "String"
            },
            "environmentEncryption": {
              "Remarks": "",
              "Summary": "The AWS KMS key that's used to encrypt your function's environment variables.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_kms.IKey"
            },
            "ephemeralStorageSize": {
              "Remarks": "",
              "Summary": "The size of the function’s /tmp directory in MiB.",
              "Required": false,
              "Type": "aws-cdk-lib.Size"
            },
            "events": {
              "Remarks": "You can also add event sources using `addEventSource`.",
              "Summary": "Event sources for this function.",
              "Required": false,
              "Type": "List",
              "ItemType": "aws-cdk-lib.aws_lambda.IEventSource"
            },
            "filesystem": {
              "Remarks": "",
              "Summary": "The filesystem configuration for the lambda function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.FileSystem"
            },
            "functionName": {
              "Remarks": "",
              "Summary": "A name for the function.",
              "Required": false,
              "Type": "String"
            },
            "initialPolicy": {
              "Remarks": "You can call `addToRolePolicy` to the created lambda to add statements post creation.",
              "Summary": "Initial policy statements to add to the created Lambda Role.",
              "Required": false,
              "Type": "List",
              "ItemType": "aws-cdk-lib.aws_iam.PolicyStatement"
            },
            "insightsVersion": {
              "Remarks": "",
              "Summary": "Specify the version of CloudWatch Lambda insights to use for monitoring.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.LambdaInsightsVersion"
            },
            "ipv6AllowedForDualStack": {
              "Remarks": "Only used if 'vpc' is supplied.",
              "Summary": "Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.",
              "Required": false,
              "Type": "Boolean"
            },
            "layers": {
              "Remarks": "You can configure your Lambda function to pull in\nadditional code during initialization in the form of layers. Layers are packages of libraries or other dependencies\nthat can be used by multiple functions.",
              "Summary": "A list of layers to add to the function's execution environment.",
              "Required": false,
              "Type": "List",
              "ItemType": "aws-cdk-lib.aws_lambda.ILayerVersion"
            },
            "logFormat": {
              "Remarks": "",
              "Summary": "Sets the logFormat for the function.",
              "Required": false,
              "Type": "String"
            },
            "loggingFormat": {
              "Remarks": "",
              "Summary": "Sets the loggingFormat for the function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.LoggingFormat"
            },
            "logGroup": {
              "Remarks": "By default, Lambda functions send logs to an automatically created default log group named /aws/lambda/\\<function name\\>.\nHowever you cannot change the properties of this auto-created log group using the AWS CDK, e.g. you cannot set a different log retention.\n\nUse the `logGroup` property to create a fully customizable LogGroup ahead of time, and instruct the Lambda function to send logs to it.\n\nProviding a user-controlled log group was rolled out to commercial regions on 2023-11-16.\nIf you are deploying to another type of region, please check regional availability first.",
              "Summary": "The log group the function sends logs to.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_logs.ILogGroup"
            },
            "logRetention": {
              "Remarks": "When updating\nthis property, unsetting it doesn't remove the log retention policy. To\nremove the retention policy, set the value to `INFINITE`.\n\nThis is a legacy API and we strongly recommend you move away from it if you can.\nInstead create a fully customizable log group with `logs.LogGroup` and use the `logGroup` property\nto instruct the Lambda function to send logs to it.\nMigrating from `logRetention` to `logGroup` will cause the name of the log group to change.\nUsers and code and referencing the name verbatim will have to adjust.\n\nIn AWS CDK code, you can access the log group name directly from the LogGroup construct:\n```ts\nimport * as logs from 'aws-cdk-lib/aws-logs';\n\ndeclare const myLogGroup: logs.LogGroup;\nmyLogGroup.logGroupName;\n```",
              "Summary": "The number of days log events are kept in CloudWatch Logs.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_logs.RetentionDays"
            },
            "logRetentionRetryOptions": {
              "Remarks": "These options control the retry policy when interacting with CloudWatch APIs.\n\nThis is a legacy API and we strongly recommend you migrate to `logGroup` if you can.\n`logGroup` allows you to create a fully customizable log group and instruct the Lambda function to send logs to it.",
              "Summary": "When log retention is specified, a custom resource attempts to create the CloudWatch log group.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.LogRetentionRetryOptions"
            },
            "logRetentionRole": {
              "Remarks": "This is a legacy API and we strongly recommend you migrate to `logGroup` if you can.\n`logGroup` allows you to create a fully customizable log group and instruct the Lambda function to send logs to it.",
              "Summary": "The IAM role for the Lambda function associated with the custom resource that sets the retention policy.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_iam.IRole"
            },
            "memorySize": {
              "Remarks": "Lambda uses this value to proportionally allocate the amount of CPU\npower. For more information, see Resource Model in the AWS Lambda\nDeveloper Guide.",
              "Summary": "The amount of memory, in MB, that is allocated to your Lambda function.",
              "Required": false,
              "Type": "Number"
            },
            "paramsAndSecrets": {
              "Remarks": "",
              "Summary": "Specify the configuration of Parameters and Secrets Extension.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.ParamsAndSecretsLayerVersion"
            },
            "profiling": {
              "Remarks": "",
              "Summary": "Enable profiling.",
              "Required": false,
              "Type": "Boolean"
            },
            "profilingGroup": {
              "Remarks": "",
              "Summary": "Profiling Group.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_codeguruprofiler.IProfilingGroup"
            },
            "recursiveLoop": {
              "Remarks": "It lets Lambda detect and terminate unintended recursive loops.",
              "Summary": "Sets the Recursive Loop Protection for Lambda Function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.RecursiveLoop"
            },
            "reservedConcurrentExecutions": {
              "Remarks": "",
              "Summary": "The maximum of concurrent executions you want to reserve for the function.",
              "Required": false,
              "Type": "Number"
            },
            "role": {
              "Remarks": "This is the role that will be assumed by the function upon execution.\nIt controls the permissions that the function will have. The Role must\nbe assumable by the 'lambda.amazonaws.com' service principal.\n\nThe default Role automatically has permissions granted for Lambda execution. If you\nprovide a Role, you must add the relevant AWS managed policies yourself.\n\nThe relevant managed policies are \"service-role/AWSLambdaBasicExecutionRole\" and\n\"service-role/AWSLambdaVPCAccessExecutionRole\".",
              "Summary": "Lambda execution role.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_iam.IRole"
            },
            "runtimeManagementMode": {
              "Remarks": "",
              "Summary": "Sets the runtime management configuration for a function's version.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.RuntimeManagementMode"
            },
            "securityGroups": {
              "Remarks": "Only used if 'vpc' is supplied.",
              "Summary": "The list of security groups to associate with the Lambda's network interfaces.",
              "Required": false,
              "Type": "List",
              "ItemType": "aws-cdk-lib.aws_ec2.ISecurityGroup"
            },
            "snapStart": {
              "Remarks": "SnapStart is currently supported for Java 11, Java 17, Python 3.12, Python 3.13, and .NET 8 runtime",
              "Summary": "Enable SnapStart for Lambda Function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.SnapStartConf"
            },
            "systemLogLevel": {
              "Remarks": "",
              "Summary": "Sets the system log level for the function.",
              "Required": false,
              "Type": "String"
            },
            "systemLogLevelV2": {
              "Remarks": "",
              "Summary": "Sets the system log level for the function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.SystemLogLevel"
            },
            "timeout": {
              "Remarks": "Because the execution time affects cost, set this value\nbased on the function's expected execution time.",
              "Summary": "The function execution time (in seconds) after which Lambda terminates the function.",
              "Required": false,
              "Type": "aws-cdk-lib.Duration"
            },
            "tracing": {
              "Remarks": "",
              "Summary": "Enable AWS X-Ray Tracing for Lambda Function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.Tracing"
            },
            "vpc": {
              "Remarks": "Specify this if the Lambda function needs to access resources in a VPC.\nThis is required when `vpcSubnets` is specified.",
              "Summary": "VPC network to place Lambda network interfaces.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_ec2.IVpc"
            },
            "vpcSubnets": {
              "Remarks": "This requires `vpc` to be specified in order for interfaces to actually be\nplaced in the subnets. If `vpc` is not specify, this will raise an error.\n\nNote: Internet access for Lambda Functions requires a NAT Gateway, so picking\npublic subnets is not allowed (unless `allowPublicSubnet` is set to `true`).",
              "Summary": "Where to place the network interfaces within the VPC.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_ec2.SubnetSelection"
            },
            "code": {
              "Remarks": "You can point to a file in an\nAmazon Simple Storage Service (Amazon S3) bucket or specify your source\ncode as inline text.",
              "Summary": "The source code of your Lambda function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.DockerImageCode"
            }
          },
          "Methods": {
            "aws-cdk-lib.aws_lambda.DockerImageFunction.isConstruct": {
              "Parameters": {
                "x": {
                  "Summary": "Any object.",
                  "Type": "Any"
                }
              },
              "Summary": "Checks if `x` is a construct.",
              "Remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead.",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "toString": {
              "Parameters": {},
              "Summary": "Returns a string representation of this construct.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "aws-cdk-lib.aws_lambda.DockerImageFunction.isOwnedResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Returns true if the construct was created by CDK, and false otherwise.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "aws-cdk-lib.aws_lambda.DockerImageFunction.isResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Check whether the given construct is a Resource.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "applyRemovalPolicy": {
              "Parameters": {
                "policy": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.RemovalPolicy"
                }
              },
              "Summary": "Apply the given removal policy to this resource.",
              "Remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
              "Static": false
            },
            "generatePhysicalName": {
              "Parameters": {},
              "Summary": "",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceArnAttribute": {
              "Parameters": {
                "arnAttr": {
                  "Summary": "The CFN attribute which resolves to the ARN of the resource.",
                  "Type": "String"
                },
                "arnComponents": {
                  "Summary": "The format of the ARN of this resource.",
                  "Type": "aws-cdk-lib.ArnComponents"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"ARN\" attribute (e.g. `bucket.bucketArn`).",
              "Remarks": "Normally, this token will resolve to `arnAttr`, but if the resource is\nreferenced across environments, `arnComponents` will be used to synthesize\na concrete ARN with the resource's physical name. Make sure to reference\n`this.physicalName` in `arnComponents`.",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceNameAttribute": {
              "Parameters": {
                "nameAttr": {
                  "Summary": "The CFN attribute which resolves to the resource's name.",
                  "Type": "String"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"name\" attribute (e.g. `bucket.bucketName`).",
              "Remarks": "Normally, this token will resolve to `nameAttr`, but if the resource is\nreferenced across environments, it will be resolved to `this.physicalName`,\nwhich will be a concrete name.",
              "Static": false,
              "ReturnType": "String"
            },
            "addEventSource": {
              "Parameters": {
                "source": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IEventSource"
                }
              },
              "Summary": "Adds an event source to this function.",
              "Remarks": "Event sources are implemented in the aws-cdk-lib/aws-lambda-event-sources module.\n\nThe following example adds an SQS Queue as an event source:\n```\nimport { SqsEventSource } from 'aws-cdk-lib/aws-lambda-event-sources';\nmyFunction.addEventSource(new SqsEventSource(myQueue));\n```",
              "Static": false
            },
            "addEventSourceMapping": {
              "Parameters": {
                "id": {
                  "Summary": "",
                  "Type": "String"
                },
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.EventSourceMappingOptions"
                }
              },
              "Summary": "Adds an event source that maps to this AWS Lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.EventSourceMapping"
            },
            "addFunctionUrl": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.FunctionUrlOptions"
                }
              },
              "Summary": "Adds a url to this lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.FunctionUrl"
            },
            "addPermission": {
              "Parameters": {
                "id": {
                  "Summary": "The id for the permission construct.",
                  "Type": "String"
                },
                "permission": {
                  "Summary": "The permission to grant to this Lambda function.",
                  "Type": "aws-cdk-lib.aws_lambda.Permission"
                }
              },
              "Summary": "Adds a permission to the Lambda resource policy.",
              "Remarks": "",
              "Static": false
            },
            "addToRolePolicy": {
              "Parameters": {
                "statement": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.PolicyStatement"
                }
              },
              "Summary": "Adds a statement to the IAM role assumed by the instance.",
              "Remarks": "",
              "Static": false
            },
            "configureAsyncInvoke": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.EventInvokeConfigOptions"
                }
              },
              "Summary": "Configures options for asynchronous invocation.",
              "Remarks": "",
              "Static": false
            },
            "considerWarningOnInvokeFunctionPermissions": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                },
                "action": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "A warning will be added to functions under the following conditions: - permissions that include `lambda:InvokeFunction` are added to the unqualified function.",
              "Remarks": "- function.currentVersion is invoked before or after the permission is created.\n\nThis applies only to permissions on Lambda functions, not versions or aliases.\nThis function is overridden as a noOp for QualifiedFunctionBase.",
              "Static": false
            },
            "grantInvoke": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeCompositePrincipal": {
              "Parameters": {
                "compositePrincipal": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.CompositePrincipal"
                }
              },
              "Summary": "Grant multiple principals the ability to invoke this Lambda via CompositePrincipal.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "List"
            },
            "grantInvokeLatestVersion": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke the $LATEST version or unqualified version of this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeUrl": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda Function URL.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeVersion": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                },
                "version": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IVersion"
                }
              },
              "Summary": "Grant the given identity permissions to invoke the given version of this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "metric": {
              "Parameters": {
                "metricName": {
                  "Summary": "",
                  "Type": "String"
                },
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Return the given named metric for this Function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricDuration": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How long execution of this Lambda takes.",
              "Remarks": "Average over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricErrors": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How many invocations of this Lambda fail.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricInvocations": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How often this Lambda is invoked.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricThrottles": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How often this Lambda is throttled.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "warnInvokeFunctionPermissions": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                }
              },
              "Summary": "",
              "Remarks": "",
              "Static": false
            },
            "aws-cdk-lib.aws_lambda.DockerImageFunction.classifyVersionProperty": {
              "Parameters": {
                "propertyName": {
                  "Summary": "The property to classify.",
                  "Type": "String"
                },
                "locked": {
                  "Summary": "whether the property should be associated to the version or not.",
                  "Type": "Boolean"
                }
              },
              "Summary": "Record whether specific properties in the `AWS::Lambda::Function` resource should also be associated to the Version resource.",
              "Remarks": "See 'currentVersion' section in the module README for more details.",
              "Static": true
            },
            "aws-cdk-lib.aws_lambda.DockerImageFunction.fromFunctionArn": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                },
                "id": {
                  "Summary": "",
                  "Type": "String"
                },
                "functionArn": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "Import a lambda function into the CDK using its ARN.",
              "Remarks": "For `Function.addPermissions()` to work on this imported lambda, make sure that is\nin the same account and region as the stack you are importing it into.",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.IFunction"
            },
            "aws-cdk-lib.aws_lambda.DockerImageFunction.fromFunctionAttributes": {
              "Parameters": {
                "scope": {
                  "Summary": "The parent construct.",
                  "Type": "constructs.Construct"
                },
                "id": {
                  "Summary": "The name of the lambda construct.",
                  "Type": "String"
                },
                "attrs": {
                  "Summary": "the attributes of the function to import.",
                  "Type": "aws-cdk-lib.aws_lambda.FunctionAttributes"
                }
              },
              "Summary": "Creates a Lambda function object which represents a function not defined within this stack.",
              "Remarks": "For `Function.addPermissions()` to work on this imported lambda, set the sameEnvironment property to true\nif this imported lambda is in the same account and region as the stack you are importing it into.",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.IFunction"
            },
            "aws-cdk-lib.aws_lambda.DockerImageFunction.fromFunctionName": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                },
                "id": {
                  "Summary": "",
                  "Type": "String"
                },
                "functionName": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "Import a lambda function into the CDK using its name.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.IFunction"
            },
            "aws-cdk-lib.aws_lambda.DockerImageFunction.metricAll": {
              "Parameters": {
                "metricName": {
                  "Summary": "",
                  "Type": "String"
                },
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Return the given named metric for this Lambda.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "aws-cdk-lib.aws_lambda.DockerImageFunction.metricAllConcurrentExecutions": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the number of concurrent executions across all Lambdas.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "aws-cdk-lib.aws_lambda.DockerImageFunction.metricAllDuration": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the Duration executing all Lambdas.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "aws-cdk-lib.aws_lambda.DockerImageFunction.metricAllErrors": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the number of Errors executing all Lambdas.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "aws-cdk-lib.aws_lambda.DockerImageFunction.metricAllInvocations": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the number of invocations of all Lambdas.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "aws-cdk-lib.aws_lambda.DockerImageFunction.metricAllThrottles": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the number of throttled invocations of all Lambdas.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "aws-cdk-lib.aws_lambda.DockerImageFunction.metricAllUnreservedConcurrentExecutions": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the number of unreserved concurrent executions across all Lambdas.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "addAlias": {
              "Parameters": {
                "aliasName": {
                  "Summary": "The name of the alias.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Alias options.",
                  "Type": "aws-cdk-lib.aws_lambda.AliasOptions"
                }
              },
              "Summary": "Defines an alias for this function.",
              "Remarks": "The alias will automatically be updated to point to the latest version of\nthe function as it is being updated during a deployment.\n\n```ts\ndeclare const fn: lambda.Function;\n\nfn.addAlias('Live');\n\n// Is equivalent to\n\nnew lambda.Alias(this, 'AliasLive', {\n  aliasName: 'Live',\n  version: fn.currentVersion,\n});\n```",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.Alias"
            },
            "addEnvironment": {
              "Parameters": {
                "key": {
                  "Summary": "The environment variable key.",
                  "Type": "String"
                },
                "value": {
                  "Summary": "The environment variable's value.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Environment variable options.",
                  "Type": "aws-cdk-lib.aws_lambda.EnvironmentOptions"
                }
              },
              "Summary": "Adds an environment variable to this Lambda function.",
              "Remarks": "If this is a ref to a Lambda function, this operation results in a no-op.",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.Function"
            },
            "addLayers": {
              "Parameters": {
                "layers": {
                  "Summary": "the layers to be added.",
                  "Type": "aws-cdk-lib.aws_lambda.ILayerVersion"
                }
              },
              "Summary": "Adds one or more Lambda Layers to this Lambda function.",
              "Remarks": "",
              "Static": false
            },
            "invalidateVersionBasedOn": {
              "Parameters": {
                "x": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "Mix additional information into the hash of the Version object.",
              "Remarks": "The Lambda Function construct does its best to automatically create a new\nVersion when anything about the Function changes (its code, its layers,\nany of the other properties).\n\nHowever, you can sometimes source information from places that the CDK cannot\nlook into, like the deploy-time values of SSM parameters. In those cases,\nthe CDK would not force the creation of a new Version object when it actually\nshould.\n\nThis method can be used to invalidate the current Version object. Pass in\nany string into this method, and make sure the string changes when you know\na new Version needs to be created.\n\nThis method may be called more than once.",
              "Static": false
            }
          },
          "PublicProperties": {
            "node": {
              "Remarks": "",
              "Summary": "The tree node.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "env": {
              "Remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
              "Summary": "The environment this resource belongs to.",
              "Required": true,
              "Type": "aws-cdk-lib.ResourceEnvironment"
            },
            "stack": {
              "Remarks": "",
              "Summary": "The stack in which this resource is defined.",
              "Required": true,
              "Type": "aws-cdk-lib.Stack"
            },
            "architecture": {
              "Remarks": "",
              "Summary": "The architecture of this Lambda Function (this is an optional attribute and defaults to X86_64).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Architecture"
            },
            "connections": {
              "Remarks": "Will fail if not a VPC-enabled Lambda Function",
              "Summary": "Access the Connections object.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_ec2.Connections"
            },
            "functionArn": {
              "Remarks": "",
              "Summary": "ARN of this function.",
              "Required": true,
              "Type": "String"
            },
            "functionName": {
              "Remarks": "",
              "Summary": "Name of this function.",
              "Required": true,
              "Type": "String"
            },
            "grantPrincipal": {
              "Remarks": "",
              "Summary": "The principal this Lambda Function is running as.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_iam.IPrincipal"
            },
            "isBoundToVpc": {
              "Remarks": "If this is is `false`, trying to access the `connections` object will fail.",
              "Summary": "Whether or not this Lambda function was bound to a VPC.",
              "Required": true,
              "Type": "Boolean"
            },
            "latestVersion": {
              "Remarks": "Note that this is reference to a non-specific AWS Lambda version, which\nmeans the function this version refers to can return different results in\ndifferent invocations.\n\nTo obtain a reference to an explicit version which references the current\nfunction configuration, use `lambdaFunction.currentVersion` instead.",
              "Summary": "The `$LATEST` version of this function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IVersion"
            },
            "permissionsNode": {
              "Remarks": "",
              "Summary": "The construct node where permissions are attached.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "resourceArnsForGrantInvoke": {
              "Remarks": "",
              "Summary": "The ARN(s) to put into the resource field of the generated IAM policy for grantInvoke().",
              "Required": true,
              "Type": "List",
              "ItemType": "String"
            },
            "role": {
              "Remarks": "",
              "Summary": "Execution role associated with this function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_iam.IRole"
            },
            "currentVersion": {
              "Remarks": "You can specify options for this version using the `currentVersionOptions`\nprop when initializing the `lambda.Function`.",
              "Summary": "Returns a `lambda.Version` which represents the current version of this Lambda function. A new version will be created every time the function's configuration changes.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Version"
            },
            "logGroup": {
              "Remarks": "If either `logRetention` is set or this property is called, a CloudFormation custom resource is added to the stack that\npre-creates the log group as part of the stack deployment, if it already doesn't exist, and sets the correct log retention\nperiod (never expire, by default).\n\nFurther, if the log group already exists and the `logRetention` is not set, the custom resource will reset the log retention\nto never expire even if it was configured with a different value.",
              "Summary": "The LogGroup where the Lambda function's logs are made available.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_logs.ILogGroup"
            },
            "runtime": {
              "Remarks": "",
              "Summary": "The runtime configured for this lambda.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime"
            },
            "deadLetterQueue": {
              "Remarks": "",
              "Summary": "The DLQ (as queue) associated with this Lambda Function (this is an optional attribute).",
              "Required": false,
              "Type": "aws-cdk-lib.aws_sqs.IQueue"
            },
            "deadLetterTopic": {
              "Remarks": "",
              "Summary": "The DLQ (as topic) associated with this Lambda Function (this is an optional attribute).",
              "Required": false,
              "Type": "aws-cdk-lib.aws_sns.ITopic"
            },
            "timeout": {
              "Remarks": "",
              "Summary": "The timeout configured for this lambda.",
              "Required": false,
              "Type": "aws-cdk-lib.Duration"
            }
          }
        },
        "EventInvokeConfig": {
          "Properties": {
            "maxEventAge": {
              "Remarks": "Minimum: 60 seconds\nMaximum: 6 hours",
              "Summary": "The maximum age of a request that Lambda sends to a function for processing.",
              "Required": false,
              "Type": "aws-cdk-lib.Duration"
            },
            "onFailure": {
              "Remarks": "",
              "Summary": "The destination for failed invocations.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.IDestination"
            },
            "onSuccess": {
              "Remarks": "",
              "Summary": "The destination for successful invocations.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.IDestination"
            },
            "retryAttempts": {
              "Remarks": "Minimum: 0\nMaximum: 2",
              "Summary": "The maximum number of times to retry when the function returns an error.",
              "Required": false,
              "Type": "Number"
            },
            "function": {
              "Remarks": "",
              "Summary": "The Lambda function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IFunction"
            },
            "qualifier": {
              "Remarks": "",
              "Summary": "The qualifier.",
              "Required": false,
              "Type": "String"
            }
          },
          "Methods": {
            "aws-cdk-lib.aws_lambda.EventInvokeConfig.isConstruct": {
              "Parameters": {
                "x": {
                  "Summary": "Any object.",
                  "Type": "Any"
                }
              },
              "Summary": "Checks if `x` is a construct.",
              "Remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead.",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "toString": {
              "Parameters": {},
              "Summary": "Returns a string representation of this construct.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "aws-cdk-lib.aws_lambda.EventInvokeConfig.isOwnedResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Returns true if the construct was created by CDK, and false otherwise.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "aws-cdk-lib.aws_lambda.EventInvokeConfig.isResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Check whether the given construct is a Resource.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "applyRemovalPolicy": {
              "Parameters": {
                "policy": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.RemovalPolicy"
                }
              },
              "Summary": "Apply the given removal policy to this resource.",
              "Remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
              "Static": false
            },
            "generatePhysicalName": {
              "Parameters": {},
              "Summary": "",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceArnAttribute": {
              "Parameters": {
                "arnAttr": {
                  "Summary": "The CFN attribute which resolves to the ARN of the resource.",
                  "Type": "String"
                },
                "arnComponents": {
                  "Summary": "The format of the ARN of this resource.",
                  "Type": "aws-cdk-lib.ArnComponents"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"ARN\" attribute (e.g. `bucket.bucketArn`).",
              "Remarks": "Normally, this token will resolve to `arnAttr`, but if the resource is\nreferenced across environments, `arnComponents` will be used to synthesize\na concrete ARN with the resource's physical name. Make sure to reference\n`this.physicalName` in `arnComponents`.",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceNameAttribute": {
              "Parameters": {
                "nameAttr": {
                  "Summary": "The CFN attribute which resolves to the resource's name.",
                  "Type": "String"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"name\" attribute (e.g. `bucket.bucketName`).",
              "Remarks": "Normally, this token will resolve to `nameAttr`, but if the resource is\nreferenced across environments, it will be resolved to `this.physicalName`,\nwhich will be a concrete name.",
              "Static": false,
              "ReturnType": "String"
            }
          },
          "PublicProperties": {
            "node": {
              "Remarks": "",
              "Summary": "The tree node.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "env": {
              "Remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
              "Summary": "The environment this resource belongs to.",
              "Required": true,
              "Type": "aws-cdk-lib.ResourceEnvironment"
            },
            "stack": {
              "Remarks": "",
              "Summary": "The stack in which this resource is defined.",
              "Required": true,
              "Type": "aws-cdk-lib.Stack"
            }
          }
        },
        "EventSourceMapping": {
          "Properties": {
            "batchSize": {
              "Remarks": "Your function receives an\nevent with all the retrieved records.\n\nValid Range: Minimum value of 1. Maximum value of 10000.",
              "Summary": "The largest number of records that AWS Lambda will retrieve from your event source at the time of invoking your function.",
              "Required": false,
              "Type": "Number"
            },
            "bisectBatchOnError": {
              "Remarks": "",
              "Summary": "If the function returns an error, split the batch in two and retry.",
              "Required": false,
              "Type": "Boolean"
            },
            "enabled": {
              "Remarks": "",
              "Summary": "Set to false to disable the event source upon creation.",
              "Required": false,
              "Type": "Boolean"
            },
            "eventSourceArn": {
              "Remarks": "Any record added to\nthis stream can invoke the Lambda function.",
              "Summary": "The Amazon Resource Name (ARN) of the event source.",
              "Required": false,
              "Type": "String"
            },
            "filterEncryption": {
              "Remarks": "",
              "Summary": "Add Customer managed KMS key to encrypt Filter Criteria.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_kms.IKey"
            },
            "filters": {
              "Remarks": "",
              "Summary": "Add filter criteria to Event Source.",
              "Required": false,
              "Type": "List",
              "ItemType": "Map"
            },
            "kafkaBootstrapServers": {
              "Remarks": "They are in the format `abc.example.com:9096`.",
              "Summary": "A list of host and port pairs that are the addresses of the Kafka brokers in a self managed \"bootstrap\" Kafka cluster that a Kafka client connects to initially to bootstrap itself.",
              "Required": false,
              "Type": "List",
              "ItemType": "String"
            },
            "kafkaConsumerGroupId": {
              "Remarks": "The consumer group ID must be unique among all your Kafka event sources. After creating a Kafka event source mapping with the consumer group ID specified, you cannot update this value. The value must have a lenght between 1 and 200 and full the pattern '[a-zA-Z0-9-\\/*:_+=.@-]*'. For more information, see [Customizable consumer group ID](https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html#services-msk-consumer-group-id).",
              "Summary": "The identifier for the Kafka consumer group to join.",
              "Required": false,
              "Type": "String"
            },
            "kafkaTopic": {
              "Remarks": "",
              "Summary": "The name of the Kafka topic.",
              "Required": false,
              "Type": "String"
            },
            "maxBatchingWindow": {
              "Remarks": "Maximum of Duration.minutes(5)",
              "Summary": "The maximum amount of time to gather records before invoking the function.",
              "Required": false,
              "Type": "aws-cdk-lib.Duration"
            },
            "maxConcurrency": {
              "Remarks": "",
              "Summary": "The maximum concurrency setting limits the number of concurrent instances of the function that an Amazon SQS event source can invoke.",
              "Required": false,
              "Type": "Number"
            },
            "maxRecordAge": {
              "Remarks": "Valid Range:\n* Minimum value of 60 seconds\n* Maximum value of 7 days",
              "Summary": "The maximum age of a record that Lambda sends to a function for processing.",
              "Required": false,
              "Type": "aws-cdk-lib.Duration"
            },
            "metricsConfig": {
              "Remarks": "",
              "Summary": "Configuration for enhanced monitoring metrics collection When specified, enables collection of additional metrics for the stream event source.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.MetricsConfig"
            },
            "onFailure": {
              "Remarks": "",
              "Summary": "An Amazon SQS queue or Amazon SNS topic destination for discarded records.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.IEventSourceDlq"
            },
            "parallelizationFactor": {
              "Remarks": "Valid Range:\n* Minimum value of 1\n* Maximum value of 10",
              "Summary": "The number of batches to process from each shard concurrently.",
              "Required": false,
              "Type": "Number"
            },
            "provisionedPollerConfig": {
              "Remarks": "When specified, allows control over the minimum and maximum number of pollers\nthat can be provisioned to process events from the source.",
              "Summary": "Configuration for provisioned pollers that read from the event source.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.ProvisionedPollerConfig"
            },
            "reportBatchItemFailures": {
              "Remarks": "",
              "Summary": "Allow functions to return partially successful responses for a batch of records.",
              "Required": false,
              "Type": "Boolean"
            },
            "retryAttempts": {
              "Remarks": "Set to `undefined` if you want lambda to keep retrying infinitely or until\nthe record expires.\n\nValid Range:\n* Minimum value of 0\n* Maximum value of 10000",
              "Summary": "The maximum number of times to retry when the function returns an error.",
              "Required": false,
              "Type": "Number"
            },
            "sourceAccessConfigurations": {
              "Remarks": "",
              "Summary": "Specific settings like the authentication protocol or the VPC components to secure access to your event source.",
              "Required": false,
              "Type": "List",
              "ItemType": "aws-cdk-lib.aws_lambda.SourceAccessConfiguration"
            },
            "startingPosition": {
              "Remarks": "",
              "Summary": "The position in the DynamoDB, Kinesis or MSK stream where AWS Lambda should start reading.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.StartingPosition"
            },
            "startingPositionTimestamp": {
              "Remarks": "",
              "Summary": "The time from which to start reading, in Unix time seconds.",
              "Required": false,
              "Type": "Number"
            },
            "supportS3OnFailureDestination": {
              "Remarks": "Currently only MSK and self managed kafka event support S3 ODF",
              "Summary": "Check if support S3 onfailure destination(ODF).",
              "Required": false,
              "Type": "Boolean"
            },
            "tumblingWindow": {
              "Remarks": "",
              "Summary": "The size of the tumbling windows to group records sent to DynamoDB or Kinesis.",
              "Required": false,
              "Type": "aws-cdk-lib.Duration"
            },
            "target": {
              "Remarks": "",
              "Summary": "The target AWS Lambda function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IFunction"
            }
          },
          "Methods": {
            "aws-cdk-lib.aws_lambda.EventSourceMapping.isConstruct": {
              "Parameters": {
                "x": {
                  "Summary": "Any object.",
                  "Type": "Any"
                }
              },
              "Summary": "Checks if `x` is a construct.",
              "Remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead.",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "toString": {
              "Parameters": {},
              "Summary": "Returns a string representation of this construct.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "aws-cdk-lib.aws_lambda.EventSourceMapping.isOwnedResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Returns true if the construct was created by CDK, and false otherwise.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "aws-cdk-lib.aws_lambda.EventSourceMapping.isResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Check whether the given construct is a Resource.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "applyRemovalPolicy": {
              "Parameters": {
                "policy": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.RemovalPolicy"
                }
              },
              "Summary": "Apply the given removal policy to this resource.",
              "Remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
              "Static": false
            },
            "generatePhysicalName": {
              "Parameters": {},
              "Summary": "",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceArnAttribute": {
              "Parameters": {
                "arnAttr": {
                  "Summary": "The CFN attribute which resolves to the ARN of the resource.",
                  "Type": "String"
                },
                "arnComponents": {
                  "Summary": "The format of the ARN of this resource.",
                  "Type": "aws-cdk-lib.ArnComponents"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"ARN\" attribute (e.g. `bucket.bucketArn`).",
              "Remarks": "Normally, this token will resolve to `arnAttr`, but if the resource is\nreferenced across environments, `arnComponents` will be used to synthesize\na concrete ARN with the resource's physical name. Make sure to reference\n`this.physicalName` in `arnComponents`.",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceNameAttribute": {
              "Parameters": {
                "nameAttr": {
                  "Summary": "The CFN attribute which resolves to the resource's name.",
                  "Type": "String"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"name\" attribute (e.g. `bucket.bucketName`).",
              "Remarks": "Normally, this token will resolve to `nameAttr`, but if the resource is\nreferenced across environments, it will be resolved to `this.physicalName`,\nwhich will be a concrete name.",
              "Static": false,
              "ReturnType": "String"
            },
            "aws-cdk-lib.aws_lambda.EventSourceMapping.fromEventSourceMappingId": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                },
                "id": {
                  "Summary": "",
                  "Type": "String"
                },
                "eventSourceMappingId": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "Import an event source into this stack from its event source id.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.IEventSourceMapping"
            }
          },
          "PublicProperties": {
            "node": {
              "Remarks": "",
              "Summary": "The tree node.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "env": {
              "Remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
              "Summary": "The environment this resource belongs to.",
              "Required": true,
              "Type": "aws-cdk-lib.ResourceEnvironment"
            },
            "stack": {
              "Remarks": "",
              "Summary": "The stack in which this resource is defined.",
              "Required": true,
              "Type": "aws-cdk-lib.Stack"
            },
            "eventSourceMappingArn": {
              "Remarks": "",
              "Summary": "The ARN of the event source mapping (i.e. arn:aws:lambda:region:account-id:event-source-mapping/event-source-mapping-id).",
              "Required": true,
              "Type": "String"
            },
            "eventSourceMappingId": {
              "Remarks": "",
              "Summary": "The identifier for this EventSourceMapping.",
              "Required": true,
              "Type": "String"
            }
          }
        },
        "Function": {
          "Properties": {
            "maxEventAge": {
              "Remarks": "Minimum: 60 seconds\nMaximum: 6 hours",
              "Summary": "The maximum age of a request that Lambda sends to a function for processing.",
              "Required": false,
              "Type": "aws-cdk-lib.Duration"
            },
            "onFailure": {
              "Remarks": "",
              "Summary": "The destination for failed invocations.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.IDestination"
            },
            "onSuccess": {
              "Remarks": "",
              "Summary": "The destination for successful invocations.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.IDestination"
            },
            "retryAttempts": {
              "Remarks": "Minimum: 0\nMaximum: 2",
              "Summary": "The maximum number of times to retry when the function returns an error.",
              "Required": false,
              "Type": "Number"
            },
            "adotInstrumentation": {
              "Remarks": "",
              "Summary": "Specify the configuration of AWS Distro for OpenTelemetry (ADOT) instrumentation.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.AdotInstrumentationConfig"
            },
            "allowAllIpv6Outbound": {
              "Remarks": "If set to true, there will only be a single egress rule which allows all\noutbound ipv6 traffic. If set to false, you must individually add traffic rules to allow the\nLambda to connect to network targets using ipv6.\n\nDo not specify this property if the `securityGroups` or `securityGroup` property is set.\nInstead, configure `allowAllIpv6Outbound` directly on the security group.",
              "Summary": "Whether to allow the Lambda to send all ipv6 network traffic.",
              "Required": false,
              "Type": "Boolean"
            },
            "allowAllOutbound": {
              "Remarks": "If set to false, you must individually add traffic rules to allow the\nLambda to connect to network targets.\n\nDo not specify this property if the `securityGroups` or `securityGroup` property is set.\nInstead, configure `allowAllOutbound` directly on the security group.",
              "Summary": "Whether to allow the Lambda to send all network traffic (except ipv6).",
              "Required": false,
              "Type": "Boolean"
            },
            "allowPublicSubnet": {
              "Remarks": "Use this property to acknowledge this limitation and still place the function in a public subnet.",
              "Summary": "Lambda Functions in a public subnet can NOT access the internet.",
              "Required": false,
              "Type": "Boolean"
            },
            "applicationLogLevel": {
              "Remarks": "",
              "Summary": "Sets the application log level for the function.",
              "Required": false,
              "Type": "String"
            },
            "applicationLogLevelV2": {
              "Remarks": "",
              "Summary": "Sets the application log level for the function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.ApplicationLogLevel"
            },
            "architecture": {
              "Remarks": "",
              "Summary": "The system architectures compatible with this lambda function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.Architecture"
            },
            "codeSigningConfig": {
              "Remarks": "",
              "Summary": "Code signing config associated with this function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.ICodeSigningConfig"
            },
            "currentVersionOptions": {
              "Remarks": "",
              "Summary": "Options for the `lambda.Version` resource automatically created by the `fn.currentVersion` method.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.VersionOptions"
            },
            "deadLetterQueue": {
              "Remarks": "If SNS topic is desired, specify `deadLetterTopic` property instead.",
              "Summary": "The SQS queue to use if DLQ is enabled.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_sqs.IQueue"
            },
            "deadLetterQueueEnabled": {
              "Remarks": "If `deadLetterQueue` is undefined,\nan SQS queue with default options will be defined for your Function.",
              "Summary": "Enabled DLQ.",
              "Required": false,
              "Type": "Boolean"
            },
            "deadLetterTopic": {
              "Remarks": "Note that if `deadLetterQueueEnabled` is set to `true`, an SQS queue will be created\nrather than an SNS topic. Using an SNS topic as a DLQ requires this property to be set explicitly.",
              "Summary": "The SNS topic to use as a DLQ.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_sns.ITopic"
            },
            "description": {
              "Remarks": "",
              "Summary": "A description of the function.",
              "Required": false,
              "Type": "String"
            },
            "environment": {
              "Remarks": "Use environment variables to apply configuration changes, such\nas test and production environment configurations, without changing your\nLambda function source code.",
              "Summary": "Key-value pairs that Lambda caches and makes available for your Lambda functions.",
              "Required": false,
              "Type": "Map",
              "ItemType": "String"
            },
            "environmentEncryption": {
              "Remarks": "",
              "Summary": "The AWS KMS key that's used to encrypt your function's environment variables.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_kms.IKey"
            },
            "ephemeralStorageSize": {
              "Remarks": "",
              "Summary": "The size of the function’s /tmp directory in MiB.",
              "Required": false,
              "Type": "aws-cdk-lib.Size"
            },
            "events": {
              "Remarks": "You can also add event sources using `addEventSource`.",
              "Summary": "Event sources for this function.",
              "Required": false,
              "Type": "List",
              "ItemType": "aws-cdk-lib.aws_lambda.IEventSource"
            },
            "filesystem": {
              "Remarks": "",
              "Summary": "The filesystem configuration for the lambda function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.FileSystem"
            },
            "functionName": {
              "Remarks": "",
              "Summary": "A name for the function.",
              "Required": false,
              "Type": "String"
            },
            "initialPolicy": {
              "Remarks": "You can call `addToRolePolicy` to the created lambda to add statements post creation.",
              "Summary": "Initial policy statements to add to the created Lambda Role.",
              "Required": false,
              "Type": "List",
              "ItemType": "aws-cdk-lib.aws_iam.PolicyStatement"
            },
            "insightsVersion": {
              "Remarks": "",
              "Summary": "Specify the version of CloudWatch Lambda insights to use for monitoring.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.LambdaInsightsVersion"
            },
            "ipv6AllowedForDualStack": {
              "Remarks": "Only used if 'vpc' is supplied.",
              "Summary": "Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.",
              "Required": false,
              "Type": "Boolean"
            },
            "layers": {
              "Remarks": "You can configure your Lambda function to pull in\nadditional code during initialization in the form of layers. Layers are packages of libraries or other dependencies\nthat can be used by multiple functions.",
              "Summary": "A list of layers to add to the function's execution environment.",
              "Required": false,
              "Type": "List",
              "ItemType": "aws-cdk-lib.aws_lambda.ILayerVersion"
            },
            "logFormat": {
              "Remarks": "",
              "Summary": "Sets the logFormat for the function.",
              "Required": false,
              "Type": "String"
            },
            "loggingFormat": {
              "Remarks": "",
              "Summary": "Sets the loggingFormat for the function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.LoggingFormat"
            },
            "logGroup": {
              "Remarks": "By default, Lambda functions send logs to an automatically created default log group named /aws/lambda/\\<function name\\>.\nHowever you cannot change the properties of this auto-created log group using the AWS CDK, e.g. you cannot set a different log retention.\n\nUse the `logGroup` property to create a fully customizable LogGroup ahead of time, and instruct the Lambda function to send logs to it.\n\nProviding a user-controlled log group was rolled out to commercial regions on 2023-11-16.\nIf you are deploying to another type of region, please check regional availability first.",
              "Summary": "The log group the function sends logs to.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_logs.ILogGroup"
            },
            "logRetention": {
              "Remarks": "When updating\nthis property, unsetting it doesn't remove the log retention policy. To\nremove the retention policy, set the value to `INFINITE`.\n\nThis is a legacy API and we strongly recommend you move away from it if you can.\nInstead create a fully customizable log group with `logs.LogGroup` and use the `logGroup` property\nto instruct the Lambda function to send logs to it.\nMigrating from `logRetention` to `logGroup` will cause the name of the log group to change.\nUsers and code and referencing the name verbatim will have to adjust.\n\nIn AWS CDK code, you can access the log group name directly from the LogGroup construct:\n```ts\nimport * as logs from 'aws-cdk-lib/aws-logs';\n\ndeclare const myLogGroup: logs.LogGroup;\nmyLogGroup.logGroupName;\n```",
              "Summary": "The number of days log events are kept in CloudWatch Logs.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_logs.RetentionDays"
            },
            "logRetentionRetryOptions": {
              "Remarks": "These options control the retry policy when interacting with CloudWatch APIs.\n\nThis is a legacy API and we strongly recommend you migrate to `logGroup` if you can.\n`logGroup` allows you to create a fully customizable log group and instruct the Lambda function to send logs to it.",
              "Summary": "When log retention is specified, a custom resource attempts to create the CloudWatch log group.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.LogRetentionRetryOptions"
            },
            "logRetentionRole": {
              "Remarks": "This is a legacy API and we strongly recommend you migrate to `logGroup` if you can.\n`logGroup` allows you to create a fully customizable log group and instruct the Lambda function to send logs to it.",
              "Summary": "The IAM role for the Lambda function associated with the custom resource that sets the retention policy.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_iam.IRole"
            },
            "memorySize": {
              "Remarks": "Lambda uses this value to proportionally allocate the amount of CPU\npower. For more information, see Resource Model in the AWS Lambda\nDeveloper Guide.",
              "Summary": "The amount of memory, in MB, that is allocated to your Lambda function.",
              "Required": false,
              "Type": "Number"
            },
            "paramsAndSecrets": {
              "Remarks": "",
              "Summary": "Specify the configuration of Parameters and Secrets Extension.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.ParamsAndSecretsLayerVersion"
            },
            "profiling": {
              "Remarks": "",
              "Summary": "Enable profiling.",
              "Required": false,
              "Type": "Boolean"
            },
            "profilingGroup": {
              "Remarks": "",
              "Summary": "Profiling Group.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_codeguruprofiler.IProfilingGroup"
            },
            "recursiveLoop": {
              "Remarks": "It lets Lambda detect and terminate unintended recursive loops.",
              "Summary": "Sets the Recursive Loop Protection for Lambda Function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.RecursiveLoop"
            },
            "reservedConcurrentExecutions": {
              "Remarks": "",
              "Summary": "The maximum of concurrent executions you want to reserve for the function.",
              "Required": false,
              "Type": "Number"
            },
            "role": {
              "Remarks": "This is the role that will be assumed by the function upon execution.\nIt controls the permissions that the function will have. The Role must\nbe assumable by the 'lambda.amazonaws.com' service principal.\n\nThe default Role automatically has permissions granted for Lambda execution. If you\nprovide a Role, you must add the relevant AWS managed policies yourself.\n\nThe relevant managed policies are \"service-role/AWSLambdaBasicExecutionRole\" and\n\"service-role/AWSLambdaVPCAccessExecutionRole\".",
              "Summary": "Lambda execution role.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_iam.IRole"
            },
            "runtimeManagementMode": {
              "Remarks": "",
              "Summary": "Sets the runtime management configuration for a function's version.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.RuntimeManagementMode"
            },
            "securityGroups": {
              "Remarks": "Only used if 'vpc' is supplied.",
              "Summary": "The list of security groups to associate with the Lambda's network interfaces.",
              "Required": false,
              "Type": "List",
              "ItemType": "aws-cdk-lib.aws_ec2.ISecurityGroup"
            },
            "snapStart": {
              "Remarks": "SnapStart is currently supported for Java 11, Java 17, Python 3.12, Python 3.13, and .NET 8 runtime",
              "Summary": "Enable SnapStart for Lambda Function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.SnapStartConf"
            },
            "systemLogLevel": {
              "Remarks": "",
              "Summary": "Sets the system log level for the function.",
              "Required": false,
              "Type": "String"
            },
            "systemLogLevelV2": {
              "Remarks": "",
              "Summary": "Sets the system log level for the function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.SystemLogLevel"
            },
            "timeout": {
              "Remarks": "Because the execution time affects cost, set this value\nbased on the function's expected execution time.",
              "Summary": "The function execution time (in seconds) after which Lambda terminates the function.",
              "Required": false,
              "Type": "aws-cdk-lib.Duration"
            },
            "tracing": {
              "Remarks": "",
              "Summary": "Enable AWS X-Ray Tracing for Lambda Function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.Tracing"
            },
            "vpc": {
              "Remarks": "Specify this if the Lambda function needs to access resources in a VPC.\nThis is required when `vpcSubnets` is specified.",
              "Summary": "VPC network to place Lambda network interfaces.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_ec2.IVpc"
            },
            "vpcSubnets": {
              "Remarks": "This requires `vpc` to be specified in order for interfaces to actually be\nplaced in the subnets. If `vpc` is not specify, this will raise an error.\n\nNote: Internet access for Lambda Functions requires a NAT Gateway, so picking\npublic subnets is not allowed (unless `allowPublicSubnet` is set to `true`).",
              "Summary": "Where to place the network interfaces within the VPC.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_ec2.SubnetSelection"
            },
            "code": {
              "Remarks": "You can point to a file in an\nAmazon Simple Storage Service (Amazon S3) bucket or specify your source\ncode as inline text.",
              "Summary": "The source code of your Lambda function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Code"
            },
            "handler": {
              "Remarks": "The format includes the file name. It can also include\nnamespaces and other qualifiers, depending on the runtime.\nFor more information, see https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html.\n\nUse `Handler.FROM_IMAGE` when defining a function from a Docker image.\n\nNOTE: If you specify your source code as inline text by specifying the\nZipFile property within the Code property, specify index.function_name as\nthe handler.",
              "Summary": "The name of the method within your code that Lambda calls to execute your function.",
              "Required": true,
              "Type": "String"
            },
            "runtime": {
              "Remarks": "For valid values, see the Runtime property in the AWS Lambda Developer\nGuide.\n\nUse `Runtime.FROM_IMAGE` when defining a function from a Docker image.",
              "Summary": "The runtime environment for the Lambda function that you are uploading.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime"
            }
          },
          "Methods": {
            "aws-cdk-lib.aws_lambda.Function.isConstruct": {
              "Parameters": {
                "x": {
                  "Summary": "Any object.",
                  "Type": "Any"
                }
              },
              "Summary": "Checks if `x` is a construct.",
              "Remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead.",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "toString": {
              "Parameters": {},
              "Summary": "Returns a string representation of this construct.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "aws-cdk-lib.aws_lambda.Function.isOwnedResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Returns true if the construct was created by CDK, and false otherwise.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "aws-cdk-lib.aws_lambda.Function.isResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Check whether the given construct is a Resource.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "applyRemovalPolicy": {
              "Parameters": {
                "policy": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.RemovalPolicy"
                }
              },
              "Summary": "Apply the given removal policy to this resource.",
              "Remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
              "Static": false
            },
            "generatePhysicalName": {
              "Parameters": {},
              "Summary": "",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceArnAttribute": {
              "Parameters": {
                "arnAttr": {
                  "Summary": "The CFN attribute which resolves to the ARN of the resource.",
                  "Type": "String"
                },
                "arnComponents": {
                  "Summary": "The format of the ARN of this resource.",
                  "Type": "aws-cdk-lib.ArnComponents"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"ARN\" attribute (e.g. `bucket.bucketArn`).",
              "Remarks": "Normally, this token will resolve to `arnAttr`, but if the resource is\nreferenced across environments, `arnComponents` will be used to synthesize\na concrete ARN with the resource's physical name. Make sure to reference\n`this.physicalName` in `arnComponents`.",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceNameAttribute": {
              "Parameters": {
                "nameAttr": {
                  "Summary": "The CFN attribute which resolves to the resource's name.",
                  "Type": "String"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"name\" attribute (e.g. `bucket.bucketName`).",
              "Remarks": "Normally, this token will resolve to `nameAttr`, but if the resource is\nreferenced across environments, it will be resolved to `this.physicalName`,\nwhich will be a concrete name.",
              "Static": false,
              "ReturnType": "String"
            },
            "addEventSource": {
              "Parameters": {
                "source": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IEventSource"
                }
              },
              "Summary": "Adds an event source to this function.",
              "Remarks": "Event sources are implemented in the aws-cdk-lib/aws-lambda-event-sources module.\n\nThe following example adds an SQS Queue as an event source:\n```\nimport { SqsEventSource } from 'aws-cdk-lib/aws-lambda-event-sources';\nmyFunction.addEventSource(new SqsEventSource(myQueue));\n```",
              "Static": false
            },
            "addEventSourceMapping": {
              "Parameters": {
                "id": {
                  "Summary": "",
                  "Type": "String"
                },
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.EventSourceMappingOptions"
                }
              },
              "Summary": "Adds an event source that maps to this AWS Lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.EventSourceMapping"
            },
            "addFunctionUrl": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.FunctionUrlOptions"
                }
              },
              "Summary": "Adds a url to this lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.FunctionUrl"
            },
            "addPermission": {
              "Parameters": {
                "id": {
                  "Summary": "The id for the permission construct.",
                  "Type": "String"
                },
                "permission": {
                  "Summary": "The permission to grant to this Lambda function.",
                  "Type": "aws-cdk-lib.aws_lambda.Permission"
                }
              },
              "Summary": "Adds a permission to the Lambda resource policy.",
              "Remarks": "",
              "Static": false
            },
            "addToRolePolicy": {
              "Parameters": {
                "statement": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.PolicyStatement"
                }
              },
              "Summary": "Adds a statement to the IAM role assumed by the instance.",
              "Remarks": "",
              "Static": false
            },
            "configureAsyncInvoke": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.EventInvokeConfigOptions"
                }
              },
              "Summary": "Configures options for asynchronous invocation.",
              "Remarks": "",
              "Static": false
            },
            "considerWarningOnInvokeFunctionPermissions": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                },
                "action": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "A warning will be added to functions under the following conditions: - permissions that include `lambda:InvokeFunction` are added to the unqualified function.",
              "Remarks": "- function.currentVersion is invoked before or after the permission is created.\n\nThis applies only to permissions on Lambda functions, not versions or aliases.\nThis function is overridden as a noOp for QualifiedFunctionBase.",
              "Static": false
            },
            "grantInvoke": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeCompositePrincipal": {
              "Parameters": {
                "compositePrincipal": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.CompositePrincipal"
                }
              },
              "Summary": "Grant multiple principals the ability to invoke this Lambda via CompositePrincipal.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "List"
            },
            "grantInvokeLatestVersion": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke the $LATEST version or unqualified version of this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeUrl": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda Function URL.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeVersion": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                },
                "version": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IVersion"
                }
              },
              "Summary": "Grant the given identity permissions to invoke the given version of this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "metric": {
              "Parameters": {
                "metricName": {
                  "Summary": "",
                  "Type": "String"
                },
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Return the given named metric for this Function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricDuration": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How long execution of this Lambda takes.",
              "Remarks": "Average over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricErrors": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How many invocations of this Lambda fail.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricInvocations": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How often this Lambda is invoked.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricThrottles": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How often this Lambda is throttled.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "warnInvokeFunctionPermissions": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                }
              },
              "Summary": "",
              "Remarks": "",
              "Static": false
            },
            "aws-cdk-lib.aws_lambda.Function.classifyVersionProperty": {
              "Parameters": {
                "propertyName": {
                  "Summary": "The property to classify.",
                  "Type": "String"
                },
                "locked": {
                  "Summary": "whether the property should be associated to the version or not.",
                  "Type": "Boolean"
                }
              },
              "Summary": "Record whether specific properties in the `AWS::Lambda::Function` resource should also be associated to the Version resource.",
              "Remarks": "See 'currentVersion' section in the module README for more details.",
              "Static": true
            },
            "aws-cdk-lib.aws_lambda.Function.fromFunctionArn": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                },
                "id": {
                  "Summary": "",
                  "Type": "String"
                },
                "functionArn": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "Import a lambda function into the CDK using its ARN.",
              "Remarks": "For `Function.addPermissions()` to work on this imported lambda, make sure that is\nin the same account and region as the stack you are importing it into.",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.IFunction"
            },
            "aws-cdk-lib.aws_lambda.Function.fromFunctionAttributes": {
              "Parameters": {
                "scope": {
                  "Summary": "The parent construct.",
                  "Type": "constructs.Construct"
                },
                "id": {
                  "Summary": "The name of the lambda construct.",
                  "Type": "String"
                },
                "attrs": {
                  "Summary": "the attributes of the function to import.",
                  "Type": "aws-cdk-lib.aws_lambda.FunctionAttributes"
                }
              },
              "Summary": "Creates a Lambda function object which represents a function not defined within this stack.",
              "Remarks": "For `Function.addPermissions()` to work on this imported lambda, set the sameEnvironment property to true\nif this imported lambda is in the same account and region as the stack you are importing it into.",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.IFunction"
            },
            "aws-cdk-lib.aws_lambda.Function.fromFunctionName": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                },
                "id": {
                  "Summary": "",
                  "Type": "String"
                },
                "functionName": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "Import a lambda function into the CDK using its name.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.IFunction"
            },
            "aws-cdk-lib.aws_lambda.Function.metricAll": {
              "Parameters": {
                "metricName": {
                  "Summary": "",
                  "Type": "String"
                },
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Return the given named metric for this Lambda.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "aws-cdk-lib.aws_lambda.Function.metricAllConcurrentExecutions": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the number of concurrent executions across all Lambdas.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "aws-cdk-lib.aws_lambda.Function.metricAllDuration": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the Duration executing all Lambdas.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "aws-cdk-lib.aws_lambda.Function.metricAllErrors": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the number of Errors executing all Lambdas.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "aws-cdk-lib.aws_lambda.Function.metricAllInvocations": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the number of invocations of all Lambdas.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "aws-cdk-lib.aws_lambda.Function.metricAllThrottles": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the number of throttled invocations of all Lambdas.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "aws-cdk-lib.aws_lambda.Function.metricAllUnreservedConcurrentExecutions": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the number of unreserved concurrent executions across all Lambdas.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "addAlias": {
              "Parameters": {
                "aliasName": {
                  "Summary": "The name of the alias.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Alias options.",
                  "Type": "aws-cdk-lib.aws_lambda.AliasOptions"
                }
              },
              "Summary": "Defines an alias for this function.",
              "Remarks": "The alias will automatically be updated to point to the latest version of\nthe function as it is being updated during a deployment.\n\n```ts\ndeclare const fn: lambda.Function;\n\nfn.addAlias('Live');\n\n// Is equivalent to\n\nnew lambda.Alias(this, 'AliasLive', {\n  aliasName: 'Live',\n  version: fn.currentVersion,\n});\n```",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.Alias"
            },
            "addEnvironment": {
              "Parameters": {
                "key": {
                  "Summary": "The environment variable key.",
                  "Type": "String"
                },
                "value": {
                  "Summary": "The environment variable's value.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Environment variable options.",
                  "Type": "aws-cdk-lib.aws_lambda.EnvironmentOptions"
                }
              },
              "Summary": "Adds an environment variable to this Lambda function.",
              "Remarks": "If this is a ref to a Lambda function, this operation results in a no-op.",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.Function"
            },
            "addLayers": {
              "Parameters": {
                "layers": {
                  "Summary": "the layers to be added.",
                  "Type": "aws-cdk-lib.aws_lambda.ILayerVersion"
                }
              },
              "Summary": "Adds one or more Lambda Layers to this Lambda function.",
              "Remarks": "",
              "Static": false
            },
            "invalidateVersionBasedOn": {
              "Parameters": {
                "x": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "Mix additional information into the hash of the Version object.",
              "Remarks": "The Lambda Function construct does its best to automatically create a new\nVersion when anything about the Function changes (its code, its layers,\nany of the other properties).\n\nHowever, you can sometimes source information from places that the CDK cannot\nlook into, like the deploy-time values of SSM parameters. In those cases,\nthe CDK would not force the creation of a new Version object when it actually\nshould.\n\nThis method can be used to invalidate the current Version object. Pass in\nany string into this method, and make sure the string changes when you know\na new Version needs to be created.\n\nThis method may be called more than once.",
              "Static": false
            }
          },
          "PublicProperties": {
            "node": {
              "Remarks": "",
              "Summary": "The tree node.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "env": {
              "Remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
              "Summary": "The environment this resource belongs to.",
              "Required": true,
              "Type": "aws-cdk-lib.ResourceEnvironment"
            },
            "stack": {
              "Remarks": "",
              "Summary": "The stack in which this resource is defined.",
              "Required": true,
              "Type": "aws-cdk-lib.Stack"
            },
            "architecture": {
              "Remarks": "",
              "Summary": "The architecture of this Lambda Function (this is an optional attribute and defaults to X86_64).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Architecture"
            },
            "connections": {
              "Remarks": "Will fail if not a VPC-enabled Lambda Function",
              "Summary": "Access the Connections object.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_ec2.Connections"
            },
            "functionArn": {
              "Remarks": "",
              "Summary": "ARN of this function.",
              "Required": true,
              "Type": "String"
            },
            "functionName": {
              "Remarks": "",
              "Summary": "Name of this function.",
              "Required": true,
              "Type": "String"
            },
            "grantPrincipal": {
              "Remarks": "",
              "Summary": "The principal this Lambda Function is running as.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_iam.IPrincipal"
            },
            "isBoundToVpc": {
              "Remarks": "If this is is `false`, trying to access the `connections` object will fail.",
              "Summary": "Whether or not this Lambda function was bound to a VPC.",
              "Required": true,
              "Type": "Boolean"
            },
            "latestVersion": {
              "Remarks": "Note that this is reference to a non-specific AWS Lambda version, which\nmeans the function this version refers to can return different results in\ndifferent invocations.\n\nTo obtain a reference to an explicit version which references the current\nfunction configuration, use `lambdaFunction.currentVersion` instead.",
              "Summary": "The `$LATEST` version of this function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IVersion"
            },
            "permissionsNode": {
              "Remarks": "",
              "Summary": "The construct node where permissions are attached.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "resourceArnsForGrantInvoke": {
              "Remarks": "",
              "Summary": "The ARN(s) to put into the resource field of the generated IAM policy for grantInvoke().",
              "Required": true,
              "Type": "List",
              "ItemType": "String"
            },
            "role": {
              "Remarks": "",
              "Summary": "Execution role associated with this function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_iam.IRole"
            },
            "currentVersion": {
              "Remarks": "You can specify options for this version using the `currentVersionOptions`\nprop when initializing the `lambda.Function`.",
              "Summary": "Returns a `lambda.Version` which represents the current version of this Lambda function. A new version will be created every time the function's configuration changes.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Version"
            },
            "logGroup": {
              "Remarks": "If either `logRetention` is set or this property is called, a CloudFormation custom resource is added to the stack that\npre-creates the log group as part of the stack deployment, if it already doesn't exist, and sets the correct log retention\nperiod (never expire, by default).\n\nFurther, if the log group already exists and the `logRetention` is not set, the custom resource will reset the log retention\nto never expire even if it was configured with a different value.",
              "Summary": "The LogGroup where the Lambda function's logs are made available.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_logs.ILogGroup"
            },
            "runtime": {
              "Remarks": "",
              "Summary": "The runtime configured for this lambda.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime"
            },
            "deadLetterQueue": {
              "Remarks": "",
              "Summary": "The DLQ (as queue) associated with this Lambda Function (this is an optional attribute).",
              "Required": false,
              "Type": "aws-cdk-lib.aws_sqs.IQueue"
            },
            "deadLetterTopic": {
              "Remarks": "",
              "Summary": "The DLQ (as topic) associated with this Lambda Function (this is an optional attribute).",
              "Required": false,
              "Type": "aws-cdk-lib.aws_sns.ITopic"
            },
            "timeout": {
              "Remarks": "",
              "Summary": "The timeout configured for this lambda.",
              "Required": false,
              "Type": "aws-cdk-lib.Duration"
            }
          }
        },
        "FunctionUrl": {
          "Properties": {
            "authType": {
              "Remarks": "",
              "Summary": "The type of authentication that your function URL uses.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.FunctionUrlAuthType"
            },
            "cors": {
              "Remarks": "",
              "Summary": "The cross-origin resource sharing (CORS) settings for your function URL.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.FunctionUrlCorsOptions"
            },
            "invokeMode": {
              "Remarks": "",
              "Summary": "The type of invocation mode that your Lambda function uses.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.InvokeMode"
            },
            "function": {
              "Remarks": "It can also be an `Alias` but not a `Version`.",
              "Summary": "The function to which this url refers.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IFunction"
            }
          },
          "Methods": {
            "aws-cdk-lib.aws_lambda.FunctionUrl.isConstruct": {
              "Parameters": {
                "x": {
                  "Summary": "Any object.",
                  "Type": "Any"
                }
              },
              "Summary": "Checks if `x` is a construct.",
              "Remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead.",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "toString": {
              "Parameters": {},
              "Summary": "Returns a string representation of this construct.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "aws-cdk-lib.aws_lambda.FunctionUrl.isOwnedResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Returns true if the construct was created by CDK, and false otherwise.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "aws-cdk-lib.aws_lambda.FunctionUrl.isResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Check whether the given construct is a Resource.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "applyRemovalPolicy": {
              "Parameters": {
                "policy": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.RemovalPolicy"
                }
              },
              "Summary": "Apply the given removal policy to this resource.",
              "Remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
              "Static": false
            },
            "generatePhysicalName": {
              "Parameters": {},
              "Summary": "",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceArnAttribute": {
              "Parameters": {
                "arnAttr": {
                  "Summary": "The CFN attribute which resolves to the ARN of the resource.",
                  "Type": "String"
                },
                "arnComponents": {
                  "Summary": "The format of the ARN of this resource.",
                  "Type": "aws-cdk-lib.ArnComponents"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"ARN\" attribute (e.g. `bucket.bucketArn`).",
              "Remarks": "Normally, this token will resolve to `arnAttr`, but if the resource is\nreferenced across environments, `arnComponents` will be used to synthesize\na concrete ARN with the resource's physical name. Make sure to reference\n`this.physicalName` in `arnComponents`.",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceNameAttribute": {
              "Parameters": {
                "nameAttr": {
                  "Summary": "The CFN attribute which resolves to the resource's name.",
                  "Type": "String"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"name\" attribute (e.g. `bucket.bucketName`).",
              "Remarks": "Normally, this token will resolve to `nameAttr`, but if the resource is\nreferenced across environments, it will be resolved to `this.physicalName`,\nwhich will be a concrete name.",
              "Static": false,
              "ReturnType": "String"
            },
            "grantInvokeUrl": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda Function URL.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            }
          },
          "PublicProperties": {
            "node": {
              "Remarks": "",
              "Summary": "The tree node.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "env": {
              "Remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
              "Summary": "The environment this resource belongs to.",
              "Required": true,
              "Type": "aws-cdk-lib.ResourceEnvironment"
            },
            "stack": {
              "Remarks": "",
              "Summary": "The stack in which this resource is defined.",
              "Required": true,
              "Type": "aws-cdk-lib.Stack"
            },
            "authType": {
              "Remarks": "",
              "Summary": "The authentication type used for this Function URL.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.FunctionUrlAuthType"
            },
            "functionArn": {
              "Remarks": "",
              "Summary": "The ARN of the function this URL refers to.",
              "Required": true,
              "Type": "String"
            },
            "url": {
              "Remarks": "",
              "Summary": "The url of the Lambda function.",
              "Required": true,
              "Type": "String"
            }
          }
        },
        "LayerVersion": {
          "Properties": {
            "description": {
              "Remarks": "",
              "Summary": "The description the this Lambda Layer.",
              "Required": false,
              "Type": "String"
            },
            "layerVersionName": {
              "Remarks": "",
              "Summary": "The name of the layer.",
              "Required": false,
              "Type": "String"
            },
            "license": {
              "Remarks": "",
              "Summary": "The SPDX licence identifier or URL to the license file for this layer.",
              "Required": false,
              "Type": "String"
            },
            "removalPolicy": {
              "Remarks": "",
              "Summary": "Whether to retain this version of the layer when a new version is added or when the stack is deleted.",
              "Required": false,
              "Type": "aws-cdk-lib.RemovalPolicy"
            },
            "code": {
              "Remarks": "Using `Code.fromInline` is not supported.",
              "Summary": "The content of this Layer.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Code"
            },
            "compatibleArchitectures": {
              "Remarks": "",
              "Summary": "The system architectures compatible with this layer.",
              "Required": false,
              "Type": "List",
              "ItemType": "aws-cdk-lib.aws_lambda.Architecture"
            },
            "compatibleRuntimes": {
              "Remarks": "",
              "Summary": "The runtimes compatible with this Layer.",
              "Required": false,
              "Type": "List",
              "ItemType": "aws-cdk-lib.aws_lambda.Runtime"
            }
          },
          "Methods": {
            "aws-cdk-lib.aws_lambda.LayerVersion.isConstruct": {
              "Parameters": {
                "x": {
                  "Summary": "Any object.",
                  "Type": "Any"
                }
              },
              "Summary": "Checks if `x` is a construct.",
              "Remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead.",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "toString": {
              "Parameters": {},
              "Summary": "Returns a string representation of this construct.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "aws-cdk-lib.aws_lambda.LayerVersion.isOwnedResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Returns true if the construct was created by CDK, and false otherwise.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "aws-cdk-lib.aws_lambda.LayerVersion.isResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Check whether the given construct is a Resource.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "applyRemovalPolicy": {
              "Parameters": {
                "policy": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.RemovalPolicy"
                }
              },
              "Summary": "Apply the given removal policy to this resource.",
              "Remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
              "Static": false
            },
            "generatePhysicalName": {
              "Parameters": {},
              "Summary": "",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceArnAttribute": {
              "Parameters": {
                "arnAttr": {
                  "Summary": "The CFN attribute which resolves to the ARN of the resource.",
                  "Type": "String"
                },
                "arnComponents": {
                  "Summary": "The format of the ARN of this resource.",
                  "Type": "aws-cdk-lib.ArnComponents"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"ARN\" attribute (e.g. `bucket.bucketArn`).",
              "Remarks": "Normally, this token will resolve to `arnAttr`, but if the resource is\nreferenced across environments, `arnComponents` will be used to synthesize\na concrete ARN with the resource's physical name. Make sure to reference\n`this.physicalName` in `arnComponents`.",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceNameAttribute": {
              "Parameters": {
                "nameAttr": {
                  "Summary": "The CFN attribute which resolves to the resource's name.",
                  "Type": "String"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"name\" attribute (e.g. `bucket.bucketName`).",
              "Remarks": "Normally, this token will resolve to `nameAttr`, but if the resource is\nreferenced across environments, it will be resolved to `this.physicalName`,\nwhich will be a concrete name.",
              "Static": false,
              "ReturnType": "String"
            },
            "aws-cdk-lib.aws_lambda.LayerVersion.fromLayerVersionArn": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                },
                "id": {
                  "Summary": "",
                  "Type": "String"
                },
                "layerVersionArn": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "Imports a layer version by ARN.",
              "Remarks": "Assumes it is compatible with all Lambda runtimes.",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.ILayerVersion"
            },
            "aws-cdk-lib.aws_lambda.LayerVersion.fromLayerVersionAttributes": {
              "Parameters": {
                "scope": {
                  "Summary": "the parent Construct that will use the imported layer.",
                  "Type": "constructs.Construct"
                },
                "id": {
                  "Summary": "the id of the imported layer in the construct tree.",
                  "Type": "String"
                },
                "attrs": {
                  "Summary": "the properties of the imported layer.",
                  "Type": "aws-cdk-lib.aws_lambda.LayerVersionAttributes"
                }
              },
              "Summary": "Imports a Layer that has been defined externally.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.ILayerVersion"
            },
            "addPermission": {
              "Parameters": {
                "id": {
                  "Summary": "",
                  "Type": "String"
                },
                "permission": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.LayerVersionPermission"
                }
              },
              "Summary": "Add permission for this layer version to specific entities.",
              "Remarks": "Usage within\nthe same account where the layer is defined is always allowed and does not\nrequire calling this method. Note that the principal that creates the\nLambda function using the layer (for example, a CloudFormation changeset\nexecution role) also needs to have the ``lambda:GetLayerVersion``\npermission on the layer version.",
              "Static": false
            }
          },
          "PublicProperties": {
            "node": {
              "Remarks": "",
              "Summary": "The tree node.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "env": {
              "Remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
              "Summary": "The environment this resource belongs to.",
              "Required": true,
              "Type": "aws-cdk-lib.ResourceEnvironment"
            },
            "stack": {
              "Remarks": "",
              "Summary": "The stack in which this resource is defined.",
              "Required": true,
              "Type": "aws-cdk-lib.Stack"
            },
            "layerVersionArn": {
              "Remarks": "",
              "Summary": "The ARN of the Lambda Layer version that this Layer defines.",
              "Required": true,
              "Type": "String"
            },
            "compatibleRuntimes": {
              "Remarks": "",
              "Summary": "The runtimes compatible with this Layer.",
              "Required": false,
              "Type": "List",
              "ItemType": "aws-cdk-lib.aws_lambda.Runtime"
            }
          }
        },
        "SingletonFunction": {
          "Properties": {
            "maxEventAge": {
              "Remarks": "Minimum: 60 seconds\nMaximum: 6 hours",
              "Summary": "The maximum age of a request that Lambda sends to a function for processing.",
              "Required": false,
              "Type": "aws-cdk-lib.Duration"
            },
            "onFailure": {
              "Remarks": "",
              "Summary": "The destination for failed invocations.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.IDestination"
            },
            "onSuccess": {
              "Remarks": "",
              "Summary": "The destination for successful invocations.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.IDestination"
            },
            "retryAttempts": {
              "Remarks": "Minimum: 0\nMaximum: 2",
              "Summary": "The maximum number of times to retry when the function returns an error.",
              "Required": false,
              "Type": "Number"
            },
            "adotInstrumentation": {
              "Remarks": "",
              "Summary": "Specify the configuration of AWS Distro for OpenTelemetry (ADOT) instrumentation.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.AdotInstrumentationConfig"
            },
            "allowAllIpv6Outbound": {
              "Remarks": "If set to true, there will only be a single egress rule which allows all\noutbound ipv6 traffic. If set to false, you must individually add traffic rules to allow the\nLambda to connect to network targets using ipv6.\n\nDo not specify this property if the `securityGroups` or `securityGroup` property is set.\nInstead, configure `allowAllIpv6Outbound` directly on the security group.",
              "Summary": "Whether to allow the Lambda to send all ipv6 network traffic.",
              "Required": false,
              "Type": "Boolean"
            },
            "allowAllOutbound": {
              "Remarks": "If set to false, you must individually add traffic rules to allow the\nLambda to connect to network targets.\n\nDo not specify this property if the `securityGroups` or `securityGroup` property is set.\nInstead, configure `allowAllOutbound` directly on the security group.",
              "Summary": "Whether to allow the Lambda to send all network traffic (except ipv6).",
              "Required": false,
              "Type": "Boolean"
            },
            "allowPublicSubnet": {
              "Remarks": "Use this property to acknowledge this limitation and still place the function in a public subnet.",
              "Summary": "Lambda Functions in a public subnet can NOT access the internet.",
              "Required": false,
              "Type": "Boolean"
            },
            "applicationLogLevel": {
              "Remarks": "",
              "Summary": "Sets the application log level for the function.",
              "Required": false,
              "Type": "String"
            },
            "applicationLogLevelV2": {
              "Remarks": "",
              "Summary": "Sets the application log level for the function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.ApplicationLogLevel"
            },
            "architecture": {
              "Remarks": "",
              "Summary": "The system architectures compatible with this lambda function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.Architecture"
            },
            "codeSigningConfig": {
              "Remarks": "",
              "Summary": "Code signing config associated with this function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.ICodeSigningConfig"
            },
            "currentVersionOptions": {
              "Remarks": "",
              "Summary": "Options for the `lambda.Version` resource automatically created by the `fn.currentVersion` method.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.VersionOptions"
            },
            "deadLetterQueue": {
              "Remarks": "If SNS topic is desired, specify `deadLetterTopic` property instead.",
              "Summary": "The SQS queue to use if DLQ is enabled.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_sqs.IQueue"
            },
            "deadLetterQueueEnabled": {
              "Remarks": "If `deadLetterQueue` is undefined,\nan SQS queue with default options will be defined for your Function.",
              "Summary": "Enabled DLQ.",
              "Required": false,
              "Type": "Boolean"
            },
            "deadLetterTopic": {
              "Remarks": "Note that if `deadLetterQueueEnabled` is set to `true`, an SQS queue will be created\nrather than an SNS topic. Using an SNS topic as a DLQ requires this property to be set explicitly.",
              "Summary": "The SNS topic to use as a DLQ.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_sns.ITopic"
            },
            "description": {
              "Remarks": "",
              "Summary": "A description of the function.",
              "Required": false,
              "Type": "String"
            },
            "environment": {
              "Remarks": "Use environment variables to apply configuration changes, such\nas test and production environment configurations, without changing your\nLambda function source code.",
              "Summary": "Key-value pairs that Lambda caches and makes available for your Lambda functions.",
              "Required": false,
              "Type": "Map",
              "ItemType": "String"
            },
            "environmentEncryption": {
              "Remarks": "",
              "Summary": "The AWS KMS key that's used to encrypt your function's environment variables.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_kms.IKey"
            },
            "ephemeralStorageSize": {
              "Remarks": "",
              "Summary": "The size of the function’s /tmp directory in MiB.",
              "Required": false,
              "Type": "aws-cdk-lib.Size"
            },
            "events": {
              "Remarks": "You can also add event sources using `addEventSource`.",
              "Summary": "Event sources for this function.",
              "Required": false,
              "Type": "List",
              "ItemType": "aws-cdk-lib.aws_lambda.IEventSource"
            },
            "filesystem": {
              "Remarks": "",
              "Summary": "The filesystem configuration for the lambda function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.FileSystem"
            },
            "functionName": {
              "Remarks": "",
              "Summary": "A name for the function.",
              "Required": false,
              "Type": "String"
            },
            "initialPolicy": {
              "Remarks": "You can call `addToRolePolicy` to the created lambda to add statements post creation.",
              "Summary": "Initial policy statements to add to the created Lambda Role.",
              "Required": false,
              "Type": "List",
              "ItemType": "aws-cdk-lib.aws_iam.PolicyStatement"
            },
            "insightsVersion": {
              "Remarks": "",
              "Summary": "Specify the version of CloudWatch Lambda insights to use for monitoring.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.LambdaInsightsVersion"
            },
            "ipv6AllowedForDualStack": {
              "Remarks": "Only used if 'vpc' is supplied.",
              "Summary": "Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.",
              "Required": false,
              "Type": "Boolean"
            },
            "layers": {
              "Remarks": "You can configure your Lambda function to pull in\nadditional code during initialization in the form of layers. Layers are packages of libraries or other dependencies\nthat can be used by multiple functions.",
              "Summary": "A list of layers to add to the function's execution environment.",
              "Required": false,
              "Type": "List",
              "ItemType": "aws-cdk-lib.aws_lambda.ILayerVersion"
            },
            "logFormat": {
              "Remarks": "",
              "Summary": "Sets the logFormat for the function.",
              "Required": false,
              "Type": "String"
            },
            "loggingFormat": {
              "Remarks": "",
              "Summary": "Sets the loggingFormat for the function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.LoggingFormat"
            },
            "logGroup": {
              "Remarks": "By default, Lambda functions send logs to an automatically created default log group named /aws/lambda/\\<function name\\>.\nHowever you cannot change the properties of this auto-created log group using the AWS CDK, e.g. you cannot set a different log retention.\n\nUse the `logGroup` property to create a fully customizable LogGroup ahead of time, and instruct the Lambda function to send logs to it.\n\nProviding a user-controlled log group was rolled out to commercial regions on 2023-11-16.\nIf you are deploying to another type of region, please check regional availability first.",
              "Summary": "The log group the function sends logs to.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_logs.ILogGroup"
            },
            "logRetention": {
              "Remarks": "When updating\nthis property, unsetting it doesn't remove the log retention policy. To\nremove the retention policy, set the value to `INFINITE`.\n\nThis is a legacy API and we strongly recommend you move away from it if you can.\nInstead create a fully customizable log group with `logs.LogGroup` and use the `logGroup` property\nto instruct the Lambda function to send logs to it.\nMigrating from `logRetention` to `logGroup` will cause the name of the log group to change.\nUsers and code and referencing the name verbatim will have to adjust.\n\nIn AWS CDK code, you can access the log group name directly from the LogGroup construct:\n```ts\nimport * as logs from 'aws-cdk-lib/aws-logs';\n\ndeclare const myLogGroup: logs.LogGroup;\nmyLogGroup.logGroupName;\n```",
              "Summary": "The number of days log events are kept in CloudWatch Logs.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_logs.RetentionDays"
            },
            "logRetentionRetryOptions": {
              "Remarks": "These options control the retry policy when interacting with CloudWatch APIs.\n\nThis is a legacy API and we strongly recommend you migrate to `logGroup` if you can.\n`logGroup` allows you to create a fully customizable log group and instruct the Lambda function to send logs to it.",
              "Summary": "When log retention is specified, a custom resource attempts to create the CloudWatch log group.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.LogRetentionRetryOptions"
            },
            "logRetentionRole": {
              "Remarks": "This is a legacy API and we strongly recommend you migrate to `logGroup` if you can.\n`logGroup` allows you to create a fully customizable log group and instruct the Lambda function to send logs to it.",
              "Summary": "The IAM role for the Lambda function associated with the custom resource that sets the retention policy.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_iam.IRole"
            },
            "memorySize": {
              "Remarks": "Lambda uses this value to proportionally allocate the amount of CPU\npower. For more information, see Resource Model in the AWS Lambda\nDeveloper Guide.",
              "Summary": "The amount of memory, in MB, that is allocated to your Lambda function.",
              "Required": false,
              "Type": "Number"
            },
            "paramsAndSecrets": {
              "Remarks": "",
              "Summary": "Specify the configuration of Parameters and Secrets Extension.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.ParamsAndSecretsLayerVersion"
            },
            "profiling": {
              "Remarks": "",
              "Summary": "Enable profiling.",
              "Required": false,
              "Type": "Boolean"
            },
            "profilingGroup": {
              "Remarks": "",
              "Summary": "Profiling Group.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_codeguruprofiler.IProfilingGroup"
            },
            "recursiveLoop": {
              "Remarks": "It lets Lambda detect and terminate unintended recursive loops.",
              "Summary": "Sets the Recursive Loop Protection for Lambda Function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.RecursiveLoop"
            },
            "reservedConcurrentExecutions": {
              "Remarks": "",
              "Summary": "The maximum of concurrent executions you want to reserve for the function.",
              "Required": false,
              "Type": "Number"
            },
            "role": {
              "Remarks": "This is the role that will be assumed by the function upon execution.\nIt controls the permissions that the function will have. The Role must\nbe assumable by the 'lambda.amazonaws.com' service principal.\n\nThe default Role automatically has permissions granted for Lambda execution. If you\nprovide a Role, you must add the relevant AWS managed policies yourself.\n\nThe relevant managed policies are \"service-role/AWSLambdaBasicExecutionRole\" and\n\"service-role/AWSLambdaVPCAccessExecutionRole\".",
              "Summary": "Lambda execution role.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_iam.IRole"
            },
            "runtimeManagementMode": {
              "Remarks": "",
              "Summary": "Sets the runtime management configuration for a function's version.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.RuntimeManagementMode"
            },
            "securityGroups": {
              "Remarks": "Only used if 'vpc' is supplied.",
              "Summary": "The list of security groups to associate with the Lambda's network interfaces.",
              "Required": false,
              "Type": "List",
              "ItemType": "aws-cdk-lib.aws_ec2.ISecurityGroup"
            },
            "snapStart": {
              "Remarks": "SnapStart is currently supported for Java 11, Java 17, Python 3.12, Python 3.13, and .NET 8 runtime",
              "Summary": "Enable SnapStart for Lambda Function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.SnapStartConf"
            },
            "systemLogLevel": {
              "Remarks": "",
              "Summary": "Sets the system log level for the function.",
              "Required": false,
              "Type": "String"
            },
            "systemLogLevelV2": {
              "Remarks": "",
              "Summary": "Sets the system log level for the function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.SystemLogLevel"
            },
            "timeout": {
              "Remarks": "Because the execution time affects cost, set this value\nbased on the function's expected execution time.",
              "Summary": "The function execution time (in seconds) after which Lambda terminates the function.",
              "Required": false,
              "Type": "aws-cdk-lib.Duration"
            },
            "tracing": {
              "Remarks": "",
              "Summary": "Enable AWS X-Ray Tracing for Lambda Function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.Tracing"
            },
            "vpc": {
              "Remarks": "Specify this if the Lambda function needs to access resources in a VPC.\nThis is required when `vpcSubnets` is specified.",
              "Summary": "VPC network to place Lambda network interfaces.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_ec2.IVpc"
            },
            "vpcSubnets": {
              "Remarks": "This requires `vpc` to be specified in order for interfaces to actually be\nplaced in the subnets. If `vpc` is not specify, this will raise an error.\n\nNote: Internet access for Lambda Functions requires a NAT Gateway, so picking\npublic subnets is not allowed (unless `allowPublicSubnet` is set to `true`).",
              "Summary": "Where to place the network interfaces within the VPC.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_ec2.SubnetSelection"
            },
            "code": {
              "Remarks": "You can point to a file in an\nAmazon Simple Storage Service (Amazon S3) bucket or specify your source\ncode as inline text.",
              "Summary": "The source code of your Lambda function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Code"
            },
            "handler": {
              "Remarks": "The format includes the file name. It can also include\nnamespaces and other qualifiers, depending on the runtime.\nFor more information, see https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html.\n\nUse `Handler.FROM_IMAGE` when defining a function from a Docker image.\n\nNOTE: If you specify your source code as inline text by specifying the\nZipFile property within the Code property, specify index.function_name as\nthe handler.",
              "Summary": "The name of the method within your code that Lambda calls to execute your function.",
              "Required": true,
              "Type": "String"
            },
            "runtime": {
              "Remarks": "For valid values, see the Runtime property in the AWS Lambda Developer\nGuide.\n\nUse `Runtime.FROM_IMAGE` when defining a function from a Docker image.",
              "Summary": "The runtime environment for the Lambda function that you are uploading.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime"
            },
            "uuid": {
              "Remarks": "The identifier should be unique across all custom resource providers.\nWe recommend generating a UUID per provider.",
              "Summary": "A unique identifier to identify this lambda.",
              "Required": true,
              "Type": "String"
            },
            "lambdaPurpose": {
              "Remarks": "If the Lambda does not have a physical name, this string will be\nreflected its generated name. The combination of lambdaPurpose\nand uuid must be unique.",
              "Summary": "A descriptive name for the purpose of this Lambda.",
              "Required": false,
              "Type": "String"
            }
          },
          "Methods": {
            "aws-cdk-lib.aws_lambda.SingletonFunction.isConstruct": {
              "Parameters": {
                "x": {
                  "Summary": "Any object.",
                  "Type": "Any"
                }
              },
              "Summary": "Checks if `x` is a construct.",
              "Remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead.",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "toString": {
              "Parameters": {},
              "Summary": "Returns a string representation of this construct.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "aws-cdk-lib.aws_lambda.SingletonFunction.isOwnedResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Returns true if the construct was created by CDK, and false otherwise.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "aws-cdk-lib.aws_lambda.SingletonFunction.isResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Check whether the given construct is a Resource.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "applyRemovalPolicy": {
              "Parameters": {
                "policy": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.RemovalPolicy"
                }
              },
              "Summary": "Apply the given removal policy to this resource.",
              "Remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
              "Static": false
            },
            "generatePhysicalName": {
              "Parameters": {},
              "Summary": "",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceArnAttribute": {
              "Parameters": {
                "arnAttr": {
                  "Summary": "The CFN attribute which resolves to the ARN of the resource.",
                  "Type": "String"
                },
                "arnComponents": {
                  "Summary": "The format of the ARN of this resource.",
                  "Type": "aws-cdk-lib.ArnComponents"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"ARN\" attribute (e.g. `bucket.bucketArn`).",
              "Remarks": "Normally, this token will resolve to `arnAttr`, but if the resource is\nreferenced across environments, `arnComponents` will be used to synthesize\na concrete ARN with the resource's physical name. Make sure to reference\n`this.physicalName` in `arnComponents`.",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceNameAttribute": {
              "Parameters": {
                "nameAttr": {
                  "Summary": "The CFN attribute which resolves to the resource's name.",
                  "Type": "String"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"name\" attribute (e.g. `bucket.bucketName`).",
              "Remarks": "Normally, this token will resolve to `nameAttr`, but if the resource is\nreferenced across environments, it will be resolved to `this.physicalName`,\nwhich will be a concrete name.",
              "Static": false,
              "ReturnType": "String"
            },
            "addEventSource": {
              "Parameters": {
                "source": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IEventSource"
                }
              },
              "Summary": "Adds an event source to this function.",
              "Remarks": "Event sources are implemented in the aws-cdk-lib/aws-lambda-event-sources module.\n\nThe following example adds an SQS Queue as an event source:\n```\nimport { SqsEventSource } from 'aws-cdk-lib/aws-lambda-event-sources';\nmyFunction.addEventSource(new SqsEventSource(myQueue));\n```",
              "Static": false
            },
            "addEventSourceMapping": {
              "Parameters": {
                "id": {
                  "Summary": "",
                  "Type": "String"
                },
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.EventSourceMappingOptions"
                }
              },
              "Summary": "Adds an event source that maps to this AWS Lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.EventSourceMapping"
            },
            "addFunctionUrl": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.FunctionUrlOptions"
                }
              },
              "Summary": "Adds a url to this lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.FunctionUrl"
            },
            "addPermission": {
              "Parameters": {
                "name": {
                  "Summary": "",
                  "Type": "String"
                },
                "permission": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.Permission"
                }
              },
              "Summary": "Adds a permission to the Lambda resource policy.",
              "Remarks": "",
              "Static": false
            },
            "addToRolePolicy": {
              "Parameters": {
                "statement": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.PolicyStatement"
                }
              },
              "Summary": "Adds a statement to the IAM role assumed by the instance.",
              "Remarks": "",
              "Static": false
            },
            "configureAsyncInvoke": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.EventInvokeConfigOptions"
                }
              },
              "Summary": "Configures options for asynchronous invocation.",
              "Remarks": "",
              "Static": false
            },
            "considerWarningOnInvokeFunctionPermissions": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                },
                "action": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "A warning will be added to functions under the following conditions: - permissions that include `lambda:InvokeFunction` are added to the unqualified function.",
              "Remarks": "- function.currentVersion is invoked before or after the permission is created.\n\nThis applies only to permissions on Lambda functions, not versions or aliases.\nThis function is overridden as a noOp for QualifiedFunctionBase.",
              "Static": false
            },
            "grantInvoke": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeCompositePrincipal": {
              "Parameters": {
                "compositePrincipal": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.CompositePrincipal"
                }
              },
              "Summary": "Grant multiple principals the ability to invoke this Lambda via CompositePrincipal.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "List"
            },
            "grantInvokeLatestVersion": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke the $LATEST version or unqualified version of this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeUrl": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda Function URL.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeVersion": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                },
                "version": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IVersion"
                }
              },
              "Summary": "Grant the given identity permissions to invoke the given version of this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "metric": {
              "Parameters": {
                "metricName": {
                  "Summary": "",
                  "Type": "String"
                },
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Return the given named metric for this Function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricDuration": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How long execution of this Lambda takes.",
              "Remarks": "Average over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricErrors": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How many invocations of this Lambda fail.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricInvocations": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How often this Lambda is invoked.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricThrottles": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How often this Lambda is throttled.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "warnInvokeFunctionPermissions": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                }
              },
              "Summary": "",
              "Remarks": "",
              "Static": false
            },
            "addDependency": {
              "Parameters": {
                "up": {
                  "Summary": "",
                  "Type": "constructs.IDependable"
                }
              },
              "Summary": "Using node.addDependency() does not work on this method as the underlying lambda function is modeled as a singleton across the stack. Use this method instead to declare dependencies.",
              "Remarks": "",
              "Static": false
            },
            "addEnvironment": {
              "Parameters": {
                "key": {
                  "Summary": "The environment variable key.",
                  "Type": "String"
                },
                "value": {
                  "Summary": "The environment variable's value.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Environment variable options.",
                  "Type": "aws-cdk-lib.aws_lambda.EnvironmentOptions"
                }
              },
              "Summary": "Adds an environment variable to this Lambda function.",
              "Remarks": "If this is a ref to a Lambda function, this operation results in a no-op.",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.Function"
            },
            "addLayers": {
              "Parameters": {
                "layers": {
                  "Summary": "the layers to be added.",
                  "Type": "aws-cdk-lib.aws_lambda.ILayerVersion"
                }
              },
              "Summary": "Adds one or more Lambda Layers to this Lambda function.",
              "Remarks": "",
              "Static": false
            },
            "addMetadata": {
              "Parameters": {
                "type": {
                  "Summary": "",
                  "Type": "String"
                },
                "data": {
                  "Summary": "",
                  "Type": "Any"
                },
                "options": {
                  "Summary": "",
                  "Type": "constructs.MetadataOptions"
                }
              },
              "Summary": "Use this method to write to the construct tree.",
              "Remarks": "The metadata entries are written to the Cloud Assembly Manifest if the `treeMetadata` property is specified in the props of the App that contains this Construct.",
              "Static": false
            },
            "dependOn": {
              "Parameters": {
                "down": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "The SingletonFunction construct cannot be added as a dependency of another construct using node.addDependency(). Use this method instead to declare this as a dependency of another construct.",
              "Remarks": "",
              "Static": false
            }
          },
          "PublicProperties": {
            "node": {
              "Remarks": "",
              "Summary": "The tree node.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "env": {
              "Remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
              "Summary": "The environment this resource belongs to.",
              "Required": true,
              "Type": "aws-cdk-lib.ResourceEnvironment"
            },
            "stack": {
              "Remarks": "",
              "Summary": "The stack in which this resource is defined.",
              "Required": true,
              "Type": "aws-cdk-lib.Stack"
            },
            "architecture": {
              "Remarks": "",
              "Summary": "The architecture of this Lambda Function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Architecture"
            },
            "connections": {
              "Remarks": "Will fail if not a VPC-enabled Lambda Function",
              "Summary": "Access the Connections object.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_ec2.Connections"
            },
            "functionArn": {
              "Remarks": "",
              "Summary": "The ARN fo the function.",
              "Required": true,
              "Type": "String"
            },
            "functionName": {
              "Remarks": "",
              "Summary": "The name of the function.",
              "Required": true,
              "Type": "String"
            },
            "grantPrincipal": {
              "Remarks": "",
              "Summary": "The principal this Lambda Function is running as.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_iam.IPrincipal"
            },
            "isBoundToVpc": {
              "Remarks": "If this is is `false`, trying to access the `connections` object will fail.",
              "Summary": "Whether or not this Lambda function was bound to a VPC.",
              "Required": true,
              "Type": "Boolean"
            },
            "latestVersion": {
              "Remarks": "Note that this is reference to a non-specific AWS Lambda version, which\nmeans the function this version refers to can return different results in\ndifferent invocations.\n\nTo obtain a reference to an explicit version which references the current\nfunction configuration, use `lambdaFunction.currentVersion` instead.",
              "Summary": "The `$LATEST` version of this function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IVersion"
            },
            "permissionsNode": {
              "Remarks": "",
              "Summary": "The construct node where permissions are attached.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "resourceArnsForGrantInvoke": {
              "Remarks": "",
              "Summary": "The ARN(s) to put into the resource field of the generated IAM policy for grantInvoke().",
              "Required": true,
              "Type": "List",
              "ItemType": "String"
            },
            "role": {
              "Remarks": "Undefined if the function was imported without a role.",
              "Summary": "The IAM role associated with this function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_iam.IRole"
            },
            "constructName": {
              "Remarks": "It acts as a unique ID within its CDK stack.",
              "Summary": "The name of the singleton function.",
              "Required": true,
              "Type": "String"
            },
            "currentVersion": {
              "Remarks": "You can specify options for this version using the `currentVersionOptions`\nprop when initializing the `lambda.SingletonFunction`.",
              "Summary": "Returns a `lambda.Version` which represents the current version of this singleton Lambda function. A new version will be created every time the function's configuration changes.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Version"
            },
            "logGroup": {
              "Remarks": "If either `logRetention` is set or this property is called, a CloudFormation custom resource is added to the stack that\npre-creates the log group as part of the stack deployment, if it already doesn't exist, and sets the correct log retention\nperiod (never expire, by default).\n\nFurther, if the log group already exists and the `logRetention` is not set, the custom resource will reset the log retention\nto never expire even if it was configured with a different value.",
              "Summary": "The LogGroup where the Lambda function's logs are made available.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_logs.ILogGroup"
            },
            "runtime": {
              "Remarks": "",
              "Summary": "The runtime environment for the Lambda function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime"
            }
          }
        },
        "Version": {
          "Properties": {
            "maxEventAge": {
              "Remarks": "Minimum: 60 seconds\nMaximum: 6 hours",
              "Summary": "The maximum age of a request that Lambda sends to a function for processing.",
              "Required": false,
              "Type": "aws-cdk-lib.Duration"
            },
            "onFailure": {
              "Remarks": "",
              "Summary": "The destination for failed invocations.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.IDestination"
            },
            "onSuccess": {
              "Remarks": "",
              "Summary": "The destination for successful invocations.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.IDestination"
            },
            "retryAttempts": {
              "Remarks": "Minimum: 0\nMaximum: 2",
              "Summary": "The maximum number of times to retry when the function returns an error.",
              "Required": false,
              "Type": "Number"
            },
            "codeSha256": {
              "Remarks": "Specify to validate that you're deploying the right version.",
              "Summary": "SHA256 of the version of the Lambda source code.",
              "Required": false,
              "Type": "String"
            },
            "description": {
              "Remarks": "",
              "Summary": "Description of the version.",
              "Required": false,
              "Type": "String"
            },
            "provisionedConcurrentExecutions": {
              "Remarks": "",
              "Summary": "Specifies a provisioned concurrency configuration for a function's version.",
              "Required": false,
              "Type": "Number"
            },
            "removalPolicy": {
              "Remarks": "",
              "Summary": "Whether to retain old versions of this function when a new version is created.",
              "Required": false,
              "Type": "aws-cdk-lib.RemovalPolicy"
            },
            "lambda": {
              "Remarks": "",
              "Summary": "Function to get the value of.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IFunction"
            }
          },
          "Methods": {
            "aws-cdk-lib.aws_lambda.Version.isConstruct": {
              "Parameters": {
                "x": {
                  "Summary": "Any object.",
                  "Type": "Any"
                }
              },
              "Summary": "Checks if `x` is a construct.",
              "Remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead.",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "toString": {
              "Parameters": {},
              "Summary": "Returns a string representation of this construct.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "aws-cdk-lib.aws_lambda.Version.isOwnedResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Returns true if the construct was created by CDK, and false otherwise.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "aws-cdk-lib.aws_lambda.Version.isResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Check whether the given construct is a Resource.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "applyRemovalPolicy": {
              "Parameters": {
                "policy": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.RemovalPolicy"
                }
              },
              "Summary": "Apply the given removal policy to this resource.",
              "Remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
              "Static": false
            },
            "generatePhysicalName": {
              "Parameters": {},
              "Summary": "",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceArnAttribute": {
              "Parameters": {
                "arnAttr": {
                  "Summary": "The CFN attribute which resolves to the ARN of the resource.",
                  "Type": "String"
                },
                "arnComponents": {
                  "Summary": "The format of the ARN of this resource.",
                  "Type": "aws-cdk-lib.ArnComponents"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"ARN\" attribute (e.g. `bucket.bucketArn`).",
              "Remarks": "Normally, this token will resolve to `arnAttr`, but if the resource is\nreferenced across environments, `arnComponents` will be used to synthesize\na concrete ARN with the resource's physical name. Make sure to reference\n`this.physicalName` in `arnComponents`.",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceNameAttribute": {
              "Parameters": {
                "nameAttr": {
                  "Summary": "The CFN attribute which resolves to the resource's name.",
                  "Type": "String"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"name\" attribute (e.g. `bucket.bucketName`).",
              "Remarks": "Normally, this token will resolve to `nameAttr`, but if the resource is\nreferenced across environments, it will be resolved to `this.physicalName`,\nwhich will be a concrete name.",
              "Static": false,
              "ReturnType": "String"
            },
            "addEventSource": {
              "Parameters": {
                "source": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IEventSource"
                }
              },
              "Summary": "Adds an event source to this function.",
              "Remarks": "Event sources are implemented in the aws-cdk-lib/aws-lambda-event-sources module.\n\nThe following example adds an SQS Queue as an event source:\n```\nimport { SqsEventSource } from 'aws-cdk-lib/aws-lambda-event-sources';\nmyFunction.addEventSource(new SqsEventSource(myQueue));\n```",
              "Static": false
            },
            "addEventSourceMapping": {
              "Parameters": {
                "id": {
                  "Summary": "",
                  "Type": "String"
                },
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.EventSourceMappingOptions"
                }
              },
              "Summary": "Adds an event source that maps to this AWS Lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.EventSourceMapping"
            },
            "addFunctionUrl": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.FunctionUrlOptions"
                }
              },
              "Summary": "Adds a url to this lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.FunctionUrl"
            },
            "addPermission": {
              "Parameters": {
                "id": {
                  "Summary": "The id for the permission construct.",
                  "Type": "String"
                },
                "permission": {
                  "Summary": "The permission to grant to this Lambda function.",
                  "Type": "aws-cdk-lib.aws_lambda.Permission"
                }
              },
              "Summary": "Adds a permission to the Lambda resource policy.",
              "Remarks": "",
              "Static": false
            },
            "addToRolePolicy": {
              "Parameters": {
                "statement": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.PolicyStatement"
                }
              },
              "Summary": "Adds a statement to the IAM role assumed by the instance.",
              "Remarks": "",
              "Static": false
            },
            "configureAsyncInvoke": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.EventInvokeConfigOptions"
                }
              },
              "Summary": "Configures options for asynchronous invocation.",
              "Remarks": "",
              "Static": false
            },
            "considerWarningOnInvokeFunctionPermissions": {
              "Parameters": {
                "_scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                },
                "_action": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "A warning will be added to functions under the following conditions: - permissions that include `lambda:InvokeFunction` are added to the unqualified function.",
              "Remarks": "- function.currentVersion is invoked before or after the permission is created.\n\nThis applies only to permissions on Lambda functions, not versions or aliases.\nThis function is overridden as a noOp for QualifiedFunctionBase.",
              "Static": false
            },
            "grantInvoke": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeCompositePrincipal": {
              "Parameters": {
                "compositePrincipal": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.CompositePrincipal"
                }
              },
              "Summary": "Grant multiple principals the ability to invoke this Lambda via CompositePrincipal.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "List"
            },
            "grantInvokeLatestVersion": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke the $LATEST version or unqualified version of this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeUrl": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda Function URL.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeVersion": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                },
                "version": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IVersion"
                }
              },
              "Summary": "Grant the given identity permissions to invoke the given version of this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "metric": {
              "Parameters": {
                "metricName": {
                  "Summary": "",
                  "Type": "String"
                },
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Return the given named metric for this Function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricDuration": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How long execution of this Lambda takes.",
              "Remarks": "Average over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricErrors": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How many invocations of this Lambda fail.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricInvocations": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How often this Lambda is invoked.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricThrottles": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How often this Lambda is throttled.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "warnInvokeFunctionPermissions": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                }
              },
              "Summary": "",
              "Remarks": "",
              "Static": false
            },
            "aws-cdk-lib.aws_lambda.Version.fromVersionArn": {
              "Parameters": {
                "scope": {
                  "Summary": "The cdk scope creating this resource.",
                  "Type": "constructs.Construct"
                },
                "id": {
                  "Summary": "The cdk id of this resource.",
                  "Type": "String"
                },
                "versionArn": {
                  "Summary": "The version ARN to create this version from.",
                  "Type": "String"
                }
              },
              "Summary": "Construct a Version object from a Version ARN.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.IVersion"
            },
            "aws-cdk-lib.aws_lambda.Version.fromVersionAttributes": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                },
                "id": {
                  "Summary": "",
                  "Type": "String"
                },
                "attrs": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.VersionAttributes"
                }
              },
              "Summary": "",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.IVersion"
            },
            "addAlias": {
              "Parameters": {
                "aliasName": {
                  "Summary": "The name of the alias (e.g. \"live\").",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Alias options.",
                  "Type": "aws-cdk-lib.aws_lambda.AliasOptions"
                }
              },
              "Summary": "Defines an alias for this version.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.Alias"
            }
          },
          "PublicProperties": {
            "node": {
              "Remarks": "",
              "Summary": "The tree node.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "env": {
              "Remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
              "Summary": "The environment this resource belongs to.",
              "Required": true,
              "Type": "aws-cdk-lib.ResourceEnvironment"
            },
            "stack": {
              "Remarks": "",
              "Summary": "The stack in which this resource is defined.",
              "Required": true,
              "Type": "aws-cdk-lib.Stack"
            },
            "architecture": {
              "Remarks": "",
              "Summary": "The architecture of this Lambda Function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Architecture"
            },
            "connections": {
              "Remarks": "Will fail if not a VPC-enabled Lambda Function",
              "Summary": "Access the Connections object.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_ec2.Connections"
            },
            "functionArn": {
              "Remarks": "",
              "Summary": "The ARN fo the function.",
              "Required": true,
              "Type": "String"
            },
            "functionName": {
              "Remarks": "",
              "Summary": "The name of the function.",
              "Required": true,
              "Type": "String"
            },
            "grantPrincipal": {
              "Remarks": "",
              "Summary": "The principal this Lambda Function is running as.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_iam.IPrincipal"
            },
            "isBoundToVpc": {
              "Remarks": "If this is is `false`, trying to access the `connections` object will fail.",
              "Summary": "Whether or not this Lambda function was bound to a VPC.",
              "Required": true,
              "Type": "Boolean"
            },
            "latestVersion": {
              "Remarks": "Note that this is reference to a non-specific AWS Lambda version, which\nmeans the function this version refers to can return different results in\ndifferent invocations.\n\nTo obtain a reference to an explicit version which references the current\nfunction configuration, use `lambdaFunction.currentVersion` instead.",
              "Summary": "The `$LATEST` version of this function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IVersion"
            },
            "permissionsNode": {
              "Remarks": "",
              "Summary": "The construct node where permissions are attached.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "resourceArnsForGrantInvoke": {
              "Remarks": "",
              "Summary": "The ARN(s) to put into the resource field of the generated IAM policy for grantInvoke().",
              "Required": true,
              "Type": "List",
              "ItemType": "String"
            },
            "role": {
              "Remarks": "Undefined if the function was imported without a role.",
              "Summary": "The IAM role associated with this function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_iam.IRole"
            },
            "lambda": {
              "Remarks": "",
              "Summary": "The underlying `IFunction`.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IFunction"
            },
            "edgeArn": {
              "Remarks": "",
              "Summary": "The ARN of the version for Lambda@Edge.",
              "Required": true,
              "Type": "String"
            },
            "version": {
              "Remarks": "",
              "Summary": "The most recently deployed version of this function.",
              "Required": true,
              "Type": "String"
            }
          }
        }
      },
      "PropertyTypes": {
        "AdotLambdaLayerGenericVersion": {
          "Properties": {},
          "Methods": {
            "layerArn": {
              "Parameters": {
                "scope": {
                  "Summary": "The binding scope.",
                  "Type": "constructs.IConstruct"
                },
                "architecture": {
                  "Summary": "The architecture of the Lambda layer (either X86_64 or ARM_64).",
                  "Type": "aws-cdk-lib.aws_lambda.Architecture"
                }
              },
              "Summary": "The ARN of the Lambda layer.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            }
          },
          "PublicProperties": {
            "LATEST": {
              "Remarks": "New versions could\nintroduce incompatible changes. Make sure to test them before deploying to production.",
              "Summary": "The latest layer version available in this CDK version.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerGenericVersion",
              "Static": true
            },
            "V0_102_1": {
              "Remarks": "",
              "Summary": "Version 0.102.1.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerGenericVersion",
              "Static": true
            },
            "V0_62_1": {
              "Remarks": "",
              "Summary": "Version 0.62.1.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerGenericVersion",
              "Static": true
            },
            "V0_82_0": {
              "Remarks": "",
              "Summary": "Version 0.82.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerGenericVersion",
              "Static": true
            },
            "V0_84_0": {
              "Remarks": "",
              "Summary": "Version 0.84.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerGenericVersion",
              "Static": true
            },
            "V0_88_0": {
              "Remarks": "",
              "Summary": "Version 0.88.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerGenericVersion",
              "Static": true
            },
            "V0_90_1": {
              "Remarks": "",
              "Summary": "Version 0.90.1.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerGenericVersion",
              "Static": true
            },
            "V0_98_0": {
              "Remarks": "",
              "Summary": "Version 0.98.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerGenericVersion",
              "Static": true
            }
          }
        },
        "AdotLambdaLayerJavaAutoInstrumentationVersion": {
          "Properties": {},
          "Methods": {
            "layerArn": {
              "Parameters": {
                "scope": {
                  "Summary": "The binding scope.",
                  "Type": "constructs.IConstruct"
                },
                "architecture": {
                  "Summary": "The architecture of the Lambda layer (either X86_64 or ARM_64).",
                  "Type": "aws-cdk-lib.aws_lambda.Architecture"
                }
              },
              "Summary": "The ARN of the Lambda layer.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            }
          },
          "PublicProperties": {
            "LATEST": {
              "Remarks": "New versions could\nintroduce incompatible changes. Make sure to test them before deploying to production.",
              "Summary": "The latest layer version available in this CDK version.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaAutoInstrumentationVersion",
              "Static": true
            },
            "V1_19_2": {
              "Remarks": "",
              "Summary": "Version 1.19.2.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaAutoInstrumentationVersion",
              "Static": true
            },
            "V1_28_1": {
              "Remarks": "",
              "Summary": "Version 1.28.1.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaAutoInstrumentationVersion",
              "Static": true
            },
            "V1_30_0": {
              "Remarks": "",
              "Summary": "Version 1.30.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaAutoInstrumentationVersion",
              "Static": true
            },
            "V1_31_0": {
              "Remarks": "",
              "Summary": "Version 1.31.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaAutoInstrumentationVersion",
              "Static": true
            },
            "V1_32_0": {
              "Remarks": "",
              "Summary": "Version 1.32.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaAutoInstrumentationVersion",
              "Static": true
            }
          }
        },
        "AdotLambdaLayerJavaScriptSdkVersion": {
          "Properties": {},
          "Methods": {
            "layerArn": {
              "Parameters": {
                "scope": {
                  "Summary": "The binding scope.",
                  "Type": "constructs.IConstruct"
                },
                "architecture": {
                  "Summary": "The architecture of the Lambda layer (either X86_64 or ARM_64).",
                  "Type": "aws-cdk-lib.aws_lambda.Architecture"
                }
              },
              "Summary": "The ARN of the Lambda layer.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            }
          },
          "PublicProperties": {
            "LATEST": {
              "Remarks": "New versions could\nintroduce incompatible changes. Make sure to test them before deploying to production.",
              "Summary": "The latest layer version available in this CDK version.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaScriptSdkVersion",
              "Static": true
            },
            "V1_15_0_1": {
              "Remarks": "",
              "Summary": "Version 1.15.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaScriptSdkVersion",
              "Static": true
            },
            "V1_16_0": {
              "Remarks": "",
              "Summary": "Version 1.16.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaScriptSdkVersion",
              "Static": true
            },
            "V1_17_1": {
              "Remarks": "",
              "Summary": "Version 1.17.1.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaScriptSdkVersion",
              "Static": true
            },
            "V1_18_1": {
              "Remarks": "",
              "Summary": "Version 1.18.1.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaScriptSdkVersion",
              "Static": true
            },
            "V1_7_0": {
              "Remarks": "",
              "Summary": "Version 1.7.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaScriptSdkVersion",
              "Static": true
            }
          }
        },
        "AdotLambdaLayerJavaSdkVersion": {
          "Properties": {},
          "Methods": {
            "layerArn": {
              "Parameters": {
                "scope": {
                  "Summary": "The binding scope.",
                  "Type": "constructs.IConstruct"
                },
                "architecture": {
                  "Summary": "The architecture of the Lambda layer (either X86_64 or ARM_64).",
                  "Type": "aws-cdk-lib.aws_lambda.Architecture"
                }
              },
              "Summary": "The ARN of the Lambda layer.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            }
          },
          "PublicProperties": {
            "LATEST": {
              "Remarks": "New versions could\nintroduce incompatible changes. Make sure to test them before deploying to production.",
              "Summary": "The latest layer version available in this CDK version.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaSdkVersion",
              "Static": true
            },
            "V1_19_0": {
              "Remarks": "",
              "Summary": "Version 1.19.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaSdkVersion",
              "Static": true
            },
            "V1_28_1": {
              "Remarks": "",
              "Summary": "Version 1.28.1.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaSdkVersion",
              "Static": true
            },
            "V1_30_0": {
              "Remarks": "",
              "Summary": "Version 1.30.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaSdkVersion",
              "Static": true
            },
            "V1_31_0": {
              "Remarks": "",
              "Summary": "Version 1.31.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaSdkVersion",
              "Static": true
            },
            "V1_32_0": {
              "Remarks": "",
              "Summary": "Version 1.32.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaSdkVersion",
              "Static": true
            }
          }
        },
        "AdotLambdaLayerPythonSdkVersion": {
          "Properties": {},
          "Methods": {
            "layerArn": {
              "Parameters": {
                "scope": {
                  "Summary": "The binding scope.",
                  "Type": "constructs.IConstruct"
                },
                "architecture": {
                  "Summary": "The architecture of the Lambda layer (either X86_64 or ARM_64).",
                  "Type": "aws-cdk-lib.aws_lambda.Architecture"
                }
              },
              "Summary": "The ARN of the Lambda layer.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            }
          },
          "PublicProperties": {
            "LATEST": {
              "Remarks": "New versions could\nintroduce incompatible changes. Make sure to test them before deploying to production.",
              "Summary": "The latest layer version available in this CDK version.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerPythonSdkVersion",
              "Static": true
            },
            "V1_13_0": {
              "Remarks": "",
              "Summary": "Version 1.13.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerPythonSdkVersion",
              "Static": true
            },
            "V1_14_0": {
              "Remarks": "",
              "Summary": "Version 1.14.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerPythonSdkVersion",
              "Static": true
            },
            "V1_15_0": {
              "Remarks": "",
              "Summary": "Version 1.15.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerPythonSdkVersion",
              "Static": true
            },
            "V1_16_0": {
              "Remarks": "",
              "Summary": "Version 1.16.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerPythonSdkVersion",
              "Static": true
            },
            "V1_17_0": {
              "Remarks": "",
              "Summary": "Version 1.17.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerPythonSdkVersion",
              "Static": true
            },
            "V1_18_0": {
              "Remarks": "",
              "Summary": "Version 1.18.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerPythonSdkVersion",
              "Static": true
            },
            "V1_19_0_1": {
              "Remarks": "",
              "Summary": "Version 1.19.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerPythonSdkVersion",
              "Static": true
            },
            "V1_20_0": {
              "Remarks": "",
              "Summary": "Version 1.20.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerPythonSdkVersion",
              "Static": true
            },
            "V1_20_0_1": {
              "Remarks": "",
              "Summary": "Version 1.20.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerPythonSdkVersion",
              "Static": true
            },
            "V1_21_0": {
              "Remarks": "",
              "Summary": "Version 1.21.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerPythonSdkVersion",
              "Static": true
            },
            "V1_24_0": {
              "Remarks": "",
              "Summary": "Version 1.24.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerPythonSdkVersion",
              "Static": true
            },
            "V1_25_0": {
              "Remarks": "",
              "Summary": "Version 1.25.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerPythonSdkVersion",
              "Static": true
            }
          }
        },
        "AdotLayerVersion": {
          "Properties": {},
          "Methods": {
            "aws-cdk-lib.aws_lambda.AdotLayerVersion.fromGenericLayerVersion": {
              "Parameters": {
                "version": {
                  "Summary": "The version of the Lambda layer to use.",
                  "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerGenericVersion"
                }
              },
              "Summary": "The ADOT Lambda layer for generic use cases.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AdotLayerVersion"
            },
            "aws-cdk-lib.aws_lambda.AdotLayerVersion.fromJavaAutoInstrumentationLayerVersion": {
              "Parameters": {
                "version": {
                  "Summary": "The version of the Lambda layer to use.",
                  "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaAutoInstrumentationVersion"
                }
              },
              "Summary": "The ADOT Lambda layer for Java auto instrumentation.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AdotLayerVersion"
            },
            "aws-cdk-lib.aws_lambda.AdotLayerVersion.fromJavaScriptSdkLayerVersion": {
              "Parameters": {
                "version": {
                  "Summary": "The version of the Lambda layer to use.",
                  "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaScriptSdkVersion"
                }
              },
              "Summary": "The ADOT Lambda layer for JavaScript SDK.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AdotLayerVersion"
            },
            "aws-cdk-lib.aws_lambda.AdotLayerVersion.fromJavaSdkLayerVersion": {
              "Parameters": {
                "version": {
                  "Summary": "The version of the Lambda layer to use.",
                  "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerJavaSdkVersion"
                }
              },
              "Summary": "The ADOT Lambda layer for Java SDK.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AdotLayerVersion"
            },
            "aws-cdk-lib.aws_lambda.AdotLayerVersion.fromPythonSdkLayerVersion": {
              "Parameters": {
                "version": {
                  "Summary": "The version of the Lambda layer to use.",
                  "Type": "aws-cdk-lib.aws_lambda.AdotLambdaLayerPythonSdkVersion"
                }
              },
              "Summary": "The ADOT Lambda layer for Python SDK.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AdotLayerVersion"
            }
          },
          "PublicProperties": {}
        },
        "Architecture": {
          "Properties": {},
          "Methods": {
            "aws-cdk-lib.aws_lambda.Architecture.custom": {
              "Parameters": {
                "name": {
                  "Summary": "the architecture name as recognized by AWS Lambda.",
                  "Type": "String"
                },
                "dockerPlatform": {
                  "Summary": "the platform to use for this architecture when building with Docker.",
                  "Type": "String"
                }
              },
              "Summary": "Used to specify a custom architecture name.",
              "Remarks": "Use this if the architecture name is not yet supported by the CDK.",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.Architecture"
            },
            "toString": {
              "Parameters": {},
              "Summary": "Returns a string representation of the architecture using the name.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            }
          },
          "PublicProperties": {
            "ARM_64": {
              "Remarks": "",
              "Summary": "64 bit architecture with the ARM instruction set.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Architecture",
              "Static": true
            },
            "X86_64": {
              "Remarks": "",
              "Summary": "64 bit architecture with x86 instruction set.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Architecture",
              "Static": true
            },
            "dockerPlatform": {
              "Remarks": "",
              "Summary": "The platform to use for this architecture when building with Docker.",
              "Required": true,
              "Type": "String"
            },
            "name": {
              "Remarks": "",
              "Summary": "The name of the architecture as recognized by the AWS Lambda service APIs.",
              "Required": true,
              "Type": "String"
            }
          }
        },
        "AssetCode": {
          "Properties": {},
          "Methods": {
            "aws-cdk-lib.aws_lambda.AssetCode.fromAsset": {
              "Parameters": {
                "path": {
                  "Summary": "Either a directory with the Lambda code bundle or a .zip file.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_s3_assets.AssetOptions"
                }
              },
              "Summary": "Loads the function code from a local disk path.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.AssetCode.fromAssetImage": {
              "Parameters": {
                "directory": {
                  "Summary": "the directory from which the asset must be created.",
                  "Type": "String"
                },
                "props": {
                  "Summary": "properties to further configure the selected image.",
                  "Type": "aws-cdk-lib.aws_lambda.AssetImageCodeProps"
                }
              },
              "Summary": "Create an ECR image from the specified asset and bind it as the Lambda code.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetImageCode"
            },
            "aws-cdk-lib.aws_lambda.AssetCode.fromBucket": {
              "Parameters": {
                "bucket": {
                  "Summary": "The S3 bucket.",
                  "Type": "aws-cdk-lib.aws_s3.IBucket"
                },
                "key": {
                  "Summary": "The object key.",
                  "Type": "String"
                },
                "objectVersion": {
                  "Summary": "Optional S3 object version.",
                  "Type": "String"
                }
              },
              "Summary": "Lambda handler code as an S3 object.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.S3Code"
            },
            "aws-cdk-lib.aws_lambda.AssetCode.fromBucketV2": {
              "Parameters": {
                "bucket": {
                  "Summary": "The S3 bucket.",
                  "Type": "aws-cdk-lib.aws_s3.IBucket"
                },
                "key": {
                  "Summary": "The object key.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Optional parameters for setting the code, current optional parameters to set here are 1.",
                  "Type": "aws-cdk-lib.aws_lambda.BucketOptions"
                }
              },
              "Summary": "Lambda handler code as an S3 object.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.S3CodeV2"
            },
            "aws-cdk-lib.aws_lambda.AssetCode.fromCfnParameters": {
              "Parameters": {
                "props": {
                  "Summary": "optional construction properties of `CfnParametersCode`.",
                  "Type": "aws-cdk-lib.aws_lambda.CfnParametersCodeProps"
                }
              },
              "Summary": "Creates a new Lambda source defined using CloudFormation parameters.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.CfnParametersCode"
            },
            "aws-cdk-lib.aws_lambda.AssetCode.fromCustomCommand": {
              "Parameters": {
                "output": {
                  "Summary": "Where the output of the command will be directed, either a directory or a .zip file with the output Lambda code bundle * For example, if you use the command to run a build script (e.g., [ 'node', 'bundle_code.js' ]), and the build script generates a directory `/my/lambda/code` containing code that should be ran in a Lambda function, then output should be set to `/my/lambda/code`.",
                  "Type": "String"
                },
                "command": {
                  "Summary": "The command which will be executed to generate the output, for example, [ 'node', 'bundle_code.js' ].",
                  "Type": "List"
                },
                "options": {
                  "Summary": "options for the custom command, and other asset options -- but bundling options are not allowed.",
                  "Type": "aws-cdk-lib.aws_lambda.CustomCommandOptions"
                }
              },
              "Summary": "Runs a command to build the code asset that will be used.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.AssetCode.fromDockerBuild": {
              "Parameters": {
                "path": {
                  "Summary": "The path to the directory containing the Docker file.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Docker build options.",
                  "Type": "aws-cdk-lib.aws_lambda.DockerBuildAssetOptions"
                }
              },
              "Summary": "Loads the function code from an asset created by a Docker build.",
              "Remarks": "By default, the asset is expected to be located at `/asset` in the\nimage.",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.AssetCode.fromEcrImage": {
              "Parameters": {
                "repository": {
                  "Summary": "the ECR repository that the image is in.",
                  "Type": "aws-cdk-lib.aws_ecr.IRepository"
                },
                "props": {
                  "Summary": "properties to further configure the selected image.",
                  "Type": "aws-cdk-lib.aws_lambda.EcrImageCodeProps"
                }
              },
              "Summary": "Use an existing ECR image as the Lambda code.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.EcrImageCode"
            },
            "aws-cdk-lib.aws_lambda.AssetCode.fromInline": {
              "Parameters": {
                "code": {
                  "Summary": "The actual handler code (the resulting zip file cannot exceed 4MB).",
                  "Type": "String"
                }
              },
              "Summary": "Inline code for Lambda handler.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.InlineCode"
            },
            "bind": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                }
              },
              "Summary": "Called when the lambda or layer is initialized to allow this object to bind to the stack, add resources and have fun.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.CodeConfig"
            },
            "bindToResource": {
              "Parameters": {
                "resource": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.CfnResource"
                },
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.ResourceBindOptions"
                }
              },
              "Summary": "Called after the CFN function resource has been created to allow the code class to bind to it.",
              "Remarks": "Specifically it's required to allow assets to add\nmetadata for tooling like SAM CLI to be able to find their origins.",
              "Static": false
            }
          },
          "PublicProperties": {
            "isInline": {
              "Remarks": "",
              "Summary": "Determines whether this Code is inline code or not.",
              "Required": true,
              "Type": "Boolean"
            },
            "path": {
              "Remarks": "",
              "Summary": "The path to the asset file or directory.",
              "Required": true,
              "Type": "String"
            }
          }
        },
        "AssetImageCode": {
          "Properties": {},
          "Methods": {
            "aws-cdk-lib.aws_lambda.AssetImageCode.fromAsset": {
              "Parameters": {
                "path": {
                  "Summary": "Either a directory with the Lambda code bundle or a .zip file.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_s3_assets.AssetOptions"
                }
              },
              "Summary": "Loads the function code from a local disk path.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.AssetImageCode.fromAssetImage": {
              "Parameters": {
                "directory": {
                  "Summary": "the directory from which the asset must be created.",
                  "Type": "String"
                },
                "props": {
                  "Summary": "properties to further configure the selected image.",
                  "Type": "aws-cdk-lib.aws_lambda.AssetImageCodeProps"
                }
              },
              "Summary": "Create an ECR image from the specified asset and bind it as the Lambda code.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetImageCode"
            },
            "aws-cdk-lib.aws_lambda.AssetImageCode.fromBucket": {
              "Parameters": {
                "bucket": {
                  "Summary": "The S3 bucket.",
                  "Type": "aws-cdk-lib.aws_s3.IBucket"
                },
                "key": {
                  "Summary": "The object key.",
                  "Type": "String"
                },
                "objectVersion": {
                  "Summary": "Optional S3 object version.",
                  "Type": "String"
                }
              },
              "Summary": "Lambda handler code as an S3 object.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.S3Code"
            },
            "aws-cdk-lib.aws_lambda.AssetImageCode.fromBucketV2": {
              "Parameters": {
                "bucket": {
                  "Summary": "The S3 bucket.",
                  "Type": "aws-cdk-lib.aws_s3.IBucket"
                },
                "key": {
                  "Summary": "The object key.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Optional parameters for setting the code, current optional parameters to set here are 1.",
                  "Type": "aws-cdk-lib.aws_lambda.BucketOptions"
                }
              },
              "Summary": "Lambda handler code as an S3 object.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.S3CodeV2"
            },
            "aws-cdk-lib.aws_lambda.AssetImageCode.fromCfnParameters": {
              "Parameters": {
                "props": {
                  "Summary": "optional construction properties of `CfnParametersCode`.",
                  "Type": "aws-cdk-lib.aws_lambda.CfnParametersCodeProps"
                }
              },
              "Summary": "Creates a new Lambda source defined using CloudFormation parameters.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.CfnParametersCode"
            },
            "aws-cdk-lib.aws_lambda.AssetImageCode.fromCustomCommand": {
              "Parameters": {
                "output": {
                  "Summary": "Where the output of the command will be directed, either a directory or a .zip file with the output Lambda code bundle * For example, if you use the command to run a build script (e.g., [ 'node', 'bundle_code.js' ]), and the build script generates a directory `/my/lambda/code` containing code that should be ran in a Lambda function, then output should be set to `/my/lambda/code`.",
                  "Type": "String"
                },
                "command": {
                  "Summary": "The command which will be executed to generate the output, for example, [ 'node', 'bundle_code.js' ].",
                  "Type": "List"
                },
                "options": {
                  "Summary": "options for the custom command, and other asset options -- but bundling options are not allowed.",
                  "Type": "aws-cdk-lib.aws_lambda.CustomCommandOptions"
                }
              },
              "Summary": "Runs a command to build the code asset that will be used.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.AssetImageCode.fromDockerBuild": {
              "Parameters": {
                "path": {
                  "Summary": "The path to the directory containing the Docker file.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Docker build options.",
                  "Type": "aws-cdk-lib.aws_lambda.DockerBuildAssetOptions"
                }
              },
              "Summary": "Loads the function code from an asset created by a Docker build.",
              "Remarks": "By default, the asset is expected to be located at `/asset` in the\nimage.",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.AssetImageCode.fromEcrImage": {
              "Parameters": {
                "repository": {
                  "Summary": "the ECR repository that the image is in.",
                  "Type": "aws-cdk-lib.aws_ecr.IRepository"
                },
                "props": {
                  "Summary": "properties to further configure the selected image.",
                  "Type": "aws-cdk-lib.aws_lambda.EcrImageCodeProps"
                }
              },
              "Summary": "Use an existing ECR image as the Lambda code.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.EcrImageCode"
            },
            "aws-cdk-lib.aws_lambda.AssetImageCode.fromInline": {
              "Parameters": {
                "code": {
                  "Summary": "The actual handler code (the resulting zip file cannot exceed 4MB).",
                  "Type": "String"
                }
              },
              "Summary": "Inline code for Lambda handler.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.InlineCode"
            },
            "bind": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                }
              },
              "Summary": "Called when the lambda or layer is initialized to allow this object to bind to the stack, add resources and have fun.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.CodeConfig"
            },
            "bindToResource": {
              "Parameters": {
                "resource": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.CfnResource"
                },
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.ResourceBindOptions"
                }
              },
              "Summary": "Called after the CFN function resource has been created to allow the code class to bind to it.",
              "Remarks": "Specifically it's required to allow assets to add\nmetadata for tooling like SAM CLI to be able to find their origins.",
              "Static": false
            }
          },
          "PublicProperties": {
            "isInline": {
              "Remarks": "",
              "Summary": "Determines whether this Code is inline code or not.",
              "Required": true,
              "Type": "Boolean"
            }
          }
        },
        "CfnParametersCode": {
          "Properties": {},
          "Methods": {
            "aws-cdk-lib.aws_lambda.CfnParametersCode.fromAsset": {
              "Parameters": {
                "path": {
                  "Summary": "Either a directory with the Lambda code bundle or a .zip file.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_s3_assets.AssetOptions"
                }
              },
              "Summary": "Loads the function code from a local disk path.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.CfnParametersCode.fromAssetImage": {
              "Parameters": {
                "directory": {
                  "Summary": "the directory from which the asset must be created.",
                  "Type": "String"
                },
                "props": {
                  "Summary": "properties to further configure the selected image.",
                  "Type": "aws-cdk-lib.aws_lambda.AssetImageCodeProps"
                }
              },
              "Summary": "Create an ECR image from the specified asset and bind it as the Lambda code.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetImageCode"
            },
            "aws-cdk-lib.aws_lambda.CfnParametersCode.fromBucket": {
              "Parameters": {
                "bucket": {
                  "Summary": "The S3 bucket.",
                  "Type": "aws-cdk-lib.aws_s3.IBucket"
                },
                "key": {
                  "Summary": "The object key.",
                  "Type": "String"
                },
                "objectVersion": {
                  "Summary": "Optional S3 object version.",
                  "Type": "String"
                }
              },
              "Summary": "Lambda handler code as an S3 object.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.S3Code"
            },
            "aws-cdk-lib.aws_lambda.CfnParametersCode.fromBucketV2": {
              "Parameters": {
                "bucket": {
                  "Summary": "The S3 bucket.",
                  "Type": "aws-cdk-lib.aws_s3.IBucket"
                },
                "key": {
                  "Summary": "The object key.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Optional parameters for setting the code, current optional parameters to set here are 1.",
                  "Type": "aws-cdk-lib.aws_lambda.BucketOptions"
                }
              },
              "Summary": "Lambda handler code as an S3 object.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.S3CodeV2"
            },
            "aws-cdk-lib.aws_lambda.CfnParametersCode.fromCfnParameters": {
              "Parameters": {
                "props": {
                  "Summary": "optional construction properties of `CfnParametersCode`.",
                  "Type": "aws-cdk-lib.aws_lambda.CfnParametersCodeProps"
                }
              },
              "Summary": "Creates a new Lambda source defined using CloudFormation parameters.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.CfnParametersCode"
            },
            "aws-cdk-lib.aws_lambda.CfnParametersCode.fromCustomCommand": {
              "Parameters": {
                "output": {
                  "Summary": "Where the output of the command will be directed, either a directory or a .zip file with the output Lambda code bundle * For example, if you use the command to run a build script (e.g., [ 'node', 'bundle_code.js' ]), and the build script generates a directory `/my/lambda/code` containing code that should be ran in a Lambda function, then output should be set to `/my/lambda/code`.",
                  "Type": "String"
                },
                "command": {
                  "Summary": "The command which will be executed to generate the output, for example, [ 'node', 'bundle_code.js' ].",
                  "Type": "List"
                },
                "options": {
                  "Summary": "options for the custom command, and other asset options -- but bundling options are not allowed.",
                  "Type": "aws-cdk-lib.aws_lambda.CustomCommandOptions"
                }
              },
              "Summary": "Runs a command to build the code asset that will be used.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.CfnParametersCode.fromDockerBuild": {
              "Parameters": {
                "path": {
                  "Summary": "The path to the directory containing the Docker file.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Docker build options.",
                  "Type": "aws-cdk-lib.aws_lambda.DockerBuildAssetOptions"
                }
              },
              "Summary": "Loads the function code from an asset created by a Docker build.",
              "Remarks": "By default, the asset is expected to be located at `/asset` in the\nimage.",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.CfnParametersCode.fromEcrImage": {
              "Parameters": {
                "repository": {
                  "Summary": "the ECR repository that the image is in.",
                  "Type": "aws-cdk-lib.aws_ecr.IRepository"
                },
                "props": {
                  "Summary": "properties to further configure the selected image.",
                  "Type": "aws-cdk-lib.aws_lambda.EcrImageCodeProps"
                }
              },
              "Summary": "Use an existing ECR image as the Lambda code.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.EcrImageCode"
            },
            "aws-cdk-lib.aws_lambda.CfnParametersCode.fromInline": {
              "Parameters": {
                "code": {
                  "Summary": "The actual handler code (the resulting zip file cannot exceed 4MB).",
                  "Type": "String"
                }
              },
              "Summary": "Inline code for Lambda handler.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.InlineCode"
            },
            "bind": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                }
              },
              "Summary": "Called when the lambda or layer is initialized to allow this object to bind to the stack, add resources and have fun.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.CodeConfig"
            },
            "bindToResource": {
              "Parameters": {
                "_resource": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.CfnResource"
                },
                "_options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.ResourceBindOptions"
                }
              },
              "Summary": "Called after the CFN function resource has been created to allow the code class to bind to it.",
              "Remarks": "Specifically it's required to allow assets to add\nmetadata for tooling like SAM CLI to be able to find their origins.",
              "Static": false
            },
            "assign": {
              "Parameters": {
                "location": {
                  "Summary": "the location of the object in S3 that represents the Lambda code.",
                  "Type": "aws-cdk-lib.aws_s3.Location"
                }
              },
              "Summary": "Create a parameters map from this instance's CloudFormation parameters.",
              "Remarks": "It returns a map with 2 keys that correspond to the names of the parameters defined in this Lambda code,\nand as values it contains the appropriate expressions pointing at the provided S3 location\n(most likely, obtained from a CodePipeline Artifact by calling the `artifact.s3Location` method).\nThe result should be provided to the CloudFormation Action\nthat is deploying the Stack that the Lambda with this code is part of,\nin the `parameterOverrides` property.",
              "Static": false,
              "ReturnType": "Map"
            }
          },
          "PublicProperties": {
            "bucketNameParam": {
              "Remarks": "",
              "Summary": "",
              "Required": true,
              "Type": "String"
            },
            "isInline": {
              "Remarks": "",
              "Summary": "Determines whether this Code is inline code or not.",
              "Required": true,
              "Type": "Boolean"
            },
            "objectKeyParam": {
              "Remarks": "",
              "Summary": "",
              "Required": true,
              "Type": "String"
            }
          }
        },
        "Code": {
          "Properties": {},
          "Methods": {
            "aws-cdk-lib.aws_lambda.Code.fromAsset": {
              "Parameters": {
                "path": {
                  "Summary": "Either a directory with the Lambda code bundle or a .zip file.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_s3_assets.AssetOptions"
                }
              },
              "Summary": "Loads the function code from a local disk path.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.Code.fromAssetImage": {
              "Parameters": {
                "directory": {
                  "Summary": "the directory from which the asset must be created.",
                  "Type": "String"
                },
                "props": {
                  "Summary": "properties to further configure the selected image.",
                  "Type": "aws-cdk-lib.aws_lambda.AssetImageCodeProps"
                }
              },
              "Summary": "Create an ECR image from the specified asset and bind it as the Lambda code.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetImageCode"
            },
            "aws-cdk-lib.aws_lambda.Code.fromBucket": {
              "Parameters": {
                "bucket": {
                  "Summary": "The S3 bucket.",
                  "Type": "aws-cdk-lib.aws_s3.IBucket"
                },
                "key": {
                  "Summary": "The object key.",
                  "Type": "String"
                },
                "objectVersion": {
                  "Summary": "Optional S3 object version.",
                  "Type": "String"
                }
              },
              "Summary": "Lambda handler code as an S3 object.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.S3Code"
            },
            "aws-cdk-lib.aws_lambda.Code.fromBucketV2": {
              "Parameters": {
                "bucket": {
                  "Summary": "The S3 bucket.",
                  "Type": "aws-cdk-lib.aws_s3.IBucket"
                },
                "key": {
                  "Summary": "The object key.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Optional parameters for setting the code, current optional parameters to set here are 1.",
                  "Type": "aws-cdk-lib.aws_lambda.BucketOptions"
                }
              },
              "Summary": "Lambda handler code as an S3 object.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.S3CodeV2"
            },
            "aws-cdk-lib.aws_lambda.Code.fromCfnParameters": {
              "Parameters": {
                "props": {
                  "Summary": "optional construction properties of `CfnParametersCode`.",
                  "Type": "aws-cdk-lib.aws_lambda.CfnParametersCodeProps"
                }
              },
              "Summary": "Creates a new Lambda source defined using CloudFormation parameters.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.CfnParametersCode"
            },
            "aws-cdk-lib.aws_lambda.Code.fromCustomCommand": {
              "Parameters": {
                "output": {
                  "Summary": "Where the output of the command will be directed, either a directory or a .zip file with the output Lambda code bundle * For example, if you use the command to run a build script (e.g., [ 'node', 'bundle_code.js' ]), and the build script generates a directory `/my/lambda/code` containing code that should be ran in a Lambda function, then output should be set to `/my/lambda/code`.",
                  "Type": "String"
                },
                "command": {
                  "Summary": "The command which will be executed to generate the output, for example, [ 'node', 'bundle_code.js' ].",
                  "Type": "List"
                },
                "options": {
                  "Summary": "options for the custom command, and other asset options -- but bundling options are not allowed.",
                  "Type": "aws-cdk-lib.aws_lambda.CustomCommandOptions"
                }
              },
              "Summary": "Runs a command to build the code asset that will be used.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.Code.fromDockerBuild": {
              "Parameters": {
                "path": {
                  "Summary": "The path to the directory containing the Docker file.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Docker build options.",
                  "Type": "aws-cdk-lib.aws_lambda.DockerBuildAssetOptions"
                }
              },
              "Summary": "Loads the function code from an asset created by a Docker build.",
              "Remarks": "By default, the asset is expected to be located at `/asset` in the\nimage.",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.Code.fromEcrImage": {
              "Parameters": {
                "repository": {
                  "Summary": "the ECR repository that the image is in.",
                  "Type": "aws-cdk-lib.aws_ecr.IRepository"
                },
                "props": {
                  "Summary": "properties to further configure the selected image.",
                  "Type": "aws-cdk-lib.aws_lambda.EcrImageCodeProps"
                }
              },
              "Summary": "Use an existing ECR image as the Lambda code.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.EcrImageCode"
            },
            "aws-cdk-lib.aws_lambda.Code.fromInline": {
              "Parameters": {
                "code": {
                  "Summary": "The actual handler code (the resulting zip file cannot exceed 4MB).",
                  "Type": "String"
                }
              },
              "Summary": "Inline code for Lambda handler.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.InlineCode"
            },
            "bind": {
              "Parameters": {
                "scope": {
                  "Summary": "The binding scope.",
                  "Type": "constructs.Construct"
                }
              },
              "Summary": "Called when the lambda or layer is initialized to allow this object to bind to the stack, add resources and have fun.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.CodeConfig"
            },
            "bindToResource": {
              "Parameters": {
                "_resource": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.CfnResource"
                },
                "_options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.ResourceBindOptions"
                }
              },
              "Summary": "Called after the CFN function resource has been created to allow the code class to bind to it.",
              "Remarks": "Specifically it's required to allow assets to add\nmetadata for tooling like SAM CLI to be able to find their origins.",
              "Static": false
            }
          },
          "PublicProperties": {}
        },
        "DockerImageCode": {
          "Properties": {},
          "Methods": {
            "aws-cdk-lib.aws_lambda.DockerImageCode.fromEcr": {
              "Parameters": {
                "repository": {
                  "Summary": "the ECR repository that the image is in.",
                  "Type": "aws-cdk-lib.aws_ecr.IRepository"
                },
                "props": {
                  "Summary": "properties to further configure the selected image.",
                  "Type": "aws-cdk-lib.aws_lambda.EcrImageCodeProps"
                }
              },
              "Summary": "Use an existing ECR image as the Lambda code.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.DockerImageCode"
            },
            "aws-cdk-lib.aws_lambda.DockerImageCode.fromImageAsset": {
              "Parameters": {
                "directory": {
                  "Summary": "the directory from which the asset must be created.",
                  "Type": "String"
                },
                "props": {
                  "Summary": "properties to further configure the selected image.",
                  "Type": "aws-cdk-lib.aws_lambda.AssetImageCodeProps"
                }
              },
              "Summary": "Create an ECR image from the specified asset and bind it as the Lambda code.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.DockerImageCode"
            }
          },
          "PublicProperties": {}
        },
        "EcrImageCode": {
          "Properties": {},
          "Methods": {
            "aws-cdk-lib.aws_lambda.EcrImageCode.fromAsset": {
              "Parameters": {
                "path": {
                  "Summary": "Either a directory with the Lambda code bundle or a .zip file.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_s3_assets.AssetOptions"
                }
              },
              "Summary": "Loads the function code from a local disk path.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.EcrImageCode.fromAssetImage": {
              "Parameters": {
                "directory": {
                  "Summary": "the directory from which the asset must be created.",
                  "Type": "String"
                },
                "props": {
                  "Summary": "properties to further configure the selected image.",
                  "Type": "aws-cdk-lib.aws_lambda.AssetImageCodeProps"
                }
              },
              "Summary": "Create an ECR image from the specified asset and bind it as the Lambda code.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetImageCode"
            },
            "aws-cdk-lib.aws_lambda.EcrImageCode.fromBucket": {
              "Parameters": {
                "bucket": {
                  "Summary": "The S3 bucket.",
                  "Type": "aws-cdk-lib.aws_s3.IBucket"
                },
                "key": {
                  "Summary": "The object key.",
                  "Type": "String"
                },
                "objectVersion": {
                  "Summary": "Optional S3 object version.",
                  "Type": "String"
                }
              },
              "Summary": "Lambda handler code as an S3 object.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.S3Code"
            },
            "aws-cdk-lib.aws_lambda.EcrImageCode.fromBucketV2": {
              "Parameters": {
                "bucket": {
                  "Summary": "The S3 bucket.",
                  "Type": "aws-cdk-lib.aws_s3.IBucket"
                },
                "key": {
                  "Summary": "The object key.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Optional parameters for setting the code, current optional parameters to set here are 1.",
                  "Type": "aws-cdk-lib.aws_lambda.BucketOptions"
                }
              },
              "Summary": "Lambda handler code as an S3 object.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.S3CodeV2"
            },
            "aws-cdk-lib.aws_lambda.EcrImageCode.fromCfnParameters": {
              "Parameters": {
                "props": {
                  "Summary": "optional construction properties of `CfnParametersCode`.",
                  "Type": "aws-cdk-lib.aws_lambda.CfnParametersCodeProps"
                }
              },
              "Summary": "Creates a new Lambda source defined using CloudFormation parameters.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.CfnParametersCode"
            },
            "aws-cdk-lib.aws_lambda.EcrImageCode.fromCustomCommand": {
              "Parameters": {
                "output": {
                  "Summary": "Where the output of the command will be directed, either a directory or a .zip file with the output Lambda code bundle * For example, if you use the command to run a build script (e.g., [ 'node', 'bundle_code.js' ]), and the build script generates a directory `/my/lambda/code` containing code that should be ran in a Lambda function, then output should be set to `/my/lambda/code`.",
                  "Type": "String"
                },
                "command": {
                  "Summary": "The command which will be executed to generate the output, for example, [ 'node', 'bundle_code.js' ].",
                  "Type": "List"
                },
                "options": {
                  "Summary": "options for the custom command, and other asset options -- but bundling options are not allowed.",
                  "Type": "aws-cdk-lib.aws_lambda.CustomCommandOptions"
                }
              },
              "Summary": "Runs a command to build the code asset that will be used.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.EcrImageCode.fromDockerBuild": {
              "Parameters": {
                "path": {
                  "Summary": "The path to the directory containing the Docker file.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Docker build options.",
                  "Type": "aws-cdk-lib.aws_lambda.DockerBuildAssetOptions"
                }
              },
              "Summary": "Loads the function code from an asset created by a Docker build.",
              "Remarks": "By default, the asset is expected to be located at `/asset` in the\nimage.",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.EcrImageCode.fromEcrImage": {
              "Parameters": {
                "repository": {
                  "Summary": "the ECR repository that the image is in.",
                  "Type": "aws-cdk-lib.aws_ecr.IRepository"
                },
                "props": {
                  "Summary": "properties to further configure the selected image.",
                  "Type": "aws-cdk-lib.aws_lambda.EcrImageCodeProps"
                }
              },
              "Summary": "Use an existing ECR image as the Lambda code.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.EcrImageCode"
            },
            "aws-cdk-lib.aws_lambda.EcrImageCode.fromInline": {
              "Parameters": {
                "code": {
                  "Summary": "The actual handler code (the resulting zip file cannot exceed 4MB).",
                  "Type": "String"
                }
              },
              "Summary": "Inline code for Lambda handler.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.InlineCode"
            },
            "bind": {
              "Parameters": {
                "_scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                }
              },
              "Summary": "Called when the lambda or layer is initialized to allow this object to bind to the stack, add resources and have fun.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.CodeConfig"
            },
            "bindToResource": {
              "Parameters": {
                "_resource": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.CfnResource"
                },
                "_options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.ResourceBindOptions"
                }
              },
              "Summary": "Called after the CFN function resource has been created to allow the code class to bind to it.",
              "Remarks": "Specifically it's required to allow assets to add\nmetadata for tooling like SAM CLI to be able to find their origins.",
              "Static": false
            }
          },
          "PublicProperties": {
            "isInline": {
              "Remarks": "",
              "Summary": "Determines whether this Code is inline code or not.",
              "Required": true,
              "Type": "Boolean"
            }
          }
        },
        "FileSystem": {
          "Properties": {},
          "Methods": {
            "aws-cdk-lib.aws_lambda.FileSystem.fromEfsAccessPoint": {
              "Parameters": {
                "ap": {
                  "Summary": "the Amazon EFS access point.",
                  "Type": "aws-cdk-lib.aws_efs.IAccessPoint"
                },
                "mountPath": {
                  "Summary": "the target path in the lambda runtime environment.",
                  "Type": "String"
                }
              },
              "Summary": "mount the filesystem from Amazon EFS.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.FileSystem"
            }
          },
          "PublicProperties": {
            "config": {
              "Remarks": "",
              "Summary": "the FileSystem configurations for the Lambda function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.FileSystemConfig"
            }
          }
        },
        "FilterCriteria": {
          "Properties": {},
          "Methods": {
            "aws-cdk-lib.aws_lambda.FilterCriteria.filter": {
              "Parameters": {
                "filter": {
                  "Summary": "",
                  "Type": "Map"
                }
              },
              "Summary": "Filter for event source.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Map"
            }
          },
          "PublicProperties": {}
        },
        "FilterRule": {
          "Properties": {},
          "Methods": {
            "aws-cdk-lib.aws_lambda.FilterRule.beginsWith": {
              "Parameters": {
                "elem": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "Begins with comparison operator.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "List"
            },
            "aws-cdk-lib.aws_lambda.FilterRule.between": {
              "Parameters": {
                "first": {
                  "Summary": "",
                  "Type": "Number"
                },
                "second": {
                  "Summary": "",
                  "Type": "Number"
                }
              },
              "Summary": "Numeric range comparison operator.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "List"
            },
            "aws-cdk-lib.aws_lambda.FilterRule.empty": {
              "Parameters": {},
              "Summary": "Empty comparison operator.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "List"
            },
            "aws-cdk-lib.aws_lambda.FilterRule.exists": {
              "Parameters": {},
              "Summary": "Exists comparison operator.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "List"
            },
            "aws-cdk-lib.aws_lambda.FilterRule.isEqual": {
              "Parameters": {
                "item": {
                  "Summary": "",
                  "Type": ""
                }
              },
              "Summary": "Equals comparison operator.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Any"
            },
            "aws-cdk-lib.aws_lambda.FilterRule.notEquals": {
              "Parameters": {
                "elem": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "Not equals comparison operator.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "List"
            },
            "aws-cdk-lib.aws_lambda.FilterRule.notExists": {
              "Parameters": {},
              "Summary": "Not exists comparison operator.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "List"
            },
            "aws-cdk-lib.aws_lambda.FilterRule.null": {
              "Parameters": {},
              "Summary": "Null comparison operator.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Any"
            },
            "aws-cdk-lib.aws_lambda.FilterRule.or": {
              "Parameters": {
                "elem": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "Or comparison operator.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "List"
            }
          },
          "PublicProperties": {}
        },
        "FunctionBase": {
          "Properties": {},
          "Methods": {
            "aws-cdk-lib.aws_lambda.FunctionBase.isConstruct": {
              "Parameters": {
                "x": {
                  "Summary": "Any object.",
                  "Type": "Any"
                }
              },
              "Summary": "Checks if `x` is a construct.",
              "Remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead.",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "toString": {
              "Parameters": {},
              "Summary": "Returns a string representation of this construct.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "aws-cdk-lib.aws_lambda.FunctionBase.isOwnedResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Returns true if the construct was created by CDK, and false otherwise.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "aws-cdk-lib.aws_lambda.FunctionBase.isResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Check whether the given construct is a Resource.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "applyRemovalPolicy": {
              "Parameters": {
                "policy": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.RemovalPolicy"
                }
              },
              "Summary": "Apply the given removal policy to this resource.",
              "Remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
              "Static": false
            },
            "generatePhysicalName": {
              "Parameters": {},
              "Summary": "",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceArnAttribute": {
              "Parameters": {
                "arnAttr": {
                  "Summary": "The CFN attribute which resolves to the ARN of the resource.",
                  "Type": "String"
                },
                "arnComponents": {
                  "Summary": "The format of the ARN of this resource.",
                  "Type": "aws-cdk-lib.ArnComponents"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"ARN\" attribute (e.g. `bucket.bucketArn`).",
              "Remarks": "Normally, this token will resolve to `arnAttr`, but if the resource is\nreferenced across environments, `arnComponents` will be used to synthesize\na concrete ARN with the resource's physical name. Make sure to reference\n`this.physicalName` in `arnComponents`.",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceNameAttribute": {
              "Parameters": {
                "nameAttr": {
                  "Summary": "The CFN attribute which resolves to the resource's name.",
                  "Type": "String"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"name\" attribute (e.g. `bucket.bucketName`).",
              "Remarks": "Normally, this token will resolve to `nameAttr`, but if the resource is\nreferenced across environments, it will be resolved to `this.physicalName`,\nwhich will be a concrete name.",
              "Static": false,
              "ReturnType": "String"
            },
            "addEventSource": {
              "Parameters": {
                "source": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IEventSource"
                }
              },
              "Summary": "Adds an event source to this function.",
              "Remarks": "Event sources are implemented in the aws-cdk-lib/aws-lambda-event-sources module.\n\nThe following example adds an SQS Queue as an event source:\n```\nimport { SqsEventSource } from 'aws-cdk-lib/aws-lambda-event-sources';\nmyFunction.addEventSource(new SqsEventSource(myQueue));\n```",
              "Static": false
            },
            "addEventSourceMapping": {
              "Parameters": {
                "id": {
                  "Summary": "",
                  "Type": "String"
                },
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.EventSourceMappingOptions"
                }
              },
              "Summary": "Adds an event source that maps to this AWS Lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.EventSourceMapping"
            },
            "addFunctionUrl": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.FunctionUrlOptions"
                }
              },
              "Summary": "Adds a url to this lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.FunctionUrl"
            },
            "addPermission": {
              "Parameters": {
                "id": {
                  "Summary": "The id for the permission construct.",
                  "Type": "String"
                },
                "permission": {
                  "Summary": "The permission to grant to this Lambda function.",
                  "Type": "aws-cdk-lib.aws_lambda.Permission"
                }
              },
              "Summary": "Adds a permission to the Lambda resource policy.",
              "Remarks": "",
              "Static": false
            },
            "addToRolePolicy": {
              "Parameters": {
                "statement": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.PolicyStatement"
                }
              },
              "Summary": "Adds a statement to the IAM role assumed by the instance.",
              "Remarks": "",
              "Static": false
            },
            "configureAsyncInvoke": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.EventInvokeConfigOptions"
                }
              },
              "Summary": "Configures options for asynchronous invocation.",
              "Remarks": "",
              "Static": false
            },
            "considerWarningOnInvokeFunctionPermissions": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                },
                "action": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "A warning will be added to functions under the following conditions: - permissions that include `lambda:InvokeFunction` are added to the unqualified function.",
              "Remarks": "- function.currentVersion is invoked before or after the permission is created.\n\nThis applies only to permissions on Lambda functions, not versions or aliases.\nThis function is overridden as a noOp for QualifiedFunctionBase.",
              "Static": false
            },
            "grantInvoke": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeCompositePrincipal": {
              "Parameters": {
                "compositePrincipal": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.CompositePrincipal"
                }
              },
              "Summary": "Grant multiple principals the ability to invoke this Lambda via CompositePrincipal.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "List"
            },
            "grantInvokeLatestVersion": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke the $LATEST version or unqualified version of this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeUrl": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda Function URL.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeVersion": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                },
                "version": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IVersion"
                }
              },
              "Summary": "Grant the given identity permissions to invoke the given version of this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "metric": {
              "Parameters": {
                "metricName": {
                  "Summary": "",
                  "Type": "String"
                },
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Return the given named metric for this Function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricDuration": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How long execution of this Lambda takes.",
              "Remarks": "Average over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricErrors": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How many invocations of this Lambda fail.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricInvocations": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How often this Lambda is invoked.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricThrottles": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How often this Lambda is throttled.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "warnInvokeFunctionPermissions": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                }
              },
              "Summary": "",
              "Remarks": "",
              "Static": false
            }
          },
          "PublicProperties": {
            "node": {
              "Remarks": "",
              "Summary": "The tree node.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "env": {
              "Remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
              "Summary": "The environment this resource belongs to.",
              "Required": true,
              "Type": "aws-cdk-lib.ResourceEnvironment"
            },
            "stack": {
              "Remarks": "",
              "Summary": "The stack in which this resource is defined.",
              "Required": true,
              "Type": "aws-cdk-lib.Stack"
            },
            "architecture": {
              "Remarks": "",
              "Summary": "The architecture of this Lambda Function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Architecture"
            },
            "connections": {
              "Remarks": "Will fail if not a VPC-enabled Lambda Function",
              "Summary": "Access the Connections object.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_ec2.Connections"
            },
            "functionArn": {
              "Remarks": "",
              "Summary": "The ARN fo the function.",
              "Required": true,
              "Type": "String"
            },
            "functionName": {
              "Remarks": "",
              "Summary": "The name of the function.",
              "Required": true,
              "Type": "String"
            },
            "grantPrincipal": {
              "Remarks": "",
              "Summary": "The principal this Lambda Function is running as.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_iam.IPrincipal"
            },
            "isBoundToVpc": {
              "Remarks": "If this is is `false`, trying to access the `connections` object will fail.",
              "Summary": "Whether or not this Lambda function was bound to a VPC.",
              "Required": true,
              "Type": "Boolean"
            },
            "latestVersion": {
              "Remarks": "Note that this is reference to a non-specific AWS Lambda version, which\nmeans the function this version refers to can return different results in\ndifferent invocations.\n\nTo obtain a reference to an explicit version which references the current\nfunction configuration, use `lambdaFunction.currentVersion` instead.",
              "Summary": "The `$LATEST` version of this function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IVersion"
            },
            "permissionsNode": {
              "Remarks": "",
              "Summary": "The construct node where permissions are attached.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "resourceArnsForGrantInvoke": {
              "Remarks": "",
              "Summary": "The ARN(s) to put into the resource field of the generated IAM policy for grantInvoke().",
              "Required": true,
              "Type": "List",
              "ItemType": "String"
            },
            "role": {
              "Remarks": "Undefined if the function was imported without a role.",
              "Summary": "The IAM role associated with this function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_iam.IRole"
            }
          }
        },
        "FunctionVersionUpgrade": {
          "Properties": {},
          "Methods": {
            "visit": {
              "Parameters": {
                "node": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "All aspects can visit an IConstruct.",
              "Remarks": "",
              "Static": false
            }
          },
          "PublicProperties": {}
        },
        "Handler": {
          "Properties": {},
          "Methods": {},
          "PublicProperties": {
            "FROM_IMAGE": {
              "Remarks": "",
              "Summary": "A special handler when the function handler is part of a Docker image.",
              "Required": true,
              "Type": "String",
              "Static": true
            }
          }
        },
        "InlineCode": {
          "Properties": {},
          "Methods": {
            "aws-cdk-lib.aws_lambda.InlineCode.fromAsset": {
              "Parameters": {
                "path": {
                  "Summary": "Either a directory with the Lambda code bundle or a .zip file.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_s3_assets.AssetOptions"
                }
              },
              "Summary": "Loads the function code from a local disk path.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.InlineCode.fromAssetImage": {
              "Parameters": {
                "directory": {
                  "Summary": "the directory from which the asset must be created.",
                  "Type": "String"
                },
                "props": {
                  "Summary": "properties to further configure the selected image.",
                  "Type": "aws-cdk-lib.aws_lambda.AssetImageCodeProps"
                }
              },
              "Summary": "Create an ECR image from the specified asset and bind it as the Lambda code.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetImageCode"
            },
            "aws-cdk-lib.aws_lambda.InlineCode.fromBucket": {
              "Parameters": {
                "bucket": {
                  "Summary": "The S3 bucket.",
                  "Type": "aws-cdk-lib.aws_s3.IBucket"
                },
                "key": {
                  "Summary": "The object key.",
                  "Type": "String"
                },
                "objectVersion": {
                  "Summary": "Optional S3 object version.",
                  "Type": "String"
                }
              },
              "Summary": "Lambda handler code as an S3 object.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.S3Code"
            },
            "aws-cdk-lib.aws_lambda.InlineCode.fromBucketV2": {
              "Parameters": {
                "bucket": {
                  "Summary": "The S3 bucket.",
                  "Type": "aws-cdk-lib.aws_s3.IBucket"
                },
                "key": {
                  "Summary": "The object key.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Optional parameters for setting the code, current optional parameters to set here are 1.",
                  "Type": "aws-cdk-lib.aws_lambda.BucketOptions"
                }
              },
              "Summary": "Lambda handler code as an S3 object.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.S3CodeV2"
            },
            "aws-cdk-lib.aws_lambda.InlineCode.fromCfnParameters": {
              "Parameters": {
                "props": {
                  "Summary": "optional construction properties of `CfnParametersCode`.",
                  "Type": "aws-cdk-lib.aws_lambda.CfnParametersCodeProps"
                }
              },
              "Summary": "Creates a new Lambda source defined using CloudFormation parameters.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.CfnParametersCode"
            },
            "aws-cdk-lib.aws_lambda.InlineCode.fromCustomCommand": {
              "Parameters": {
                "output": {
                  "Summary": "Where the output of the command will be directed, either a directory or a .zip file with the output Lambda code bundle * For example, if you use the command to run a build script (e.g., [ 'node', 'bundle_code.js' ]), and the build script generates a directory `/my/lambda/code` containing code that should be ran in a Lambda function, then output should be set to `/my/lambda/code`.",
                  "Type": "String"
                },
                "command": {
                  "Summary": "The command which will be executed to generate the output, for example, [ 'node', 'bundle_code.js' ].",
                  "Type": "List"
                },
                "options": {
                  "Summary": "options for the custom command, and other asset options -- but bundling options are not allowed.",
                  "Type": "aws-cdk-lib.aws_lambda.CustomCommandOptions"
                }
              },
              "Summary": "Runs a command to build the code asset that will be used.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.InlineCode.fromDockerBuild": {
              "Parameters": {
                "path": {
                  "Summary": "The path to the directory containing the Docker file.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Docker build options.",
                  "Type": "aws-cdk-lib.aws_lambda.DockerBuildAssetOptions"
                }
              },
              "Summary": "Loads the function code from an asset created by a Docker build.",
              "Remarks": "By default, the asset is expected to be located at `/asset` in the\nimage.",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.InlineCode.fromEcrImage": {
              "Parameters": {
                "repository": {
                  "Summary": "the ECR repository that the image is in.",
                  "Type": "aws-cdk-lib.aws_ecr.IRepository"
                },
                "props": {
                  "Summary": "properties to further configure the selected image.",
                  "Type": "aws-cdk-lib.aws_lambda.EcrImageCodeProps"
                }
              },
              "Summary": "Use an existing ECR image as the Lambda code.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.EcrImageCode"
            },
            "aws-cdk-lib.aws_lambda.InlineCode.fromInline": {
              "Parameters": {
                "code": {
                  "Summary": "The actual handler code (the resulting zip file cannot exceed 4MB).",
                  "Type": "String"
                }
              },
              "Summary": "Inline code for Lambda handler.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.InlineCode"
            },
            "bind": {
              "Parameters": {
                "_scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                }
              },
              "Summary": "Called when the lambda or layer is initialized to allow this object to bind to the stack, add resources and have fun.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.CodeConfig"
            },
            "bindToResource": {
              "Parameters": {
                "_resource": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.CfnResource"
                },
                "_options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.ResourceBindOptions"
                }
              },
              "Summary": "Called after the CFN function resource has been created to allow the code class to bind to it.",
              "Remarks": "Specifically it's required to allow assets to add\nmetadata for tooling like SAM CLI to be able to find their origins.",
              "Static": false
            }
          },
          "PublicProperties": {
            "isInline": {
              "Remarks": "",
              "Summary": "Determines whether this Code is inline code or not.",
              "Required": true,
              "Type": "Boolean"
            }
          }
        },
        "LambdaInsightsVersion": {
          "Properties": {},
          "Methods": {
            "aws-cdk-lib.aws_lambda.LambdaInsightsVersion.fromInsightVersionArn": {
              "Parameters": {
                "arn": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "Use the insights extension associated with the provided ARN.",
              "Remarks": "Make sure the ARN is associated\nwith same region as your function",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.LambdaInsightsVersion"
            }
          },
          "PublicProperties": {
            "VERSION_1_0_119_0": {
              "Remarks": "",
              "Summary": "Version 1.0.119.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.LambdaInsightsVersion",
              "Static": true
            },
            "VERSION_1_0_135_0": {
              "Remarks": "",
              "Summary": "Version 1.0.135.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.LambdaInsightsVersion",
              "Static": true
            },
            "VERSION_1_0_143_0": {
              "Remarks": "",
              "Summary": "Version 1.0.143.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.LambdaInsightsVersion",
              "Static": true
            },
            "VERSION_1_0_178_0": {
              "Remarks": "",
              "Summary": "Version 1.0.178.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.LambdaInsightsVersion",
              "Static": true
            },
            "VERSION_1_0_229_0": {
              "Remarks": "",
              "Summary": "Version 1.0.229.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.LambdaInsightsVersion",
              "Static": true
            },
            "VERSION_1_0_273_0": {
              "Remarks": "",
              "Summary": "Version 1.0.273.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.LambdaInsightsVersion",
              "Static": true
            },
            "VERSION_1_0_275_0": {
              "Remarks": "",
              "Summary": "Version 1.0.275.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.LambdaInsightsVersion",
              "Static": true
            },
            "VERSION_1_0_295_0": {
              "Remarks": "",
              "Summary": "Version 1.0.295.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.LambdaInsightsVersion",
              "Static": true
            },
            "VERSION_1_0_317_0": {
              "Remarks": "",
              "Summary": "Version 1.0.317.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.LambdaInsightsVersion",
              "Static": true
            },
            "VERSION_1_0_333_0": {
              "Remarks": "",
              "Summary": "Version 1.0.333.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.LambdaInsightsVersion",
              "Static": true
            },
            "VERSION_1_0_54_0": {
              "Remarks": "",
              "Summary": "Version 1.0.54.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.LambdaInsightsVersion",
              "Static": true
            },
            "VERSION_1_0_86_0": {
              "Remarks": "",
              "Summary": "Version 1.0.86.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.LambdaInsightsVersion",
              "Static": true
            },
            "VERSION_1_0_89_0": {
              "Remarks": "",
              "Summary": "Version 1.0.89.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.LambdaInsightsVersion",
              "Static": true
            },
            "VERSION_1_0_98_0": {
              "Remarks": "",
              "Summary": "Version 1.0.98.0.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.LambdaInsightsVersion",
              "Static": true
            },
            "layerVersionArn": {
              "Remarks": "",
              "Summary": "The arn of the Lambda Insights extension.",
              "Required": true,
              "Type": "String"
            }
          }
        },
        "ParamsAndSecretsLayerVersion": {
          "Properties": {},
          "Methods": {
            "aws-cdk-lib.aws_lambda.ParamsAndSecretsLayerVersion.fromVersion": {
              "Parameters": {
                "version": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.ParamsAndSecretsVersions"
                },
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.ParamsAndSecretsOptions"
                }
              },
              "Summary": "Use a specific version of the Parameters and Secrets Extension to generate a layer version.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.ParamsAndSecretsLayerVersion"
            },
            "aws-cdk-lib.aws_lambda.ParamsAndSecretsLayerVersion.fromVersionArn": {
              "Parameters": {
                "arn": {
                  "Summary": "",
                  "Type": "String"
                },
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.ParamsAndSecretsOptions"
                }
              },
              "Summary": "Use the Parameters and Secrets Extension associated with the provided ARN.",
              "Remarks": "Make sure the ARN is associated\nwith the same region and architecture as your function.",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.ParamsAndSecretsLayerVersion"
            }
          },
          "PublicProperties": {}
        },
        "QualifiedFunctionBase": {
          "Properties": {},
          "Methods": {
            "aws-cdk-lib.aws_lambda.QualifiedFunctionBase.isConstruct": {
              "Parameters": {
                "x": {
                  "Summary": "Any object.",
                  "Type": "Any"
                }
              },
              "Summary": "Checks if `x` is a construct.",
              "Remarks": "Use this method instead of `instanceof` to properly detect `Construct`\ninstances, even when the construct library is symlinked.\n\nExplanation: in JavaScript, multiple copies of the `constructs` library on\ndisk are seen as independent, completely different libraries. As a\nconsequence, the class `Construct` in each copy of the `constructs` library\nis seen as a different class, and an instance of one class will not test as\n`instanceof` the other class. `npm install` will not create installations\nlike this, but users may manually symlink construct libraries together or\nuse a monorepo tool: in those cases, multiple copies of the `constructs`\nlibrary can be accidentally installed, and `instanceof` will behave\nunpredictably. It is safest to avoid using `instanceof`, and using\nthis type-testing method instead.",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "toString": {
              "Parameters": {},
              "Summary": "Returns a string representation of this construct.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "aws-cdk-lib.aws_lambda.QualifiedFunctionBase.isOwnedResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Returns true if the construct was created by CDK, and false otherwise.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "aws-cdk-lib.aws_lambda.QualifiedFunctionBase.isResource": {
              "Parameters": {
                "construct": {
                  "Summary": "",
                  "Type": "constructs.IConstruct"
                }
              },
              "Summary": "Check whether the given construct is a Resource.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "Boolean"
            },
            "applyRemovalPolicy": {
              "Parameters": {
                "policy": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.RemovalPolicy"
                }
              },
              "Summary": "Apply the given removal policy to this resource.",
              "Remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
              "Static": false
            },
            "generatePhysicalName": {
              "Parameters": {},
              "Summary": "",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceArnAttribute": {
              "Parameters": {
                "arnAttr": {
                  "Summary": "The CFN attribute which resolves to the ARN of the resource.",
                  "Type": "String"
                },
                "arnComponents": {
                  "Summary": "The format of the ARN of this resource.",
                  "Type": "aws-cdk-lib.ArnComponents"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"ARN\" attribute (e.g. `bucket.bucketArn`).",
              "Remarks": "Normally, this token will resolve to `arnAttr`, but if the resource is\nreferenced across environments, `arnComponents` will be used to synthesize\na concrete ARN with the resource's physical name. Make sure to reference\n`this.physicalName` in `arnComponents`.",
              "Static": false,
              "ReturnType": "String"
            },
            "getResourceNameAttribute": {
              "Parameters": {
                "nameAttr": {
                  "Summary": "The CFN attribute which resolves to the resource's name.",
                  "Type": "String"
                }
              },
              "Summary": "Returns an environment-sensitive token that should be used for the resource's \"name\" attribute (e.g. `bucket.bucketName`).",
              "Remarks": "Normally, this token will resolve to `nameAttr`, but if the resource is\nreferenced across environments, it will be resolved to `this.physicalName`,\nwhich will be a concrete name.",
              "Static": false,
              "ReturnType": "String"
            },
            "addEventSource": {
              "Parameters": {
                "source": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IEventSource"
                }
              },
              "Summary": "Adds an event source to this function.",
              "Remarks": "Event sources are implemented in the aws-cdk-lib/aws-lambda-event-sources module.\n\nThe following example adds an SQS Queue as an event source:\n```\nimport { SqsEventSource } from 'aws-cdk-lib/aws-lambda-event-sources';\nmyFunction.addEventSource(new SqsEventSource(myQueue));\n```",
              "Static": false
            },
            "addEventSourceMapping": {
              "Parameters": {
                "id": {
                  "Summary": "",
                  "Type": "String"
                },
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.EventSourceMappingOptions"
                }
              },
              "Summary": "Adds an event source that maps to this AWS Lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.EventSourceMapping"
            },
            "addFunctionUrl": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.FunctionUrlOptions"
                }
              },
              "Summary": "Adds a url to this lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.FunctionUrl"
            },
            "addPermission": {
              "Parameters": {
                "id": {
                  "Summary": "The id for the permission construct.",
                  "Type": "String"
                },
                "permission": {
                  "Summary": "The permission to grant to this Lambda function.",
                  "Type": "aws-cdk-lib.aws_lambda.Permission"
                }
              },
              "Summary": "Adds a permission to the Lambda resource policy.",
              "Remarks": "",
              "Static": false
            },
            "addToRolePolicy": {
              "Parameters": {
                "statement": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.PolicyStatement"
                }
              },
              "Summary": "Adds a statement to the IAM role assumed by the instance.",
              "Remarks": "",
              "Static": false
            },
            "configureAsyncInvoke": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.EventInvokeConfigOptions"
                }
              },
              "Summary": "Configures options for asynchronous invocation.",
              "Remarks": "",
              "Static": false
            },
            "considerWarningOnInvokeFunctionPermissions": {
              "Parameters": {
                "_scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                },
                "_action": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "A warning will be added to functions under the following conditions: - permissions that include `lambda:InvokeFunction` are added to the unqualified function.",
              "Remarks": "- function.currentVersion is invoked before or after the permission is created.\n\nThis applies only to permissions on Lambda functions, not versions or aliases.\nThis function is overridden as a noOp for QualifiedFunctionBase.",
              "Static": false
            },
            "grantInvoke": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeCompositePrincipal": {
              "Parameters": {
                "compositePrincipal": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.CompositePrincipal"
                }
              },
              "Summary": "Grant multiple principals the ability to invoke this Lambda via CompositePrincipal.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "List"
            },
            "grantInvokeLatestVersion": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke the $LATEST version or unqualified version of this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeUrl": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda Function URL.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeVersion": {
              "Parameters": {
                "grantee": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                },
                "version": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IVersion"
                }
              },
              "Summary": "Grant the given identity permissions to invoke the given version of this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "metric": {
              "Parameters": {
                "metricName": {
                  "Summary": "",
                  "Type": "String"
                },
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Return the given named metric for this Function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricDuration": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How long execution of this Lambda takes.",
              "Remarks": "Average over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricErrors": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How many invocations of this Lambda fail.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricInvocations": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How often this Lambda is invoked.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricThrottles": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How often this Lambda is throttled.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "warnInvokeFunctionPermissions": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                }
              },
              "Summary": "",
              "Remarks": "",
              "Static": false
            }
          },
          "PublicProperties": {
            "node": {
              "Remarks": "",
              "Summary": "The tree node.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "env": {
              "Remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
              "Summary": "The environment this resource belongs to.",
              "Required": true,
              "Type": "aws-cdk-lib.ResourceEnvironment"
            },
            "stack": {
              "Remarks": "",
              "Summary": "The stack in which this resource is defined.",
              "Required": true,
              "Type": "aws-cdk-lib.Stack"
            },
            "architecture": {
              "Remarks": "",
              "Summary": "The architecture of this Lambda Function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Architecture"
            },
            "connections": {
              "Remarks": "Will fail if not a VPC-enabled Lambda Function",
              "Summary": "Access the Connections object.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_ec2.Connections"
            },
            "functionArn": {
              "Remarks": "",
              "Summary": "The ARN fo the function.",
              "Required": true,
              "Type": "String"
            },
            "functionName": {
              "Remarks": "",
              "Summary": "The name of the function.",
              "Required": true,
              "Type": "String"
            },
            "grantPrincipal": {
              "Remarks": "",
              "Summary": "The principal this Lambda Function is running as.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_iam.IPrincipal"
            },
            "isBoundToVpc": {
              "Remarks": "If this is is `false`, trying to access the `connections` object will fail.",
              "Summary": "Whether or not this Lambda function was bound to a VPC.",
              "Required": true,
              "Type": "Boolean"
            },
            "latestVersion": {
              "Remarks": "Note that this is reference to a non-specific AWS Lambda version, which\nmeans the function this version refers to can return different results in\ndifferent invocations.\n\nTo obtain a reference to an explicit version which references the current\nfunction configuration, use `lambdaFunction.currentVersion` instead.",
              "Summary": "The `$LATEST` version of this function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IVersion"
            },
            "permissionsNode": {
              "Remarks": "",
              "Summary": "The construct node where permissions are attached.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "resourceArnsForGrantInvoke": {
              "Remarks": "",
              "Summary": "The ARN(s) to put into the resource field of the generated IAM policy for grantInvoke().",
              "Required": true,
              "Type": "List",
              "ItemType": "String"
            },
            "role": {
              "Remarks": "Undefined if the function was imported without a role.",
              "Summary": "The IAM role associated with this function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_iam.IRole"
            },
            "lambda": {
              "Remarks": "",
              "Summary": "The underlying `IFunction`.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IFunction"
            }
          }
        },
        "Runtime": {
          "Properties": {
            "bundlingDockerImage": {
              "Remarks": "",
              "Summary": "The Docker image name to be used for bundling in this runtime.",
              "Required": false,
              "Type": "String"
            },
            "isVariable": {
              "Remarks": "",
              "Summary": "Whether the runtime enum is meant to change over time, IE NODEJS_LATEST.",
              "Required": false,
              "Type": "Boolean"
            },
            "supportsCodeGuruProfiling": {
              "Remarks": "",
              "Summary": "Whether this runtime is integrated with and supported for profiling using Amazon CodeGuru Profiler.",
              "Required": false,
              "Type": "Boolean"
            },
            "supportsInlineCode": {
              "Remarks": "",
              "Summary": "Whether the ``ZipFile`` (aka inline code) property can be used with this runtime.",
              "Required": false,
              "Type": "Boolean"
            },
            "supportsSnapStart": {
              "Remarks": "",
              "Summary": "Whether this runtime supports SnapStart.",
              "Required": false,
              "Type": "Boolean"
            }
          },
          "Methods": {
            "runtimeEquals": {
              "Parameters": {
                "other": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.Runtime"
                }
              },
              "Summary": "",
              "Remarks": "",
              "Static": false,
              "ReturnType": "Boolean"
            },
            "toString": {
              "Parameters": {},
              "Summary": "",
              "Remarks": "",
              "Static": false,
              "ReturnType": "String"
            }
          },
          "PublicProperties": {
            "ALL": {
              "Remarks": "",
              "Summary": "A list of all known `Runtime`'s.",
              "Required": true,
              "Type": "List",
              "ItemType": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "DOTNET_6": {
              "Remarks": "",
              "Summary": "The .NET 6 runtime (dotnet6).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "DOTNET_8": {
              "Remarks": "",
              "Summary": "The .NET 8 runtime (dotnet8).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "DOTNET_CORE_1": {
              "Remarks": "",
              "Summary": "The .NET Core 1.0 runtime (dotnetcore1.0).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "DOTNET_CORE_2": {
              "Remarks": "",
              "Summary": "The .NET Core 2.0 runtime (dotnetcore2.0).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "DOTNET_CORE_2_1": {
              "Remarks": "",
              "Summary": "The .NET Core 2.1 runtime (dotnetcore2.1).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "DOTNET_CORE_3_1": {
              "Remarks": "",
              "Summary": "The .NET Core 3.1 runtime (dotnetcore3.1).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "FROM_IMAGE": {
              "Remarks": "",
              "Summary": "A special runtime entry to be used when function is using a docker image.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "GO_1_X": {
              "Remarks": "",
              "Summary": "The Go 1.x runtime (go1.x).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "JAVA_11": {
              "Remarks": "",
              "Summary": "The Java 11 runtime (java11).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "JAVA_17": {
              "Remarks": "",
              "Summary": "The Java 17 runtime (java17).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "JAVA_21": {
              "Remarks": "",
              "Summary": "The Java 21 runtime (java21).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "JAVA_8": {
              "Remarks": "",
              "Summary": "The Java 8 runtime (java8).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "JAVA_8_CORRETTO": {
              "Remarks": "",
              "Summary": "The Java 8 Corretto runtime (java8.al2).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "NODEJS": {
              "Remarks": "",
              "Summary": "The NodeJS runtime (nodejs).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "NODEJS_10_X": {
              "Remarks": "",
              "Summary": "The NodeJS 10.x runtime (nodejs10.x).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "NODEJS_12_X": {
              "Remarks": "",
              "Summary": "The NodeJS 12.x runtime (nodejs12.x).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "NODEJS_14_X": {
              "Remarks": "",
              "Summary": "The NodeJS 14.x runtime (nodejs14.x).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "NODEJS_16_X": {
              "Remarks": "",
              "Summary": "The NodeJS 16.x runtime (nodejs16.x).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "NODEJS_18_X": {
              "Remarks": "",
              "Summary": "The NodeJS 18.x runtime (nodejs18.x).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "NODEJS_20_X": {
              "Remarks": "",
              "Summary": "The NodeJS 20.x runtime (nodejs20.x).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "NODEJS_22_X": {
              "Remarks": "",
              "Summary": "The NodeJS 22.x runtime (nodejs22.x).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "NODEJS_4_3": {
              "Remarks": "",
              "Summary": "The NodeJS 4.3 runtime (nodejs4.3).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "NODEJS_6_10": {
              "Remarks": "",
              "Summary": "The NodeJS 6.10 runtime (nodejs6.10).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "NODEJS_8_10": {
              "Remarks": "",
              "Summary": "The NodeJS 8.10 runtime (nodejs8.10).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "NODEJS_LATEST": {
              "Remarks": "",
              "Summary": "The latest NodeJS version currently available in ALL regions (not necessarily the latest NodeJS version available in YOUR region).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "PROVIDED": {
              "Remarks": "",
              "Summary": "The custom provided runtime (provided).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "PROVIDED_AL2": {
              "Remarks": "",
              "Summary": "The custom provided runtime with Amazon Linux 2 (provided.al2).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "PROVIDED_AL2023": {
              "Remarks": "",
              "Summary": "The custom provided runtime with Amazon Linux 2023 (provided.al2023).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "PYTHON_2_7": {
              "Remarks": "",
              "Summary": "The Python 2.7 runtime (python2.7).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "PYTHON_3_10": {
              "Remarks": "",
              "Summary": "The Python 3.10 runtime (python3.10).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "PYTHON_3_11": {
              "Remarks": "",
              "Summary": "The Python 3.11 runtime (python3.11).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "PYTHON_3_12": {
              "Remarks": "",
              "Summary": "The Python 3.12 runtime (python3.12).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "PYTHON_3_13": {
              "Remarks": "",
              "Summary": "The Python 3.13 runtime (python3.13).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "PYTHON_3_6": {
              "Remarks": "The Python 3.6 runtime is deprecated as of July 2022.",
              "Summary": "The Python 3.6 runtime (python3.6) (not recommended).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "PYTHON_3_7": {
              "Remarks": "",
              "Summary": "The Python 3.7 runtime (python3.7).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "PYTHON_3_8": {
              "Remarks": "",
              "Summary": "The Python 3.8 runtime (python3.8).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "PYTHON_3_9": {
              "Remarks": "",
              "Summary": "The Python 3.9 runtime (python3.9).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "RUBY_2_5": {
              "Remarks": "",
              "Summary": "The Ruby 2.5 runtime (ruby2.5).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "RUBY_2_7": {
              "Remarks": "",
              "Summary": "The Ruby 2.7 runtime (ruby2.7).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "RUBY_3_2": {
              "Remarks": "",
              "Summary": "The Ruby 3.2 runtime (ruby3.2).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "RUBY_3_3": {
              "Remarks": "",
              "Summary": "The Ruby 3.3 runtime (ruby3.3).",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Runtime",
              "Static": true
            },
            "bundlingImage": {
              "Remarks": "",
              "Summary": "The bundling Docker image for this runtime.",
              "Required": true,
              "Type": "aws-cdk-lib.DockerImage"
            },
            "isVariable": {
              "Remarks": "",
              "Summary": "Enabled for runtime enums that always target the latest available.",
              "Required": true,
              "Type": "Boolean"
            },
            "name": {
              "Remarks": "",
              "Summary": "The name of this runtime, as expected by the Lambda resource.",
              "Required": true,
              "Type": "String"
            },
            "supportsCodeGuruProfiling": {
              "Remarks": "",
              "Summary": "Whether this runtime is integrated with and supported for profiling using Amazon CodeGuru Profiler.",
              "Required": true,
              "Type": "Boolean"
            },
            "supportsInlineCode": {
              "Remarks": "",
              "Summary": "Whether the ``ZipFile`` (aka inline code) property can be used with this runtime.",
              "Required": true,
              "Type": "Boolean"
            },
            "supportsSnapStart": {
              "Remarks": "",
              "Summary": "Whether this runtime supports snapstart.",
              "Required": true,
              "Type": "Boolean"
            },
            "family": {
              "Remarks": "",
              "Summary": "The runtime family.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_lambda.RuntimeFamily"
            }
          }
        },
        "RuntimeManagementMode": {
          "Properties": {},
          "Methods": {
            "aws-cdk-lib.aws_lambda.RuntimeManagementMode.manual": {
              "Parameters": {
                "arn": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "You specify a runtime version in your function configuration.",
              "Remarks": "The function uses this runtime version indefinitely.\nIn the rare case in which a new runtime version is incompatible with an existing function,\nyou can use this mode to roll back your function to an earlier runtime version.",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.RuntimeManagementMode"
            }
          },
          "PublicProperties": {
            "AUTO": {
              "Remarks": "We recommend this mode for most customers so that you always benefit from runtime updates.",
              "Summary": "Automatically update to the most recent and secure runtime version using Two-phase runtime version rollout.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.RuntimeManagementMode",
              "Static": true
            },
            "FUNCTION_UPDATE": {
              "Remarks": "This approach synchronizes runtime updates with function deployments,\ngiving you control over when Lambda applies runtime updates.\nWith this mode, you can detect and mitigate rare runtime update incompatibilities early.\nWhen using this mode, you must regularly update your functions to keep their runtime up to date.",
              "Summary": "When you update your function, Lambda updates the runtime of your function to the most recent and secure runtime version.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.RuntimeManagementMode",
              "Static": true
            },
            "mode": {
              "Remarks": "",
              "Summary": "",
              "Required": true,
              "Type": "String"
            },
            "runtimeManagementConfig": {
              "Remarks": "",
              "Summary": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-runtimemanagementconfig.html.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.CfnFunction.RuntimeManagementConfigProperty"
            },
            "arn": {
              "Remarks": "",
              "Summary": "",
              "Required": false,
              "Type": "String"
            }
          }
        },
        "S3Code": {
          "Properties": {},
          "Methods": {
            "aws-cdk-lib.aws_lambda.S3Code.fromAsset": {
              "Parameters": {
                "path": {
                  "Summary": "Either a directory with the Lambda code bundle or a .zip file.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_s3_assets.AssetOptions"
                }
              },
              "Summary": "Loads the function code from a local disk path.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.S3Code.fromAssetImage": {
              "Parameters": {
                "directory": {
                  "Summary": "the directory from which the asset must be created.",
                  "Type": "String"
                },
                "props": {
                  "Summary": "properties to further configure the selected image.",
                  "Type": "aws-cdk-lib.aws_lambda.AssetImageCodeProps"
                }
              },
              "Summary": "Create an ECR image from the specified asset and bind it as the Lambda code.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetImageCode"
            },
            "aws-cdk-lib.aws_lambda.S3Code.fromBucket": {
              "Parameters": {
                "bucket": {
                  "Summary": "The S3 bucket.",
                  "Type": "aws-cdk-lib.aws_s3.IBucket"
                },
                "key": {
                  "Summary": "The object key.",
                  "Type": "String"
                },
                "objectVersion": {
                  "Summary": "Optional S3 object version.",
                  "Type": "String"
                }
              },
              "Summary": "Lambda handler code as an S3 object.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.S3Code"
            },
            "aws-cdk-lib.aws_lambda.S3Code.fromBucketV2": {
              "Parameters": {
                "bucket": {
                  "Summary": "The S3 bucket.",
                  "Type": "aws-cdk-lib.aws_s3.IBucket"
                },
                "key": {
                  "Summary": "The object key.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Optional parameters for setting the code, current optional parameters to set here are 1.",
                  "Type": "aws-cdk-lib.aws_lambda.BucketOptions"
                }
              },
              "Summary": "Lambda handler code as an S3 object.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.S3CodeV2"
            },
            "aws-cdk-lib.aws_lambda.S3Code.fromCfnParameters": {
              "Parameters": {
                "props": {
                  "Summary": "optional construction properties of `CfnParametersCode`.",
                  "Type": "aws-cdk-lib.aws_lambda.CfnParametersCodeProps"
                }
              },
              "Summary": "Creates a new Lambda source defined using CloudFormation parameters.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.CfnParametersCode"
            },
            "aws-cdk-lib.aws_lambda.S3Code.fromCustomCommand": {
              "Parameters": {
                "output": {
                  "Summary": "Where the output of the command will be directed, either a directory or a .zip file with the output Lambda code bundle * For example, if you use the command to run a build script (e.g., [ 'node', 'bundle_code.js' ]), and the build script generates a directory `/my/lambda/code` containing code that should be ran in a Lambda function, then output should be set to `/my/lambda/code`.",
                  "Type": "String"
                },
                "command": {
                  "Summary": "The command which will be executed to generate the output, for example, [ 'node', 'bundle_code.js' ].",
                  "Type": "List"
                },
                "options": {
                  "Summary": "options for the custom command, and other asset options -- but bundling options are not allowed.",
                  "Type": "aws-cdk-lib.aws_lambda.CustomCommandOptions"
                }
              },
              "Summary": "Runs a command to build the code asset that will be used.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.S3Code.fromDockerBuild": {
              "Parameters": {
                "path": {
                  "Summary": "The path to the directory containing the Docker file.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Docker build options.",
                  "Type": "aws-cdk-lib.aws_lambda.DockerBuildAssetOptions"
                }
              },
              "Summary": "Loads the function code from an asset created by a Docker build.",
              "Remarks": "By default, the asset is expected to be located at `/asset` in the\nimage.",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.S3Code.fromEcrImage": {
              "Parameters": {
                "repository": {
                  "Summary": "the ECR repository that the image is in.",
                  "Type": "aws-cdk-lib.aws_ecr.IRepository"
                },
                "props": {
                  "Summary": "properties to further configure the selected image.",
                  "Type": "aws-cdk-lib.aws_lambda.EcrImageCodeProps"
                }
              },
              "Summary": "Use an existing ECR image as the Lambda code.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.EcrImageCode"
            },
            "aws-cdk-lib.aws_lambda.S3Code.fromInline": {
              "Parameters": {
                "code": {
                  "Summary": "The actual handler code (the resulting zip file cannot exceed 4MB).",
                  "Type": "String"
                }
              },
              "Summary": "Inline code for Lambda handler.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.InlineCode"
            },
            "bind": {
              "Parameters": {
                "_scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                }
              },
              "Summary": "Called when the lambda or layer is initialized to allow this object to bind to the stack, add resources and have fun.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.CodeConfig"
            },
            "bindToResource": {
              "Parameters": {
                "_resource": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.CfnResource"
                },
                "_options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.ResourceBindOptions"
                }
              },
              "Summary": "Called after the CFN function resource has been created to allow the code class to bind to it.",
              "Remarks": "Specifically it's required to allow assets to add\nmetadata for tooling like SAM CLI to be able to find their origins.",
              "Static": false
            }
          },
          "PublicProperties": {
            "isInline": {
              "Remarks": "",
              "Summary": "Determines whether this Code is inline code or not.",
              "Required": true,
              "Type": "Boolean"
            }
          }
        },
        "S3CodeV2": {
          "Properties": {
            "objectVersion": {
              "Remarks": "",
              "Summary": "Optional S3 object version.",
              "Required": false,
              "Type": "String"
            },
            "sourceKMSKey": {
              "Remarks": "",
              "Summary": "The ARN of the KMS key used to encrypt the handler code.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_kms.IKey"
            }
          },
          "Methods": {
            "aws-cdk-lib.aws_lambda.S3CodeV2.fromAsset": {
              "Parameters": {
                "path": {
                  "Summary": "Either a directory with the Lambda code bundle or a .zip file.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_s3_assets.AssetOptions"
                }
              },
              "Summary": "Loads the function code from a local disk path.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.S3CodeV2.fromAssetImage": {
              "Parameters": {
                "directory": {
                  "Summary": "the directory from which the asset must be created.",
                  "Type": "String"
                },
                "props": {
                  "Summary": "properties to further configure the selected image.",
                  "Type": "aws-cdk-lib.aws_lambda.AssetImageCodeProps"
                }
              },
              "Summary": "Create an ECR image from the specified asset and bind it as the Lambda code.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetImageCode"
            },
            "aws-cdk-lib.aws_lambda.S3CodeV2.fromBucket": {
              "Parameters": {
                "bucket": {
                  "Summary": "The S3 bucket.",
                  "Type": "aws-cdk-lib.aws_s3.IBucket"
                },
                "key": {
                  "Summary": "The object key.",
                  "Type": "String"
                },
                "objectVersion": {
                  "Summary": "Optional S3 object version.",
                  "Type": "String"
                }
              },
              "Summary": "Lambda handler code as an S3 object.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.S3Code"
            },
            "aws-cdk-lib.aws_lambda.S3CodeV2.fromBucketV2": {
              "Parameters": {
                "bucket": {
                  "Summary": "The S3 bucket.",
                  "Type": "aws-cdk-lib.aws_s3.IBucket"
                },
                "key": {
                  "Summary": "The object key.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Optional parameters for setting the code, current optional parameters to set here are 1.",
                  "Type": "aws-cdk-lib.aws_lambda.BucketOptions"
                }
              },
              "Summary": "Lambda handler code as an S3 object.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.S3CodeV2"
            },
            "aws-cdk-lib.aws_lambda.S3CodeV2.fromCfnParameters": {
              "Parameters": {
                "props": {
                  "Summary": "optional construction properties of `CfnParametersCode`.",
                  "Type": "aws-cdk-lib.aws_lambda.CfnParametersCodeProps"
                }
              },
              "Summary": "Creates a new Lambda source defined using CloudFormation parameters.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.CfnParametersCode"
            },
            "aws-cdk-lib.aws_lambda.S3CodeV2.fromCustomCommand": {
              "Parameters": {
                "output": {
                  "Summary": "Where the output of the command will be directed, either a directory or a .zip file with the output Lambda code bundle * For example, if you use the command to run a build script (e.g., [ 'node', 'bundle_code.js' ]), and the build script generates a directory `/my/lambda/code` containing code that should be ran in a Lambda function, then output should be set to `/my/lambda/code`.",
                  "Type": "String"
                },
                "command": {
                  "Summary": "The command which will be executed to generate the output, for example, [ 'node', 'bundle_code.js' ].",
                  "Type": "List"
                },
                "options": {
                  "Summary": "options for the custom command, and other asset options -- but bundling options are not allowed.",
                  "Type": "aws-cdk-lib.aws_lambda.CustomCommandOptions"
                }
              },
              "Summary": "Runs a command to build the code asset that will be used.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.S3CodeV2.fromDockerBuild": {
              "Parameters": {
                "path": {
                  "Summary": "The path to the directory containing the Docker file.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Docker build options.",
                  "Type": "aws-cdk-lib.aws_lambda.DockerBuildAssetOptions"
                }
              },
              "Summary": "Loads the function code from an asset created by a Docker build.",
              "Remarks": "By default, the asset is expected to be located at `/asset` in the\nimage.",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.AssetCode"
            },
            "aws-cdk-lib.aws_lambda.S3CodeV2.fromEcrImage": {
              "Parameters": {
                "repository": {
                  "Summary": "the ECR repository that the image is in.",
                  "Type": "aws-cdk-lib.aws_ecr.IRepository"
                },
                "props": {
                  "Summary": "properties to further configure the selected image.",
                  "Type": "aws-cdk-lib.aws_lambda.EcrImageCodeProps"
                }
              },
              "Summary": "Use an existing ECR image as the Lambda code.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.EcrImageCode"
            },
            "aws-cdk-lib.aws_lambda.S3CodeV2.fromInline": {
              "Parameters": {
                "code": {
                  "Summary": "The actual handler code (the resulting zip file cannot exceed 4MB).",
                  "Type": "String"
                }
              },
              "Summary": "Inline code for Lambda handler.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.InlineCode"
            },
            "bind": {
              "Parameters": {
                "_scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                }
              },
              "Summary": "Called when the lambda or layer is initialized to allow this object to bind to the stack, add resources and have fun.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.CodeConfig"
            },
            "bindToResource": {
              "Parameters": {
                "_resource": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.CfnResource"
                },
                "_options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.ResourceBindOptions"
                }
              },
              "Summary": "Called after the CFN function resource has been created to allow the code class to bind to it.",
              "Remarks": "Specifically it's required to allow assets to add\nmetadata for tooling like SAM CLI to be able to find their origins.",
              "Static": false
            }
          },
          "PublicProperties": {
            "isInline": {
              "Remarks": "",
              "Summary": "Determines whether this Code is inline code or not.",
              "Required": true,
              "Type": "Boolean"
            }
          }
        },
        "SnapStartConf": {
          "Properties": {},
          "Methods": {},
          "PublicProperties": {
            "ON_PUBLISHED_VERSIONS": {
              "Remarks": "",
              "Summary": "",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.SnapStartConf",
              "Static": true
            }
          }
        },
        "SourceAccessConfigurationType": {
          "Properties": {},
          "Methods": {
            "aws-cdk-lib.aws_lambda.SourceAccessConfigurationType.of": {
              "Parameters": {
                "name": {
                  "Summary": "",
                  "Type": "String"
                }
              },
              "Summary": "A custom source access configuration property.",
              "Remarks": "",
              "Static": true,
              "ReturnType": "aws-cdk-lib.aws_lambda.SourceAccessConfigurationType"
            }
          },
          "PublicProperties": {
            "BASIC_AUTH": {
              "Remarks": "",
              "Summary": "(MQ) The Secrets Manager secret that stores your broker credentials.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.SourceAccessConfigurationType",
              "Static": true
            },
            "CLIENT_CERTIFICATE_TLS_AUTH": {
              "Remarks": "",
              "Summary": "The Secrets Manager ARN of your secret key containing the certificate chain (X.509 PEM), private key (PKCS#8 PEM), and private key password (optional) used for mutual TLS authentication of your MSK/Apache Kafka brokers.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.SourceAccessConfigurationType",
              "Static": true
            },
            "SASL_SCRAM_256_AUTH": {
              "Remarks": "",
              "Summary": "The Secrets Manager ARN of your secret key used for SASL SCRAM-256 authentication of your Self-Managed Apache Kafka brokers.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.SourceAccessConfigurationType",
              "Static": true
            },
            "SASL_SCRAM_512_AUTH": {
              "Remarks": "",
              "Summary": "The Secrets Manager ARN of your secret key used for SASL SCRAM-512 authentication of your Self-Managed Apache Kafka brokers.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.SourceAccessConfigurationType",
              "Static": true
            },
            "SERVER_ROOT_CA_CERTIFICATE": {
              "Remarks": "",
              "Summary": "The Secrets Manager ARN of your secret key containing the root CA certificate (X.509 PEM) used for TLS encryption of your Apache Kafka brokers.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.SourceAccessConfigurationType",
              "Static": true
            },
            "VPC_SECURITY_GROUP": {
              "Remarks": "",
              "Summary": "The VPC security group used to manage access to your Self-Managed Apache Kafka brokers.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.SourceAccessConfigurationType",
              "Static": true
            },
            "VPC_SUBNET": {
              "Remarks": "Lambda connects to these subnets to fetch data from your Self-Managed Apache Kafka cluster.",
              "Summary": "The subnets associated with your VPC.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.SourceAccessConfigurationType",
              "Static": true
            },
            "type": {
              "Remarks": "",
              "Summary": "The key to use in `SourceAccessConfigurationProperty.Type` property in CloudFormation.",
              "Required": true,
              "Type": "String"
            }
          }
        }
      },
      "InterfaceTypes": {
        "IAlias": {
          "Properties": {},
          "Methods": {
            "applyRemovalPolicy": {
              "Parameters": {
                "policy": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.RemovalPolicy"
                }
              },
              "Summary": "Apply the given removal policy to this resource.",
              "Remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
              "Static": false
            },
            "addEventSource": {
              "Parameters": {
                "source": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IEventSource"
                }
              },
              "Summary": "Adds an event source to this function.",
              "Remarks": "Event sources are implemented in the aws-cdk-lib/aws-lambda-event-sources module.\n\nThe following example adds an SQS Queue as an event source:\n```\nimport { SqsEventSource } from 'aws-cdk-lib/aws-lambda-event-sources';\nmyFunction.addEventSource(new SqsEventSource(myQueue));\n```",
              "Static": false
            },
            "addEventSourceMapping": {
              "Parameters": {
                "id": {
                  "Summary": "construct ID.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "mapping options.",
                  "Type": "aws-cdk-lib.aws_lambda.EventSourceMappingOptions"
                }
              },
              "Summary": "Adds an event source that maps to this AWS Lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.EventSourceMapping"
            },
            "addFunctionUrl": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.FunctionUrlOptions"
                }
              },
              "Summary": "Adds a url to this lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.FunctionUrl"
            },
            "addPermission": {
              "Parameters": {
                "id": {
                  "Summary": "The id for the permission construct.",
                  "Type": "String"
                },
                "permission": {
                  "Summary": "The permission to grant to this Lambda function.",
                  "Type": "aws-cdk-lib.aws_lambda.Permission"
                }
              },
              "Summary": "Adds a permission to the Lambda resource policy.",
              "Remarks": "",
              "Static": false
            },
            "addToRolePolicy": {
              "Parameters": {
                "statement": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.PolicyStatement"
                }
              },
              "Summary": "Adds a statement to the IAM role assumed by the instance.",
              "Remarks": "",
              "Static": false
            },
            "configureAsyncInvoke": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.EventInvokeConfigOptions"
                }
              },
              "Summary": "Configures options for asynchronous invocation.",
              "Remarks": "",
              "Static": false
            },
            "grantInvoke": {
              "Parameters": {
                "identity": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeCompositePrincipal": {
              "Parameters": {
                "compositePrincipal": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.CompositePrincipal"
                }
              },
              "Summary": "Grant multiple principals the ability to invoke this Lambda via CompositePrincipal.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "List"
            },
            "grantInvokeLatestVersion": {
              "Parameters": {
                "identity": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke the $LATEST version or unqualified version of this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeUrl": {
              "Parameters": {
                "identity": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda Function URL.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeVersion": {
              "Parameters": {
                "identity": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                },
                "version": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IVersion"
                }
              },
              "Summary": "Grant the given identity permissions to invoke the given version of this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "metric": {
              "Parameters": {
                "metricName": {
                  "Summary": "",
                  "Type": "String"
                },
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Return the given named metric for this Lambda Return the given named metric for this Function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricDuration": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the Duration of this Lambda How long execution of this Lambda takes.",
              "Remarks": "Average over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricErrors": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How many invocations of this Lambda fail.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricInvocations": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the number of invocations of this Lambda How often this Lambda is invoked.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricThrottles": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the number of throttled invocations of this Lambda How often this Lambda is throttled.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          },
          "PublicProperties": {
            "node": {
              "Remarks": "",
              "Summary": "The tree node.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "env": {
              "Remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
              "Summary": "The environment this resource belongs to.",
              "Required": true,
              "Type": "aws-cdk-lib.ResourceEnvironment"
            },
            "stack": {
              "Remarks": "",
              "Summary": "The stack in which this resource is defined.",
              "Required": true,
              "Type": "aws-cdk-lib.Stack"
            },
            "connections": {
              "Remarks": "",
              "Summary": "The network connections associated with this resource.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_ec2.Connections"
            },
            "grantPrincipal": {
              "Remarks": "",
              "Summary": "The principal to grant permissions to.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_iam.IPrincipal"
            },
            "architecture": {
              "Remarks": "",
              "Summary": "The system architectures compatible with this lambda function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Architecture"
            },
            "functionArn": {
              "Remarks": "",
              "Summary": "The ARN of the function.",
              "Required": true,
              "Type": "String"
            },
            "functionName": {
              "Remarks": "",
              "Summary": "The name of the function.",
              "Required": true,
              "Type": "String"
            },
            "isBoundToVpc": {
              "Remarks": "If this is is `false`, trying to access the `connections` object will fail.",
              "Summary": "Whether or not this Lambda function was bound to a VPC.",
              "Required": true,
              "Type": "Boolean"
            },
            "latestVersion": {
              "Remarks": "Note that this is reference to a non-specific AWS Lambda version, which\nmeans the function this version refers to can return different results in\ndifferent invocations.\n\nTo obtain a reference to an explicit version which references the current\nfunction configuration, use `lambdaFunction.currentVersion` instead.",
              "Summary": "The `$LATEST` version of this function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IVersion"
            },
            "permissionsNode": {
              "Remarks": "",
              "Summary": "The construct node where permissions are attached.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "resourceArnsForGrantInvoke": {
              "Remarks": "This property is for cdk modules to consume only. You should not need to use this property.\nInstead, use grantInvoke() directly.",
              "Summary": "The ARN(s) to put into the resource field of the generated IAM policy for grantInvoke().",
              "Required": true,
              "Type": "List",
              "ItemType": "String"
            },
            "role": {
              "Remarks": "",
              "Summary": "The IAM role associated with this function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_iam.IRole"
            },
            "aliasName": {
              "Remarks": "",
              "Summary": "Name of this alias.",
              "Required": true,
              "Type": "String"
            },
            "version": {
              "Remarks": "",
              "Summary": "The underlying Lambda function version.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IVersion"
            }
          }
        },
        "ICodeSigningConfig": {
          "Properties": {},
          "Methods": {
            "applyRemovalPolicy": {
              "Parameters": {
                "policy": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.RemovalPolicy"
                }
              },
              "Summary": "Apply the given removal policy to this resource.",
              "Remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
              "Static": false
            }
          },
          "PublicProperties": {
            "node": {
              "Remarks": "",
              "Summary": "The tree node.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "env": {
              "Remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
              "Summary": "The environment this resource belongs to.",
              "Required": true,
              "Type": "aws-cdk-lib.ResourceEnvironment"
            },
            "stack": {
              "Remarks": "",
              "Summary": "The stack in which this resource is defined.",
              "Required": true,
              "Type": "aws-cdk-lib.Stack"
            },
            "codeSigningConfigArn": {
              "Remarks": "",
              "Summary": "The ARN of Code Signing Config.",
              "Required": true,
              "Type": "String"
            },
            "codeSigningConfigId": {
              "Remarks": "",
              "Summary": "The id of Code Signing Config.",
              "Required": true,
              "Type": "String"
            }
          }
        },
        "IDestination": {
          "Properties": {},
          "Methods": {
            "bind": {
              "Parameters": {
                "scope": {
                  "Summary": "",
                  "Type": "constructs.Construct"
                },
                "fn": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IFunction"
                },
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.DestinationOptions"
                }
              },
              "Summary": "Binds this destination to the Lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.DestinationConfig"
            }
          },
          "PublicProperties": {}
        },
        "IEventSource": {
          "Properties": {},
          "Methods": {
            "bind": {
              "Parameters": {
                "target": {
                  "Summary": "That lambda function to bind to.",
                  "Type": "aws-cdk-lib.aws_lambda.IFunction"
                }
              },
              "Summary": "Called by `lambda.addEventSource` to allow the event source to bind to this function.",
              "Remarks": "",
              "Static": false
            }
          },
          "PublicProperties": {}
        },
        "IEventSourceDlq": {
          "Properties": {},
          "Methods": {
            "bind": {
              "Parameters": {
                "target": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IEventSourceMapping"
                },
                "targetHandler": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IFunction"
                }
              },
              "Summary": "Returns the DLQ destination config of the DLQ.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.DlqDestinationConfig"
            }
          },
          "PublicProperties": {}
        },
        "IEventSourceMapping": {
          "Properties": {},
          "Methods": {
            "applyRemovalPolicy": {
              "Parameters": {
                "policy": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.RemovalPolicy"
                }
              },
              "Summary": "Apply the given removal policy to this resource.",
              "Remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
              "Static": false
            }
          },
          "PublicProperties": {
            "node": {
              "Remarks": "",
              "Summary": "The tree node.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "env": {
              "Remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
              "Summary": "The environment this resource belongs to.",
              "Required": true,
              "Type": "aws-cdk-lib.ResourceEnvironment"
            },
            "stack": {
              "Remarks": "",
              "Summary": "The stack in which this resource is defined.",
              "Required": true,
              "Type": "aws-cdk-lib.Stack"
            },
            "eventSourceMappingArn": {
              "Remarks": "",
              "Summary": "The ARN of the event source mapping (i.e. arn:aws:lambda:region:account-id:event-source-mapping/event-source-mapping-id).",
              "Required": true,
              "Type": "String"
            },
            "eventSourceMappingId": {
              "Remarks": "",
              "Summary": "The identifier for this EventSourceMapping.",
              "Required": true,
              "Type": "String"
            }
          }
        },
        "IFunction": {
          "Properties": {},
          "Methods": {
            "applyRemovalPolicy": {
              "Parameters": {
                "policy": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.RemovalPolicy"
                }
              },
              "Summary": "Apply the given removal policy to this resource.",
              "Remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
              "Static": false
            },
            "addEventSource": {
              "Parameters": {
                "source": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IEventSource"
                }
              },
              "Summary": "Adds an event source to this function.",
              "Remarks": "Event sources are implemented in the aws-cdk-lib/aws-lambda-event-sources module.\n\nThe following example adds an SQS Queue as an event source:\n```\nimport { SqsEventSource } from 'aws-cdk-lib/aws-lambda-event-sources';\nmyFunction.addEventSource(new SqsEventSource(myQueue));\n```",
              "Static": false
            },
            "addEventSourceMapping": {
              "Parameters": {
                "id": {
                  "Summary": "construct ID.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "mapping options.",
                  "Type": "aws-cdk-lib.aws_lambda.EventSourceMappingOptions"
                }
              },
              "Summary": "Adds an event source that maps to this AWS Lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.EventSourceMapping"
            },
            "addFunctionUrl": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.FunctionUrlOptions"
                }
              },
              "Summary": "Adds a url to this lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.FunctionUrl"
            },
            "addPermission": {
              "Parameters": {
                "id": {
                  "Summary": "The id for the permission construct.",
                  "Type": "String"
                },
                "permission": {
                  "Summary": "The permission to grant to this Lambda function.",
                  "Type": "aws-cdk-lib.aws_lambda.Permission"
                }
              },
              "Summary": "Adds a permission to the Lambda resource policy.",
              "Remarks": "",
              "Static": false
            },
            "addToRolePolicy": {
              "Parameters": {
                "statement": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.PolicyStatement"
                }
              },
              "Summary": "Adds a statement to the IAM role assumed by the instance.",
              "Remarks": "",
              "Static": false
            },
            "configureAsyncInvoke": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.EventInvokeConfigOptions"
                }
              },
              "Summary": "Configures options for asynchronous invocation.",
              "Remarks": "",
              "Static": false
            },
            "grantInvoke": {
              "Parameters": {
                "identity": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeCompositePrincipal": {
              "Parameters": {
                "compositePrincipal": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.CompositePrincipal"
                }
              },
              "Summary": "Grant multiple principals the ability to invoke this Lambda via CompositePrincipal.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "List"
            },
            "grantInvokeLatestVersion": {
              "Parameters": {
                "identity": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke the $LATEST version or unqualified version of this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeUrl": {
              "Parameters": {
                "identity": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda Function URL.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeVersion": {
              "Parameters": {
                "identity": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                },
                "version": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IVersion"
                }
              },
              "Summary": "Grant the given identity permissions to invoke the given version of this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "metric": {
              "Parameters": {
                "metricName": {
                  "Summary": "",
                  "Type": "String"
                },
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Return the given named metric for this Lambda Return the given named metric for this Function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricDuration": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the Duration of this Lambda How long execution of this Lambda takes.",
              "Remarks": "Average over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricErrors": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How many invocations of this Lambda fail.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricInvocations": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the number of invocations of this Lambda How often this Lambda is invoked.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricThrottles": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the number of throttled invocations of this Lambda How often this Lambda is throttled.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          },
          "PublicProperties": {
            "node": {
              "Remarks": "",
              "Summary": "The tree node.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "env": {
              "Remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
              "Summary": "The environment this resource belongs to.",
              "Required": true,
              "Type": "aws-cdk-lib.ResourceEnvironment"
            },
            "stack": {
              "Remarks": "",
              "Summary": "The stack in which this resource is defined.",
              "Required": true,
              "Type": "aws-cdk-lib.Stack"
            },
            "connections": {
              "Remarks": "",
              "Summary": "The network connections associated with this resource.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_ec2.Connections"
            },
            "grantPrincipal": {
              "Remarks": "",
              "Summary": "The principal to grant permissions to.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_iam.IPrincipal"
            },
            "architecture": {
              "Remarks": "",
              "Summary": "The system architectures compatible with this lambda function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Architecture"
            },
            "functionArn": {
              "Remarks": "",
              "Summary": "The ARN of the function.",
              "Required": true,
              "Type": "String"
            },
            "functionName": {
              "Remarks": "",
              "Summary": "The name of the function.",
              "Required": true,
              "Type": "String"
            },
            "isBoundToVpc": {
              "Remarks": "If this is is `false`, trying to access the `connections` object will fail.",
              "Summary": "Whether or not this Lambda function was bound to a VPC.",
              "Required": true,
              "Type": "Boolean"
            },
            "latestVersion": {
              "Remarks": "Note that this is reference to a non-specific AWS Lambda version, which\nmeans the function this version refers to can return different results in\ndifferent invocations.\n\nTo obtain a reference to an explicit version which references the current\nfunction configuration, use `lambdaFunction.currentVersion` instead.",
              "Summary": "The `$LATEST` version of this function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IVersion"
            },
            "permissionsNode": {
              "Remarks": "",
              "Summary": "The construct node where permissions are attached.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "resourceArnsForGrantInvoke": {
              "Remarks": "This property is for cdk modules to consume only. You should not need to use this property.\nInstead, use grantInvoke() directly.",
              "Summary": "The ARN(s) to put into the resource field of the generated IAM policy for grantInvoke().",
              "Required": true,
              "Type": "List",
              "ItemType": "String"
            },
            "role": {
              "Remarks": "",
              "Summary": "The IAM role associated with this function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_iam.IRole"
            }
          }
        },
        "IFunctionUrl": {
          "Properties": {},
          "Methods": {
            "applyRemovalPolicy": {
              "Parameters": {
                "policy": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.RemovalPolicy"
                }
              },
              "Summary": "Apply the given removal policy to this resource.",
              "Remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
              "Static": false
            },
            "grantInvokeUrl": {
              "Parameters": {
                "identity": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda Function URL.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            }
          },
          "PublicProperties": {
            "node": {
              "Remarks": "",
              "Summary": "The tree node.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "env": {
              "Remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
              "Summary": "The environment this resource belongs to.",
              "Required": true,
              "Type": "aws-cdk-lib.ResourceEnvironment"
            },
            "stack": {
              "Remarks": "",
              "Summary": "The stack in which this resource is defined.",
              "Required": true,
              "Type": "aws-cdk-lib.Stack"
            },
            "authType": {
              "Remarks": "",
              "Summary": "The authType of the function URL, used for access control.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.FunctionUrlAuthType"
            },
            "functionArn": {
              "Remarks": "",
              "Summary": "The ARN of the function this URL refers to.",
              "Required": true,
              "Type": "String"
            },
            "url": {
              "Remarks": "",
              "Summary": "The url of the Lambda function.",
              "Required": true,
              "Type": "String"
            }
          }
        },
        "ILayerVersion": {
          "Properties": {},
          "Methods": {
            "applyRemovalPolicy": {
              "Parameters": {
                "policy": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.RemovalPolicy"
                }
              },
              "Summary": "Apply the given removal policy to this resource.",
              "Remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
              "Static": false
            },
            "addPermission": {
              "Parameters": {
                "id": {
                  "Summary": "the ID of the grant in the construct tree.",
                  "Type": "String"
                },
                "permission": {
                  "Summary": "the identification of the grantee.",
                  "Type": "aws-cdk-lib.aws_lambda.LayerVersionPermission"
                }
              },
              "Summary": "Add permission for this layer version to specific entities.",
              "Remarks": "Usage within\nthe same account where the layer is defined is always allowed and does not\nrequire calling this method. Note that the principal that creates the\nLambda function using the layer (for example, a CloudFormation changeset\nexecution role) also needs to have the ``lambda:GetLayerVersion``\npermission on the layer version.",
              "Static": false
            }
          },
          "PublicProperties": {
            "node": {
              "Remarks": "",
              "Summary": "The tree node.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "env": {
              "Remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
              "Summary": "The environment this resource belongs to.",
              "Required": true,
              "Type": "aws-cdk-lib.ResourceEnvironment"
            },
            "stack": {
              "Remarks": "",
              "Summary": "The stack in which this resource is defined.",
              "Required": true,
              "Type": "aws-cdk-lib.Stack"
            },
            "layerVersionArn": {
              "Remarks": "",
              "Summary": "The ARN of the Lambda Layer version that this Layer defines.",
              "Required": true,
              "Type": "String"
            },
            "compatibleRuntimes": {
              "Remarks": "",
              "Summary": "The runtimes compatible with this Layer.",
              "Required": false,
              "Type": "List",
              "ItemType": "aws-cdk-lib.aws_lambda.Runtime"
            }
          }
        },
        "IScalableFunctionAttribute": {
          "Properties": {},
          "Methods": {
            "scaleOnSchedule": {
              "Parameters": {
                "id": {
                  "Summary": "",
                  "Type": "String"
                },
                "actions": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_applicationautoscaling.ScalingSchedule"
                }
              },
              "Summary": "Scale out or in based on schedule.",
              "Remarks": "",
              "Static": false
            },
            "scaleOnUtilization": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.UtilizationScalingOptions"
                }
              },
              "Summary": "Scale out or in to keep utilization at a given level.",
              "Remarks": "The utilization is tracked by the\nLambdaProvisionedConcurrencyUtilization metric, emitted by lambda. See:\nhttps://docs.aws.amazon.com/lambda/latest/dg/monitoring-metrics.html#monitoring-metrics-concurrency",
              "Static": false
            }
          },
          "PublicProperties": {
            "node": {
              "Remarks": "",
              "Summary": "The tree node.",
              "Required": true,
              "Type": "constructs.Node"
            }
          }
        },
        "IVersion": {
          "Properties": {},
          "Methods": {
            "applyRemovalPolicy": {
              "Parameters": {
                "policy": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.RemovalPolicy"
                }
              },
              "Summary": "Apply the given removal policy to this resource.",
              "Remarks": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).",
              "Static": false
            },
            "addEventSource": {
              "Parameters": {
                "source": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IEventSource"
                }
              },
              "Summary": "Adds an event source to this function.",
              "Remarks": "Event sources are implemented in the aws-cdk-lib/aws-lambda-event-sources module.\n\nThe following example adds an SQS Queue as an event source:\n```\nimport { SqsEventSource } from 'aws-cdk-lib/aws-lambda-event-sources';\nmyFunction.addEventSource(new SqsEventSource(myQueue));\n```",
              "Static": false
            },
            "addEventSourceMapping": {
              "Parameters": {
                "id": {
                  "Summary": "construct ID.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "mapping options.",
                  "Type": "aws-cdk-lib.aws_lambda.EventSourceMappingOptions"
                }
              },
              "Summary": "Adds an event source that maps to this AWS Lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.EventSourceMapping"
            },
            "addFunctionUrl": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.FunctionUrlOptions"
                }
              },
              "Summary": "Adds a url to this lambda function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.FunctionUrl"
            },
            "addPermission": {
              "Parameters": {
                "id": {
                  "Summary": "The id for the permission construct.",
                  "Type": "String"
                },
                "permission": {
                  "Summary": "The permission to grant to this Lambda function.",
                  "Type": "aws-cdk-lib.aws_lambda.Permission"
                }
              },
              "Summary": "Adds a permission to the Lambda resource policy.",
              "Remarks": "",
              "Static": false
            },
            "addToRolePolicy": {
              "Parameters": {
                "statement": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.PolicyStatement"
                }
              },
              "Summary": "Adds a statement to the IAM role assumed by the instance.",
              "Remarks": "",
              "Static": false
            },
            "configureAsyncInvoke": {
              "Parameters": {
                "options": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.EventInvokeConfigOptions"
                }
              },
              "Summary": "Configures options for asynchronous invocation.",
              "Remarks": "",
              "Static": false
            },
            "grantInvoke": {
              "Parameters": {
                "identity": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeCompositePrincipal": {
              "Parameters": {
                "compositePrincipal": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.CompositePrincipal"
                }
              },
              "Summary": "Grant multiple principals the ability to invoke this Lambda via CompositePrincipal.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "List"
            },
            "grantInvokeLatestVersion": {
              "Parameters": {
                "identity": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke the $LATEST version or unqualified version of this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeUrl": {
              "Parameters": {
                "identity": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                }
              },
              "Summary": "Grant the given identity permissions to invoke this Lambda Function URL.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "grantInvokeVersion": {
              "Parameters": {
                "identity": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_iam.IGrantable"
                },
                "version": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_lambda.IVersion"
                }
              },
              "Summary": "Grant the given identity permissions to invoke the given version of this Lambda.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_iam.Grant"
            },
            "metric": {
              "Parameters": {
                "metricName": {
                  "Summary": "",
                  "Type": "String"
                },
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Return the given named metric for this Lambda Return the given named metric for this Function.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricDuration": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the Duration of this Lambda How long execution of this Lambda takes.",
              "Remarks": "Average over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricErrors": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "How many invocations of this Lambda fail.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricInvocations": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the number of invocations of this Lambda How often this Lambda is invoked.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "metricThrottles": {
              "Parameters": {
                "props": {
                  "Summary": "",
                  "Type": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
                }
              },
              "Summary": "Metric for the number of throttled invocations of this Lambda How often this Lambda is throttled.",
              "Remarks": "Sum over 5 minutes",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_cloudwatch.Metric"
            },
            "addAlias": {
              "Parameters": {
                "aliasName": {
                  "Summary": "The name of the alias.",
                  "Type": "String"
                },
                "options": {
                  "Summary": "Alias options.",
                  "Type": "aws-cdk-lib.aws_lambda.AliasOptions"
                }
              },
              "Summary": "Defines an alias for this version.",
              "Remarks": "",
              "Static": false,
              "ReturnType": "aws-cdk-lib.aws_lambda.Alias"
            }
          },
          "PublicProperties": {
            "node": {
              "Remarks": "",
              "Summary": "The tree node.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "env": {
              "Remarks": "For resources that are created and managed by the CDK\n(generally, those created by creating new class instances like Role, Bucket, etc.),\nthis is always the same as the environment of the stack they belong to;\nhowever, for imported resources\n(those obtained from static methods like fromRoleArn, fromBucketName, etc.),\nthat might be different than the stack they were imported into.",
              "Summary": "The environment this resource belongs to.",
              "Required": true,
              "Type": "aws-cdk-lib.ResourceEnvironment"
            },
            "stack": {
              "Remarks": "",
              "Summary": "The stack in which this resource is defined.",
              "Required": true,
              "Type": "aws-cdk-lib.Stack"
            },
            "connections": {
              "Remarks": "",
              "Summary": "The network connections associated with this resource.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_ec2.Connections"
            },
            "grantPrincipal": {
              "Remarks": "",
              "Summary": "The principal to grant permissions to.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_iam.IPrincipal"
            },
            "architecture": {
              "Remarks": "",
              "Summary": "The system architectures compatible with this lambda function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.Architecture"
            },
            "functionArn": {
              "Remarks": "",
              "Summary": "The ARN of the function.",
              "Required": true,
              "Type": "String"
            },
            "functionName": {
              "Remarks": "",
              "Summary": "The name of the function.",
              "Required": true,
              "Type": "String"
            },
            "isBoundToVpc": {
              "Remarks": "If this is is `false`, trying to access the `connections` object will fail.",
              "Summary": "Whether or not this Lambda function was bound to a VPC.",
              "Required": true,
              "Type": "Boolean"
            },
            "latestVersion": {
              "Remarks": "Note that this is reference to a non-specific AWS Lambda version, which\nmeans the function this version refers to can return different results in\ndifferent invocations.\n\nTo obtain a reference to an explicit version which references the current\nfunction configuration, use `lambdaFunction.currentVersion` instead.",
              "Summary": "The `$LATEST` version of this function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IVersion"
            },
            "permissionsNode": {
              "Remarks": "",
              "Summary": "The construct node where permissions are attached.",
              "Required": true,
              "Type": "constructs.Node"
            },
            "resourceArnsForGrantInvoke": {
              "Remarks": "This property is for cdk modules to consume only. You should not need to use this property.\nInstead, use grantInvoke() directly.",
              "Summary": "The ARN(s) to put into the resource field of the generated IAM policy for grantInvoke().",
              "Required": true,
              "Type": "List",
              "ItemType": "String"
            },
            "role": {
              "Remarks": "",
              "Summary": "The IAM role associated with this function.",
              "Required": false,
              "Type": "aws-cdk-lib.aws_iam.IRole"
            },
            "edgeArn": {
              "Remarks": "",
              "Summary": "The ARN of the version for Lambda@Edge.",
              "Required": true,
              "Type": "String"
            },
            "lambda": {
              "Remarks": "",
              "Summary": "The underlying AWS Lambda function.",
              "Required": true,
              "Type": "aws-cdk-lib.aws_lambda.IFunction"
            },
            "version": {
              "Remarks": "",
              "Summary": "The most recently deployed version of this function.",
              "Required": true,
              "Type": "String"
            }
          }
        }
      }
    }
  }
}
